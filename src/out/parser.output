Terminals unused in grammar

    BOOLEAN
    ERROR


State 24 conflicts: 18 shift/reduce, 24 reduce/reduce
State 29 conflicts: 2 shift/reduce
State 54 conflicts: 2 shift/reduce, 1 reduce/reduce
State 56 conflicts: 1 shift/reduce
State 65 conflicts: 19 shift/reduce
State 84 conflicts: 16 shift/reduce
State 105 conflicts: 2 shift/reduce
State 106 conflicts: 17 shift/reduce
State 110 conflicts: 1 shift/reduce
State 111 conflicts: 20 shift/reduce
State 181 conflicts: 49 reduce/reduce
State 182 conflicts: 49 reduce/reduce
State 187 conflicts: 17 shift/reduce
State 194 conflicts: 1 shift/reduce
State 203 conflicts: 1 shift/reduce
State 204 conflicts: 19 shift/reduce
State 210 conflicts: 20 shift/reduce, 27 reduce/reduce
State 211 conflicts: 18 shift/reduce
State 212 conflicts: 19 shift/reduce
State 253 conflicts: 1 shift/reduce
State 260 conflicts: 17 shift/reduce
State 281 conflicts: 19 shift/reduce
State 282 conflicts: 1 shift/reduce
State 319 conflicts: 1 shift/reduce
State 320 conflicts: 19 shift/reduce


Grammar

    0 $accept: program $end

    1 program: PROGRAM IDENT_NAME SEMICOLON routine DOT
    2        | PROGRAM IDENT_NAME SEMICOLON routine
    3        | PROGRAM IDENT_NAME routine DOT
    4        | PROGRAM IDENT_NAME routine

    5 routine: routine_head routine_body

    6 routine_head: const_part type_part var_part routine_part

    7 routine_part: ε
    8             | routine_part fun_decl
    9             | routine_part proc_decl
   10             | fun_decl
   11             | proc_decl

   12 fun_decl: fun_head SEMICOLON routine SEMICOLON
   13         | fun_head SEMICOLON routine
   14         | fun_head routine SEMICOLON
   15         | fun_head routine

   16 fun_head: FUNCTION IDENT_NAME params COLON simple_type

   17 proc_decl: proc_head SEMICOLON routine SEMICOLON
   18          | proc_head routine SEMICOLON
   19          | proc_head SEMICOLON routine
   20          | proc_head routine

   21 proc_head: PROCEDURE IDENT_NAME params

   22 params: ε
   23       | LP params_decl RP

   24 params_decl: params_decl SEMICOLON params_type
   25            | params_type

   26 params_type: VAR name_list COLON simple_type
   27            | name_list COLON simple_type

   28 var_part: ε
   29         | VAR var_decl_list

   30 var_decl_list: var_decl_list var_decl
   31              | var_decl

   32 var_decl: name_list COLON type_decl SEMICOLON
   33         | name_list COLON type_decl

   34 const_part: ε
   35           | CONST const_expr_list

   36 const_expr_list: const_expr_list const_expr
   37                | const_expr

   38 const_expr: identifier EQUAL const_value SEMICOLON
   39           | identifier EQUAL const_value

   40 const_value: INTEGER
   41            | MINUS INTEGER
   42            | CHAR
   43            | STRING
   44            | TRUE
   45            | FALSE
   46            | MAXINT
   47            | MINUS MAXINT

   48 type_part: ε
   49          | TYPE type_decl_list

   50 type_decl_list: type_decl_list type_def
   51               | type_def

   52 type_def: identifier EQUAL type_decl SEMICOLON
   53         | identifier EQUAL type_decl

   54 type_decl: simple_type
   55          | array_type_decl
   56          | record_type_decl

   57 record_type_decl: RECORD field_decl_list END

   58 field_decl_list: field_decl_list field_decl
   59                | field_decl

   60 field_decl: name_list COLON type_decl SEMICOLON
   61           | name_list COLON type_decl

   62 array_type_decl: ARRAY LB simple_type RB OF type_decl

   63 simple_type: identifier
   64            | LP name_list RP
   65            | const_value DOUBLEDOT const_value
   66            | identifier DOUBLEDOT identifier
   67            | INT_TYPE
   68            | BOOL_TYPE
   69            | CHAR_TYPE

   70 name_list: name_list COMMA identifier
   71          | identifier

   72 identifier: IDENT_NAME

   73 routine_body: compound_stmt

   74 compound_stmt: BBEGIN stmt_list END
   75              | BBEGIN stmt_list

   76 compound_loop_stmt: BBEGIN loop_stmt_list END
   77                   | BBEGIN loop_stmt_list

   78 stmt_list: ε
   79          | stmt_list stmt SEMICOLON
   80          | stmt_list stmt

   81 loop_stmt_list: ε
   82               | loop_stmt_list loop_stmt SEMICOLON
   83               | loop_stmt_list loop_stmt

   84 stmt: INTEGER COLON no_label_stmt
   85     | no_label_stmt

   86 loop_stmt: INTEGER COLON no_label_loop_stmt
   87          | no_label_loop_stmt

   88 no_label_stmt: assign_stmt
   89              | compound_stmt
   90              | goto_stmt
   91              | if_stmt
   92              | repeat_stmt
   93              | while_stmt
   94              | case_stmt
   95              | for_stmt
   96              | proc_stmt

   97 no_label_loop_stmt: assign_stmt
   98                   | compound_loop_stmt
   99                   | goto_stmt
  100                   | if_loop_stmt
  101                   | repeat_stmt
  102                   | while_stmt
  103                   | case_loop_stmt
  104                   | for_stmt
  105                   | proc_stmt
  106                   | BREAK
  107                   | CONTINUE

  108 assign_stmt: lvalue ASSIGN expression

  109 goto_stmt: GOTO INTEGER

  110 if_stmt: IF expression THEN stmt else_clause
  111        | IF expression stmt else_clause

  112 if_loop_stmt: IF expression THEN loop_stmt else_loop_clause
  113             | IF expression loop_stmt else_loop_clause

  114 else_clause: ε
  115            | ELSE stmt

  116 else_loop_clause: ε
  117                 | ELSE loop_stmt

  118 repeat_stmt: REPEAT loop_stmt_list UNTIL expression
  119            | ε

  120 while_stmt: WHILE expression DO loop_stmt

  121 case_stmt: CASE expression OF case_expr_list END

  122 case_loop_stmt: CASE expression OF case_loop_expr_list END

  123 case_expr_list: case_expr_list case_expr
  124               | case_expr

  125 case_loop_expr_list: case_loop_expr_list case_loop_expr
  126                    | case_loop_expr

  127 case_expr: expression COLON stmt SEMICOLON
  128          | OTHERWISE stmt SEMICOLON

  129 case_loop_expr: expression COLON loop_stmt SEMICOLON
  130               | OTHERWISE loop_stmt SEMICOLON

  131 for_stmt: for_head loop_stmt

  132 for_head: FOR identifier ASSIGN expression TO expression DO
  133         | FOR identifier ASSIGN expression DOWNTO expression DO

  134 proc_stmt: identifier
  135          | identifier LP args_list RP
  136          | READ LP factor RP
  137          | READLN
  138          | WRITE LP args_list RP
  139          | WRITELN
  140          | WRITELN LP args_list RP
  141          | MEMORYREAD LP args_list RP
  142          | MEMORYWRITE LP args_list RP
  143          | STACKREAD LP args_list RP
  144          | STACKWRITE LP args_list RP

  145 args_list: args_list COMMA expression
  146          | expression

  147 expression: expression GE expr
  148           | expression GT expr
  149           | expression LE expr
  150           | expression LT expr
  151           | expression EQUAL expr
  152           | expression UNEQUAL expr
  153           | expr

  154 expr: expr PLUS term
  155     | expr MINUS term
  156     | expr OR term
  157     | term

  158 term: term MUL factor
  159     | term DIV factor
  160     | term MOD factor
  161     | term AND factor
  162     | factor

  163 factor: identifier LP args_list RP
  164       | lvalue
  165       | const_value
  166       | LP expression RP
  167       | NOT factor
  168       | MINUS factor
  169       | ABS LP args_list RP
  170       | CHR LP args_list RP
  171       | ODD LP args_list RP
  172       | ORD LP args_list RP
  173       | PRED LP args_list RP
  174       | SUCC LP args_list RP
  175       | TOINT LP args_list RP
  176       | TOCHAR LP args_list RP
  177       | TOBOOL LP args_list RP

  178 lvalue: identifier
  179       | identifier LB expression RB
  180       | lvalue LB expression RB
  181       | identifier DOT identifier
  182       | lvalue DOT identifier


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    PROGRAM <token> (258) 1 2 3 4
    FUNCTION <token> (259) 16
    PROCEDURE <token> (260) 21
    CONST <token> (261) 35
    TYPE <token> (262) 49
    VAR <token> (263) 26 29
    BBEGIN <token> (264) 74 75 76 77
    END <token> (265) 57 74 76 121 122
    IDENT_NAME <token> (266) 1 2 3 4 16 21 72
    INTEGER <token> (267) 40 41 84 86 109
    BOOLEAN <token> (268)
    CHAR <token> (269) 42
    STRING <token> (270) 43
    TRUE <token> (271) 44
    FALSE <token> (272) 45
    MAXINT <token> (273) 46 47
    READ <token> (274) 136
    READLN <token> (275) 137
    WRITE <token> (276) 138
    WRITELN <token> (277) 139 140
    MEMORYREAD <token> (278) 141
    MEMORYWRITE <token> (279) 142
    STACKREAD <token> (280) 143
    STACKWRITE <token> (281) 144
    ABS <token> (282) 169
    CHR <token> (283) 170
    ODD <token> (284) 171
    ORD <token> (285) 172
    PRED <token> (286) 173
    SUCC <token> (287) 174
    TOINT <token> (288) 175
    TOCHAR <token> (289) 176
    TOBOOL <token> (290) 177
    IF <token> (291) 110 111 112 113
    THEN <token> (292) 110 112
    ELSE <token> (293) 115 117
    REPEAT <token> (294) 118
    UNTIL <token> (295) 118
    WHILE <token> (296) 120
    DO <token> (297) 120 132 133
    CASE <token> (298) 121 122
    TO <token> (299) 132
    DOWNTO <token> (300) 133
    FOR <token> (301) 132 133
    EQUAL <token> (302) 38 39 52 53 151
    UNEQUAL <token> (303) 152
    GE <token> (304) 147
    GT <token> (305) 148
    LE <token> (306) 149
    LT <token> (307) 150
    ASSIGN <token> (308) 108 132 133
    PLUS <token> (309) 154
    MINUS <token> (310) 41 47 155 168
    MUL <token> (311) 158
    DIV <token> (312) 159
    OR <token> (313) 156
    AND <token> (314) 161
    NOT <token> (315) 167
    MOD <token> (316) 160
    LB <token> (317) 62 179 180
    RB <token> (318) 62 179 180
    LP <token> (319) 23 64 135 136 138 140 141 142 143 144 163 166 169 170 171 172 173 174 175 176 177
    RP <token> (320) 23 64 135 136 138 140 141 142 143 144 163 166 169 170 171 172 173 174 175 176 177
    SEMICOLON <token> (321) 1 2 12 13 14 17 18 19 24 32 38 52 60 79 82 127 128 129 130
    DOT <token> (322) 1 3 181 182
    DOUBLEDOT <token> (323) 65 66
    COMMA <token> (324) 70 145
    COLON <token> (325) 16 26 27 32 33 60 61 84 86 127 129
    INT_TYPE <token> (326) 67
    BOOL_TYPE <token> (327) 68
    CHAR_TYPE <token> (328) 69
    ARRAY <token> (329) 62
    OF <token> (330) 62 121 122
    RECORD <token> (331) 57
    GOTO <token> (332) 109
    BREAK <token> (333) 106
    CONTINUE <token> (334) 107
    OTHERWISE (335) 128 130
    ERROR <token> (336)


Nonterminals, with rules where they appear

    $accept (82)
        on left: 0
    program <programNode> (83)
        on left: 1 2 3 4
        on right: 0
    routine <routineNode> (84)
        on left: 5
        on right: 1 2 3 4 12 13 14 15 17 18 19 20
    routine_head <routineHeadNode> (85)
        on left: 6
        on right: 5
    routine_part <routinePartList> (86)
        on left: 7 8 9 10 11
        on right: 6 8 9
    fun_decl <routineDeclarationNode> (87)
        on left: 12 13 14 15
        on right: 8 10
    fun_head <routineDeclarationNode> (88)
        on left: 16
        on right: 12 13 14 15
    proc_decl <routineDeclarationNode> (89)
        on left: 17 18 19 20
        on right: 9 11
    proc_head <routineDeclarationNode> (90)
        on left: 21
        on right: 17 18 19 20
    params <paramsNode> (91)
        on left: 22 23
        on right: 16 21
    params_decl <paramsGroupList> (92)
        on left: 24 25
        on right: 23 24
    params_type <paramsGroupNode> (93)
        on left: 26 27
        on right: 24 25
    var_part <varPartList> (94)
        on left: 28 29
        on right: 6
    var_decl_list <varPartList> (95)
        on left: 30 31
        on right: 29 30
    var_decl <varPartListElement> (96)
        on left: 32 33
        on right: 30 31
    const_part <constPartList> (97)
        on left: 34 35
        on right: 6
    const_expr_list <constPartList> (98)
        on left: 36 37
        on right: 35 36
    const_expr <constPartListElement> (99)
        on left: 38 39
        on right: 36 37
    const_value <constantNode> (100)
        on left: 40 41 42 43 44 45 46 47
        on right: 38 39 65 165
    type_part <typePartList> (101)
        on left: 48 49
        on right: 6
    type_decl_list <typePartList> (102)
        on left: 50 51
        on right: 49 50
    type_def <typePartListElement> (103)
        on left: 52 53
        on right: 50 51
    type_decl <typeNode> (104)
        on left: 54 55 56
        on right: 32 33 52 53 60 61 62
    record_type_decl <recordTypeNode> (105)
        on left: 57
        on right: 56
    field_decl_list <fieldDeclList> (106)
        on left: 58 59
        on right: 57 58
    field_decl <fieldDeclListElement> (107)
        on left: 60 61
        on right: 58 59
    array_type_decl <arrayTypeNode> (108)
        on left: 62
        on right: 55
    simple_type <simpleTypeNode> (109)
        on left: 63 64 65 66 67 68 69
        on right: 16 26 27 54 62
    name_list <identifierList> (110)
        on left: 70 71
        on right: 26 27 32 33 60 61 64 70
    identifier <identifierNode> (111)
        on left: 72
        on right: 38 39 52 53 63 66 70 71 132 133 134 135 163 178 179 181 182
    routine_body <routineBodyNode> (112)
        on left: 73
        on right: 5
    compound_stmt <compoundStatementNode> (113)
        on left: 74 75
        on right: 73 89
    compound_loop_stmt <compoundStatementNode> (114)
        on left: 76 77
        on right: 98
    stmt_list <statementNodeList> (115)
        on left: 78 79 80
        on right: 74 75 79 80
    loop_stmt_list <statementNodeList> (116)
        on left: 81 82 83
        on right: 76 77 82 83 118
    stmt <statementNode> (117)
        on left: 84 85
        on right: 79 80 110 111 115 127 128
    loop_stmt <statementNode> (118)
        on left: 86 87
        on right: 82 83 112 113 117 120 129 130 131
    no_label_stmt <statementNode> (119)
        on left: 88 89 90 91 92 93 94 95 96
        on right: 84 85
    no_label_loop_stmt <statementNode> (120)
        on left: 97 98 99 100 101 102 103 104 105 106 107
        on right: 86 87
    assign_stmt <assignNode> (121)
        on left: 108
        on right: 88 97
    goto_stmt <gotoNode> (122)
        on left: 109
        on right: 90 99
    if_stmt <ifNode> (123)
        on left: 110 111
        on right: 91
    if_loop_stmt <ifNode> (124)
        on left: 112 113
        on right: 100
    else_clause <ifNode> (125)
        on left: 114 115
        on right: 110 111
    else_loop_clause <ifNode> (126)
        on left: 116 117
        on right: 112 113
    repeat_stmt <repeatNode> (127)
        on left: 118 119
        on right: 92 101
    while_stmt <whileNode> (128)
        on left: 120
        on right: 93 102
    case_stmt <caseNode> (129)
        on left: 121
        on right: 94
    case_loop_stmt <caseNode> (130)
        on left: 122
        on right: 103
    case_expr_list <caseExprList> (131)
        on left: 123 124
        on right: 121 123
    case_loop_expr_list <caseExprList> (132)
        on left: 125 126
        on right: 122 125
    case_expr <caseExpr> (133)
        on left: 127 128
        on right: 123 124
    case_loop_expr <caseExpr> (134)
        on left: 129 130
        on right: 125 126
    for_stmt <forNode> (135)
        on left: 131
        on right: 95 104
    for_head <forNode> (136)
        on left: 132 133
        on right: 131
    proc_stmt <callNode> (137)
        on left: 134 135 136 137 138 139 140 141 142 143 144
        on right: 96 105
    args_list <argsList> (138)
        on left: 145 146
        on right: 135 138 140 141 142 143 144 145 163 169 170 171 172 173 174 175 176 177
    expression <expressionNode> (139)
        on left: 147 148 149 150 151 152 153
        on right: 108 110 111 112 113 118 120 121 122 127 129 132 133 145 146 147 148 149 150 151 152 166 179 180
    expr <expressionNode> (140)
        on left: 154 155 156 157
        on right: 147 148 149 150 151 152 153 154 155 156
    term <expressionNode> (141)
        on left: 158 159 160 161 162
        on right: 154 155 156 157 158 159 160 161
    factor <expressionNode> (142)
        on left: 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177
        on right: 136 158 159 160 161 162 167 168
    lvalue <expressionNode> (143)
        on left: 178 179 180 181 182
        on right: 108 164 180 182


State 0

    0 $accept: • program $end

    PROGRAM  shift, and go to state 1

    program  go to state 2


State 1

    1 program: PROGRAM • IDENT_NAME SEMICOLON routine DOT
    2        | PROGRAM • IDENT_NAME SEMICOLON routine
    3        | PROGRAM • IDENT_NAME routine DOT
    4        | PROGRAM • IDENT_NAME routine

    IDENT_NAME  shift, and go to state 3


State 2

    0 $accept: program • $end

    $end  shift, and go to state 4


State 3

    1 program: PROGRAM IDENT_NAME • SEMICOLON routine DOT
    2        | PROGRAM IDENT_NAME • SEMICOLON routine
    3        | PROGRAM IDENT_NAME • routine DOT
    4        | PROGRAM IDENT_NAME • routine

    CONST      shift, and go to state 5
    SEMICOLON  shift, and go to state 6

    $default  reduce using rule 34 (const_part)

    routine       go to state 7
    routine_head  go to state 8
    const_part    go to state 9


State 4

    0 $accept: program $end •

    $default  accept


State 5

   35 const_part: CONST • const_expr_list

    IDENT_NAME  shift, and go to state 10

    const_expr_list  go to state 11
    const_expr       go to state 12
    identifier       go to state 13


State 6

    1 program: PROGRAM IDENT_NAME SEMICOLON • routine DOT
    2        | PROGRAM IDENT_NAME SEMICOLON • routine

    CONST  shift, and go to state 5

    $default  reduce using rule 34 (const_part)

    routine       go to state 14
    routine_head  go to state 8
    const_part    go to state 9


State 7

    3 program: PROGRAM IDENT_NAME routine • DOT
    4        | PROGRAM IDENT_NAME routine •

    DOT  shift, and go to state 15

    $default  reduce using rule 4 (program)


State 8

    5 routine: routine_head • routine_body

    BBEGIN  shift, and go to state 16

    routine_body   go to state 17
    compound_stmt  go to state 18


State 9

    6 routine_head: const_part • type_part var_part routine_part

    TYPE  shift, and go to state 19

    $default  reduce using rule 48 (type_part)

    type_part  go to state 20


State 10

   72 identifier: IDENT_NAME •

    $default  reduce using rule 72 (identifier)


State 11

   35 const_part: CONST const_expr_list •
   36 const_expr_list: const_expr_list • const_expr

    IDENT_NAME  shift, and go to state 10

    $default  reduce using rule 35 (const_part)

    const_expr  go to state 21
    identifier  go to state 13


State 12

   37 const_expr_list: const_expr •

    $default  reduce using rule 37 (const_expr_list)


State 13

   38 const_expr: identifier • EQUAL const_value SEMICOLON
   39           | identifier • EQUAL const_value

    EQUAL  shift, and go to state 22


State 14

    1 program: PROGRAM IDENT_NAME SEMICOLON routine • DOT
    2        | PROGRAM IDENT_NAME SEMICOLON routine •

    DOT  shift, and go to state 23

    $default  reduce using rule 2 (program)


State 15

    3 program: PROGRAM IDENT_NAME routine DOT •

    $default  reduce using rule 3 (program)


State 16

   74 compound_stmt: BBEGIN • stmt_list END
   75              | BBEGIN • stmt_list

    $default  reduce using rule 78 (stmt_list)

    stmt_list  go to state 24


State 17

    5 routine: routine_head routine_body •

    $default  reduce using rule 5 (routine)


State 18

   73 routine_body: compound_stmt •

    $default  reduce using rule 73 (routine_body)


State 19

   49 type_part: TYPE • type_decl_list

    IDENT_NAME  shift, and go to state 10

    type_decl_list  go to state 25
    type_def        go to state 26
    identifier      go to state 27


State 20

    6 routine_head: const_part type_part • var_part routine_part

    VAR  shift, and go to state 28

    $default  reduce using rule 28 (var_part)

    var_part  go to state 29


State 21

   36 const_expr_list: const_expr_list const_expr •

    $default  reduce using rule 36 (const_expr_list)


State 22

   38 const_expr: identifier EQUAL • const_value SEMICOLON
   39           | identifier EQUAL • const_value

    INTEGER  shift, and go to state 30
    CHAR     shift, and go to state 31
    STRING   shift, and go to state 32
    TRUE     shift, and go to state 33
    FALSE    shift, and go to state 34
    MAXINT   shift, and go to state 35
    MINUS    shift, and go to state 36

    const_value  go to state 37


State 23

    1 program: PROGRAM IDENT_NAME SEMICOLON routine DOT •

    $default  reduce using rule 1 (program)


State 24

   74 compound_stmt: BBEGIN stmt_list • END
   75              | BBEGIN stmt_list •
   79 stmt_list: stmt_list • stmt SEMICOLON
   80          | stmt_list • stmt

    BBEGIN       shift, and go to state 16
    END          shift, and go to state 38
    IDENT_NAME   shift, and go to state 10
    INTEGER      shift, and go to state 39
    READ         shift, and go to state 40
    READLN       shift, and go to state 41
    WRITE        shift, and go to state 42
    WRITELN      shift, and go to state 43
    MEMORYREAD   shift, and go to state 44
    MEMORYWRITE  shift, and go to state 45
    STACKREAD    shift, and go to state 46
    STACKWRITE   shift, and go to state 47
    IF           shift, and go to state 48
    REPEAT       shift, and go to state 49
    WHILE        shift, and go to state 50
    CASE         shift, and go to state 51
    FOR          shift, and go to state 52
    GOTO         shift, and go to state 53

    $end         reduce using rule 75 (compound_stmt)
    $end         [reduce using rule 119 (repeat_stmt)]
    FUNCTION     reduce using rule 75 (compound_stmt)
    FUNCTION     [reduce using rule 119 (repeat_stmt)]
    PROCEDURE    reduce using rule 75 (compound_stmt)
    PROCEDURE    [reduce using rule 119 (repeat_stmt)]
    BBEGIN       [reduce using rule 75 (compound_stmt)]
    BBEGIN       [reduce using rule 119 (repeat_stmt)]
    END          [reduce using rule 75 (compound_stmt)]
    END          [reduce using rule 119 (repeat_stmt)]
    IDENT_NAME   [reduce using rule 75 (compound_stmt)]
    IDENT_NAME   [reduce using rule 119 (repeat_stmt)]
    INTEGER      [reduce using rule 75 (compound_stmt)]
    INTEGER      [reduce using rule 119 (repeat_stmt)]
    READ         [reduce using rule 75 (compound_stmt)]
    READ         [reduce using rule 119 (repeat_stmt)]
    READLN       [reduce using rule 75 (compound_stmt)]
    READLN       [reduce using rule 119 (repeat_stmt)]
    WRITE        [reduce using rule 75 (compound_stmt)]
    WRITE        [reduce using rule 119 (repeat_stmt)]
    WRITELN      [reduce using rule 75 (compound_stmt)]
    WRITELN      [reduce using rule 119 (repeat_stmt)]
    MEMORYREAD   [reduce using rule 75 (compound_stmt)]
    MEMORYREAD   [reduce using rule 119 (repeat_stmt)]
    MEMORYWRITE  [reduce using rule 75 (compound_stmt)]
    MEMORYWRITE  [reduce using rule 119 (repeat_stmt)]
    STACKREAD    [reduce using rule 75 (compound_stmt)]
    STACKREAD    [reduce using rule 119 (repeat_stmt)]
    STACKWRITE   [reduce using rule 75 (compound_stmt)]
    STACKWRITE   [reduce using rule 119 (repeat_stmt)]
    IF           [reduce using rule 75 (compound_stmt)]
    IF           [reduce using rule 119 (repeat_stmt)]
    ELSE         reduce using rule 75 (compound_stmt)
    ELSE         [reduce using rule 119 (repeat_stmt)]
    REPEAT       [reduce using rule 75 (compound_stmt)]
    REPEAT       [reduce using rule 119 (repeat_stmt)]
    WHILE        [reduce using rule 75 (compound_stmt)]
    WHILE        [reduce using rule 119 (repeat_stmt)]
    CASE         [reduce using rule 75 (compound_stmt)]
    CASE         [reduce using rule 119 (repeat_stmt)]
    FOR          [reduce using rule 75 (compound_stmt)]
    FOR          [reduce using rule 119 (repeat_stmt)]
    SEMICOLON    reduce using rule 75 (compound_stmt)
    SEMICOLON    [reduce using rule 119 (repeat_stmt)]
    DOT          reduce using rule 75 (compound_stmt)
    DOT          [reduce using rule 119 (repeat_stmt)]
    GOTO         [reduce using rule 75 (compound_stmt)]
    GOTO         [reduce using rule 119 (repeat_stmt)]
    $default     reduce using rule 75 (compound_stmt)

    identifier     go to state 54
    compound_stmt  go to state 55
    stmt           go to state 56
    no_label_stmt  go to state 57
    assign_stmt    go to state 58
    goto_stmt      go to state 59
    if_stmt        go to state 60
    repeat_stmt    go to state 61
    while_stmt     go to state 62
    case_stmt      go to state 63
    for_stmt       go to state 64
    for_head       go to state 65
    proc_stmt      go to state 66
    lvalue         go to state 67


State 25

   49 type_part: TYPE type_decl_list •
   50 type_decl_list: type_decl_list • type_def

    IDENT_NAME  shift, and go to state 10

    $default  reduce using rule 49 (type_part)

    type_def    go to state 68
    identifier  go to state 27


State 26

   51 type_decl_list: type_def •

    $default  reduce using rule 51 (type_decl_list)


State 27

   52 type_def: identifier • EQUAL type_decl SEMICOLON
   53         | identifier • EQUAL type_decl

    EQUAL  shift, and go to state 69


State 28

   29 var_part: VAR • var_decl_list

    IDENT_NAME  shift, and go to state 10

    var_decl_list  go to state 70
    var_decl       go to state 71
    name_list      go to state 72
    identifier     go to state 73


State 29

    6 routine_head: const_part type_part var_part • routine_part

    FUNCTION   shift, and go to state 74
    PROCEDURE  shift, and go to state 75

    FUNCTION   [reduce using rule 7 (routine_part)]
    PROCEDURE  [reduce using rule 7 (routine_part)]
    $default   reduce using rule 7 (routine_part)

    routine_part  go to state 76
    fun_decl      go to state 77
    fun_head      go to state 78
    proc_decl     go to state 79
    proc_head     go to state 80


State 30

   40 const_value: INTEGER •

    $default  reduce using rule 40 (const_value)


State 31

   42 const_value: CHAR •

    $default  reduce using rule 42 (const_value)


State 32

   43 const_value: STRING •

    $default  reduce using rule 43 (const_value)


State 33

   44 const_value: TRUE •

    $default  reduce using rule 44 (const_value)


State 34

   45 const_value: FALSE •

    $default  reduce using rule 45 (const_value)


State 35

   46 const_value: MAXINT •

    $default  reduce using rule 46 (const_value)


State 36

   41 const_value: MINUS • INTEGER
   47            | MINUS • MAXINT

    INTEGER  shift, and go to state 81
    MAXINT   shift, and go to state 82


State 37

   38 const_expr: identifier EQUAL const_value • SEMICOLON
   39           | identifier EQUAL const_value •

    SEMICOLON  shift, and go to state 83

    $default  reduce using rule 39 (const_expr)


State 38

   74 compound_stmt: BBEGIN stmt_list END •

    $default  reduce using rule 74 (compound_stmt)


State 39

   84 stmt: INTEGER • COLON no_label_stmt

    COLON  shift, and go to state 84


State 40

  136 proc_stmt: READ • LP factor RP

    LP  shift, and go to state 85


State 41

  137 proc_stmt: READLN •

    $default  reduce using rule 137 (proc_stmt)


State 42

  138 proc_stmt: WRITE • LP args_list RP

    LP  shift, and go to state 86


State 43

  139 proc_stmt: WRITELN •
  140          | WRITELN • LP args_list RP

    LP  shift, and go to state 87

    $default  reduce using rule 139 (proc_stmt)


State 44

  141 proc_stmt: MEMORYREAD • LP args_list RP

    LP  shift, and go to state 88


State 45

  142 proc_stmt: MEMORYWRITE • LP args_list RP

    LP  shift, and go to state 89


State 46

  143 proc_stmt: STACKREAD • LP args_list RP

    LP  shift, and go to state 90


State 47

  144 proc_stmt: STACKWRITE • LP args_list RP

    LP  shift, and go to state 91


State 48

  110 if_stmt: IF • expression THEN stmt else_clause
  111        | IF • expression stmt else_clause

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 92
    CHR         shift, and go to state 93
    ODD         shift, and go to state 94
    ORD         shift, and go to state 95
    PRED        shift, and go to state 96
    SUCC        shift, and go to state 97
    TOINT       shift, and go to state 98
    TOCHAR      shift, and go to state 99
    TOBOOL      shift, and go to state 100
    MINUS       shift, and go to state 101
    NOT         shift, and go to state 102
    LP          shift, and go to state 103

    const_value  go to state 104
    identifier   go to state 105
    expression   go to state 106
    expr         go to state 107
    term         go to state 108
    factor       go to state 109
    lvalue       go to state 110


State 49

  118 repeat_stmt: REPEAT • loop_stmt_list UNTIL expression

    $default  reduce using rule 81 (loop_stmt_list)

    loop_stmt_list  go to state 111


State 50

  120 while_stmt: WHILE • expression DO loop_stmt

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 92
    CHR         shift, and go to state 93
    ODD         shift, and go to state 94
    ORD         shift, and go to state 95
    PRED        shift, and go to state 96
    SUCC        shift, and go to state 97
    TOINT       shift, and go to state 98
    TOCHAR      shift, and go to state 99
    TOBOOL      shift, and go to state 100
    MINUS       shift, and go to state 101
    NOT         shift, and go to state 102
    LP          shift, and go to state 103

    const_value  go to state 104
    identifier   go to state 105
    expression   go to state 112
    expr         go to state 107
    term         go to state 108
    factor       go to state 109
    lvalue       go to state 110


State 51

  121 case_stmt: CASE • expression OF case_expr_list END

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 92
    CHR         shift, and go to state 93
    ODD         shift, and go to state 94
    ORD         shift, and go to state 95
    PRED        shift, and go to state 96
    SUCC        shift, and go to state 97
    TOINT       shift, and go to state 98
    TOCHAR      shift, and go to state 99
    TOBOOL      shift, and go to state 100
    MINUS       shift, and go to state 101
    NOT         shift, and go to state 102
    LP          shift, and go to state 103

    const_value  go to state 104
    identifier   go to state 105
    expression   go to state 113
    expr         go to state 107
    term         go to state 108
    factor       go to state 109
    lvalue       go to state 110


State 52

  132 for_head: FOR • identifier ASSIGN expression TO expression DO
  133         | FOR • identifier ASSIGN expression DOWNTO expression DO

    IDENT_NAME  shift, and go to state 10

    identifier  go to state 114


State 53

  109 goto_stmt: GOTO • INTEGER

    INTEGER  shift, and go to state 115


State 54

  134 proc_stmt: identifier •
  135          | identifier • LP args_list RP
  178 lvalue: identifier •
  179       | identifier • LB expression RB
  181       | identifier • DOT identifier

    LB   shift, and go to state 116
    LP   shift, and go to state 117
    DOT  shift, and go to state 118

    ASSIGN    reduce using rule 178 (lvalue)
    LB        [reduce using rule 178 (lvalue)]
    DOT       [reduce using rule 134 (proc_stmt)]
    DOT       [reduce using rule 178 (lvalue)]
    $default  reduce using rule 134 (proc_stmt)


State 55

   89 no_label_stmt: compound_stmt •

    $default  reduce using rule 89 (no_label_stmt)


State 56

   79 stmt_list: stmt_list stmt • SEMICOLON
   80          | stmt_list stmt •

    SEMICOLON  shift, and go to state 119

    SEMICOLON  [reduce using rule 80 (stmt_list)]
    $default   reduce using rule 80 (stmt_list)


State 57

   85 stmt: no_label_stmt •

    $default  reduce using rule 85 (stmt)


State 58

   88 no_label_stmt: assign_stmt •

    $default  reduce using rule 88 (no_label_stmt)


State 59

   90 no_label_stmt: goto_stmt •

    $default  reduce using rule 90 (no_label_stmt)


State 60

   91 no_label_stmt: if_stmt •

    $default  reduce using rule 91 (no_label_stmt)


State 61

   92 no_label_stmt: repeat_stmt •

    $default  reduce using rule 92 (no_label_stmt)


State 62

   93 no_label_stmt: while_stmt •

    $default  reduce using rule 93 (no_label_stmt)


State 63

   94 no_label_stmt: case_stmt •

    $default  reduce using rule 94 (no_label_stmt)


State 64

   95 no_label_stmt: for_stmt •

    $default  reduce using rule 95 (no_label_stmt)


State 65

  131 for_stmt: for_head • loop_stmt

    BBEGIN       shift, and go to state 120
    IDENT_NAME   shift, and go to state 10
    INTEGER      shift, and go to state 121
    READ         shift, and go to state 40
    READLN       shift, and go to state 41
    WRITE        shift, and go to state 42
    WRITELN      shift, and go to state 43
    MEMORYREAD   shift, and go to state 44
    MEMORYWRITE  shift, and go to state 45
    STACKREAD    shift, and go to state 46
    STACKWRITE   shift, and go to state 47
    IF           shift, and go to state 122
    REPEAT       shift, and go to state 49
    WHILE        shift, and go to state 50
    CASE         shift, and go to state 123
    FOR          shift, and go to state 52
    GOTO         shift, and go to state 53
    BREAK        shift, and go to state 124
    CONTINUE     shift, and go to state 125

    BBEGIN       [reduce using rule 119 (repeat_stmt)]
    IDENT_NAME   [reduce using rule 119 (repeat_stmt)]
    INTEGER      [reduce using rule 119 (repeat_stmt)]
    READ         [reduce using rule 119 (repeat_stmt)]
    READLN       [reduce using rule 119 (repeat_stmt)]
    WRITE        [reduce using rule 119 (repeat_stmt)]
    WRITELN      [reduce using rule 119 (repeat_stmt)]
    MEMORYREAD   [reduce using rule 119 (repeat_stmt)]
    MEMORYWRITE  [reduce using rule 119 (repeat_stmt)]
    STACKREAD    [reduce using rule 119 (repeat_stmt)]
    STACKWRITE   [reduce using rule 119 (repeat_stmt)]
    IF           [reduce using rule 119 (repeat_stmt)]
    REPEAT       [reduce using rule 119 (repeat_stmt)]
    WHILE        [reduce using rule 119 (repeat_stmt)]
    CASE         [reduce using rule 119 (repeat_stmt)]
    FOR          [reduce using rule 119 (repeat_stmt)]
    GOTO         [reduce using rule 119 (repeat_stmt)]
    BREAK        [reduce using rule 119 (repeat_stmt)]
    CONTINUE     [reduce using rule 119 (repeat_stmt)]
    $default     reduce using rule 119 (repeat_stmt)

    identifier          go to state 54
    compound_loop_stmt  go to state 126
    loop_stmt           go to state 127
    no_label_loop_stmt  go to state 128
    assign_stmt         go to state 129
    goto_stmt           go to state 130
    if_loop_stmt        go to state 131
    repeat_stmt         go to state 132
    while_stmt          go to state 133
    case_loop_stmt      go to state 134
    for_stmt            go to state 135
    for_head            go to state 65
    proc_stmt           go to state 136
    lvalue              go to state 67


State 66

   96 no_label_stmt: proc_stmt •

    $default  reduce using rule 96 (no_label_stmt)


State 67

  108 assign_stmt: lvalue • ASSIGN expression
  180 lvalue: lvalue • LB expression RB
  182       | lvalue • DOT identifier

    ASSIGN  shift, and go to state 137
    LB      shift, and go to state 138
    DOT     shift, and go to state 139


State 68

   50 type_decl_list: type_decl_list type_def •

    $default  reduce using rule 50 (type_decl_list)


State 69

   52 type_def: identifier EQUAL • type_decl SEMICOLON
   53         | identifier EQUAL • type_decl

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    MINUS       shift, and go to state 36
    LP          shift, and go to state 140
    INT_TYPE    shift, and go to state 141
    BOOL_TYPE   shift, and go to state 142
    CHAR_TYPE   shift, and go to state 143
    ARRAY       shift, and go to state 144
    RECORD      shift, and go to state 145

    const_value       go to state 146
    type_decl         go to state 147
    record_type_decl  go to state 148
    array_type_decl   go to state 149
    simple_type       go to state 150
    identifier        go to state 151


State 70

   29 var_part: VAR var_decl_list •
   30 var_decl_list: var_decl_list • var_decl

    IDENT_NAME  shift, and go to state 10

    $default  reduce using rule 29 (var_part)

    var_decl    go to state 152
    name_list   go to state 72
    identifier  go to state 73


State 71

   31 var_decl_list: var_decl •

    $default  reduce using rule 31 (var_decl_list)


State 72

   32 var_decl: name_list • COLON type_decl SEMICOLON
   33         | name_list • COLON type_decl
   70 name_list: name_list • COMMA identifier

    COMMA  shift, and go to state 153
    COLON  shift, and go to state 154


State 73

   71 name_list: identifier •

    $default  reduce using rule 71 (name_list)


State 74

   16 fun_head: FUNCTION • IDENT_NAME params COLON simple_type

    IDENT_NAME  shift, and go to state 155


State 75

   21 proc_head: PROCEDURE • IDENT_NAME params

    IDENT_NAME  shift, and go to state 156


State 76

    6 routine_head: const_part type_part var_part routine_part •
    8 routine_part: routine_part • fun_decl
    9             | routine_part • proc_decl

    FUNCTION   shift, and go to state 74
    PROCEDURE  shift, and go to state 75

    $default  reduce using rule 6 (routine_head)

    fun_decl   go to state 157
    fun_head   go to state 78
    proc_decl  go to state 158
    proc_head  go to state 80


State 77

   10 routine_part: fun_decl •

    $default  reduce using rule 10 (routine_part)


State 78

   12 fun_decl: fun_head • SEMICOLON routine SEMICOLON
   13         | fun_head • SEMICOLON routine
   14         | fun_head • routine SEMICOLON
   15         | fun_head • routine

    CONST      shift, and go to state 5
    SEMICOLON  shift, and go to state 159

    $default  reduce using rule 34 (const_part)

    routine       go to state 160
    routine_head  go to state 8
    const_part    go to state 9


State 79

   11 routine_part: proc_decl •

    $default  reduce using rule 11 (routine_part)


State 80

   17 proc_decl: proc_head • SEMICOLON routine SEMICOLON
   18          | proc_head • routine SEMICOLON
   19          | proc_head • SEMICOLON routine
   20          | proc_head • routine

    CONST      shift, and go to state 5
    SEMICOLON  shift, and go to state 161

    $default  reduce using rule 34 (const_part)

    routine       go to state 162
    routine_head  go to state 8
    const_part    go to state 9


State 81

   41 const_value: MINUS INTEGER •

    $default  reduce using rule 41 (const_value)


State 82

   47 const_value: MINUS MAXINT •

    $default  reduce using rule 47 (const_value)


State 83

   38 const_expr: identifier EQUAL const_value SEMICOLON •

    $default  reduce using rule 38 (const_expr)


State 84

   84 stmt: INTEGER COLON • no_label_stmt

    BBEGIN       shift, and go to state 16
    IDENT_NAME   shift, and go to state 10
    READ         shift, and go to state 40
    READLN       shift, and go to state 41
    WRITE        shift, and go to state 42
    WRITELN      shift, and go to state 43
    MEMORYREAD   shift, and go to state 44
    MEMORYWRITE  shift, and go to state 45
    STACKREAD    shift, and go to state 46
    STACKWRITE   shift, and go to state 47
    IF           shift, and go to state 48
    REPEAT       shift, and go to state 49
    WHILE        shift, and go to state 50
    CASE         shift, and go to state 51
    FOR          shift, and go to state 52
    GOTO         shift, and go to state 53

    BBEGIN       [reduce using rule 119 (repeat_stmt)]
    IDENT_NAME   [reduce using rule 119 (repeat_stmt)]
    READ         [reduce using rule 119 (repeat_stmt)]
    READLN       [reduce using rule 119 (repeat_stmt)]
    WRITE        [reduce using rule 119 (repeat_stmt)]
    WRITELN      [reduce using rule 119 (repeat_stmt)]
    MEMORYREAD   [reduce using rule 119 (repeat_stmt)]
    MEMORYWRITE  [reduce using rule 119 (repeat_stmt)]
    STACKREAD    [reduce using rule 119 (repeat_stmt)]
    STACKWRITE   [reduce using rule 119 (repeat_stmt)]
    IF           [reduce using rule 119 (repeat_stmt)]
    REPEAT       [reduce using rule 119 (repeat_stmt)]
    WHILE        [reduce using rule 119 (repeat_stmt)]
    CASE         [reduce using rule 119 (repeat_stmt)]
    FOR          [reduce using rule 119 (repeat_stmt)]
    GOTO         [reduce using rule 119 (repeat_stmt)]
    $default     reduce using rule 119 (repeat_stmt)

    identifier     go to state 54
    compound_stmt  go to state 55
    no_label_stmt  go to state 163
    assign_stmt    go to state 58
    goto_stmt      go to state 59
    if_stmt        go to state 60
    repeat_stmt    go to state 61
    while_stmt     go to state 62
    case_stmt      go to state 63
    for_stmt       go to state 64
    for_head       go to state 65
    proc_stmt      go to state 66
    lvalue         go to state 67


State 85

  136 proc_stmt: READ LP • factor RP

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 92
    CHR         shift, and go to state 93
    ODD         shift, and go to state 94
    ORD         shift, and go to state 95
    PRED        shift, and go to state 96
    SUCC        shift, and go to state 97
    TOINT       shift, and go to state 98
    TOCHAR      shift, and go to state 99
    TOBOOL      shift, and go to state 100
    MINUS       shift, and go to state 101
    NOT         shift, and go to state 102
    LP          shift, and go to state 103

    const_value  go to state 104
    identifier   go to state 105
    factor       go to state 164
    lvalue       go to state 110


State 86

  138 proc_stmt: WRITE LP • args_list RP

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 92
    CHR         shift, and go to state 93
    ODD         shift, and go to state 94
    ORD         shift, and go to state 95
    PRED        shift, and go to state 96
    SUCC        shift, and go to state 97
    TOINT       shift, and go to state 98
    TOCHAR      shift, and go to state 99
    TOBOOL      shift, and go to state 100
    MINUS       shift, and go to state 101
    NOT         shift, and go to state 102
    LP          shift, and go to state 103

    const_value  go to state 104
    identifier   go to state 105
    args_list    go to state 165
    expression   go to state 166
    expr         go to state 107
    term         go to state 108
    factor       go to state 109
    lvalue       go to state 110


State 87

  140 proc_stmt: WRITELN LP • args_list RP

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 92
    CHR         shift, and go to state 93
    ODD         shift, and go to state 94
    ORD         shift, and go to state 95
    PRED        shift, and go to state 96
    SUCC        shift, and go to state 97
    TOINT       shift, and go to state 98
    TOCHAR      shift, and go to state 99
    TOBOOL      shift, and go to state 100
    MINUS       shift, and go to state 101
    NOT         shift, and go to state 102
    LP          shift, and go to state 103

    const_value  go to state 104
    identifier   go to state 105
    args_list    go to state 167
    expression   go to state 166
    expr         go to state 107
    term         go to state 108
    factor       go to state 109
    lvalue       go to state 110


State 88

  141 proc_stmt: MEMORYREAD LP • args_list RP

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 92
    CHR         shift, and go to state 93
    ODD         shift, and go to state 94
    ORD         shift, and go to state 95
    PRED        shift, and go to state 96
    SUCC        shift, and go to state 97
    TOINT       shift, and go to state 98
    TOCHAR      shift, and go to state 99
    TOBOOL      shift, and go to state 100
    MINUS       shift, and go to state 101
    NOT         shift, and go to state 102
    LP          shift, and go to state 103

    const_value  go to state 104
    identifier   go to state 105
    args_list    go to state 168
    expression   go to state 166
    expr         go to state 107
    term         go to state 108
    factor       go to state 109
    lvalue       go to state 110


State 89

  142 proc_stmt: MEMORYWRITE LP • args_list RP

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 92
    CHR         shift, and go to state 93
    ODD         shift, and go to state 94
    ORD         shift, and go to state 95
    PRED        shift, and go to state 96
    SUCC        shift, and go to state 97
    TOINT       shift, and go to state 98
    TOCHAR      shift, and go to state 99
    TOBOOL      shift, and go to state 100
    MINUS       shift, and go to state 101
    NOT         shift, and go to state 102
    LP          shift, and go to state 103

    const_value  go to state 104
    identifier   go to state 105
    args_list    go to state 169
    expression   go to state 166
    expr         go to state 107
    term         go to state 108
    factor       go to state 109
    lvalue       go to state 110


State 90

  143 proc_stmt: STACKREAD LP • args_list RP

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 92
    CHR         shift, and go to state 93
    ODD         shift, and go to state 94
    ORD         shift, and go to state 95
    PRED        shift, and go to state 96
    SUCC        shift, and go to state 97
    TOINT       shift, and go to state 98
    TOCHAR      shift, and go to state 99
    TOBOOL      shift, and go to state 100
    MINUS       shift, and go to state 101
    NOT         shift, and go to state 102
    LP          shift, and go to state 103

    const_value  go to state 104
    identifier   go to state 105
    args_list    go to state 170
    expression   go to state 166
    expr         go to state 107
    term         go to state 108
    factor       go to state 109
    lvalue       go to state 110


State 91

  144 proc_stmt: STACKWRITE LP • args_list RP

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 92
    CHR         shift, and go to state 93
    ODD         shift, and go to state 94
    ORD         shift, and go to state 95
    PRED        shift, and go to state 96
    SUCC        shift, and go to state 97
    TOINT       shift, and go to state 98
    TOCHAR      shift, and go to state 99
    TOBOOL      shift, and go to state 100
    MINUS       shift, and go to state 101
    NOT         shift, and go to state 102
    LP          shift, and go to state 103

    const_value  go to state 104
    identifier   go to state 105
    args_list    go to state 171
    expression   go to state 166
    expr         go to state 107
    term         go to state 108
    factor       go to state 109
    lvalue       go to state 110


State 92

  169 factor: ABS • LP args_list RP

    LP  shift, and go to state 172


State 93

  170 factor: CHR • LP args_list RP

    LP  shift, and go to state 173


State 94

  171 factor: ODD • LP args_list RP

    LP  shift, and go to state 174


State 95

  172 factor: ORD • LP args_list RP

    LP  shift, and go to state 175


State 96

  173 factor: PRED • LP args_list RP

    LP  shift, and go to state 176


State 97

  174 factor: SUCC • LP args_list RP

    LP  shift, and go to state 177


State 98

  175 factor: TOINT • LP args_list RP

    LP  shift, and go to state 178


State 99

  176 factor: TOCHAR • LP args_list RP

    LP  shift, and go to state 179


State 100

  177 factor: TOBOOL • LP args_list RP

    LP  shift, and go to state 180


State 101

   41 const_value: MINUS • INTEGER
   47            | MINUS • MAXINT
  168 factor: MINUS • factor

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 181
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 182
    ABS         shift, and go to state 92
    CHR         shift, and go to state 93
    ODD         shift, and go to state 94
    ORD         shift, and go to state 95
    PRED        shift, and go to state 96
    SUCC        shift, and go to state 97
    TOINT       shift, and go to state 98
    TOCHAR      shift, and go to state 99
    TOBOOL      shift, and go to state 100
    MINUS       shift, and go to state 101
    NOT         shift, and go to state 102
    LP          shift, and go to state 103

    const_value  go to state 104
    identifier   go to state 105
    factor       go to state 183
    lvalue       go to state 110


State 102

  167 factor: NOT • factor

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 92
    CHR         shift, and go to state 93
    ODD         shift, and go to state 94
    ORD         shift, and go to state 95
    PRED        shift, and go to state 96
    SUCC        shift, and go to state 97
    TOINT       shift, and go to state 98
    TOCHAR      shift, and go to state 99
    TOBOOL      shift, and go to state 100
    MINUS       shift, and go to state 101
    NOT         shift, and go to state 102
    LP          shift, and go to state 103

    const_value  go to state 104
    identifier   go to state 105
    factor       go to state 184
    lvalue       go to state 110


State 103

  166 factor: LP • expression RP

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 92
    CHR         shift, and go to state 93
    ODD         shift, and go to state 94
    ORD         shift, and go to state 95
    PRED        shift, and go to state 96
    SUCC        shift, and go to state 97
    TOINT       shift, and go to state 98
    TOCHAR      shift, and go to state 99
    TOBOOL      shift, and go to state 100
    MINUS       shift, and go to state 101
    NOT         shift, and go to state 102
    LP          shift, and go to state 103

    const_value  go to state 104
    identifier   go to state 105
    expression   go to state 185
    expr         go to state 107
    term         go to state 108
    factor       go to state 109
    lvalue       go to state 110


State 104

  165 factor: const_value •

    $default  reduce using rule 165 (factor)


State 105

  163 factor: identifier • LP args_list RP
  178 lvalue: identifier •
  179       | identifier • LB expression RB
  181       | identifier • DOT identifier

    LB   shift, and go to state 116
    LP   shift, and go to state 186
    DOT  shift, and go to state 118

    LB        [reduce using rule 178 (lvalue)]
    DOT       [reduce using rule 178 (lvalue)]
    $default  reduce using rule 178 (lvalue)


State 106

  110 if_stmt: IF expression • THEN stmt else_clause
  111        | IF expression • stmt else_clause
  147 expression: expression • GE expr
  148           | expression • GT expr
  149           | expression • LE expr
  150           | expression • LT expr
  151           | expression • EQUAL expr
  152           | expression • UNEQUAL expr

    BBEGIN       shift, and go to state 16
    IDENT_NAME   shift, and go to state 10
    INTEGER      shift, and go to state 39
    READ         shift, and go to state 40
    READLN       shift, and go to state 41
    WRITE        shift, and go to state 42
    WRITELN      shift, and go to state 43
    MEMORYREAD   shift, and go to state 44
    MEMORYWRITE  shift, and go to state 45
    STACKREAD    shift, and go to state 46
    STACKWRITE   shift, and go to state 47
    IF           shift, and go to state 48
    THEN         shift, and go to state 187
    REPEAT       shift, and go to state 49
    WHILE        shift, and go to state 50
    CASE         shift, and go to state 51
    FOR          shift, and go to state 52
    EQUAL        shift, and go to state 188
    UNEQUAL      shift, and go to state 189
    GE           shift, and go to state 190
    GT           shift, and go to state 191
    LE           shift, and go to state 192
    LT           shift, and go to state 193
    GOTO         shift, and go to state 53

    BBEGIN       [reduce using rule 119 (repeat_stmt)]
    IDENT_NAME   [reduce using rule 119 (repeat_stmt)]
    INTEGER      [reduce using rule 119 (repeat_stmt)]
    READ         [reduce using rule 119 (repeat_stmt)]
    READLN       [reduce using rule 119 (repeat_stmt)]
    WRITE        [reduce using rule 119 (repeat_stmt)]
    WRITELN      [reduce using rule 119 (repeat_stmt)]
    MEMORYREAD   [reduce using rule 119 (repeat_stmt)]
    MEMORYWRITE  [reduce using rule 119 (repeat_stmt)]
    STACKREAD    [reduce using rule 119 (repeat_stmt)]
    STACKWRITE   [reduce using rule 119 (repeat_stmt)]
    IF           [reduce using rule 119 (repeat_stmt)]
    REPEAT       [reduce using rule 119 (repeat_stmt)]
    WHILE        [reduce using rule 119 (repeat_stmt)]
    CASE         [reduce using rule 119 (repeat_stmt)]
    FOR          [reduce using rule 119 (repeat_stmt)]
    GOTO         [reduce using rule 119 (repeat_stmt)]
    $default     reduce using rule 119 (repeat_stmt)

    identifier     go to state 54
    compound_stmt  go to state 55
    stmt           go to state 194
    no_label_stmt  go to state 57
    assign_stmt    go to state 58
    goto_stmt      go to state 59
    if_stmt        go to state 60
    repeat_stmt    go to state 61
    while_stmt     go to state 62
    case_stmt      go to state 63
    for_stmt       go to state 64
    for_head       go to state 65
    proc_stmt      go to state 66
    lvalue         go to state 67


State 107

  153 expression: expr •
  154 expr: expr • PLUS term
  155     | expr • MINUS term
  156     | expr • OR term

    PLUS   shift, and go to state 195
    MINUS  shift, and go to state 196
    OR     shift, and go to state 197

    $default  reduce using rule 153 (expression)


State 108

  157 expr: term •
  158 term: term • MUL factor
  159     | term • DIV factor
  160     | term • MOD factor
  161     | term • AND factor

    MUL  shift, and go to state 198
    DIV  shift, and go to state 199
    AND  shift, and go to state 200
    MOD  shift, and go to state 201

    $default  reduce using rule 157 (expr)


State 109

  162 term: factor •

    $default  reduce using rule 162 (term)


State 110

  164 factor: lvalue •
  180 lvalue: lvalue • LB expression RB
  182       | lvalue • DOT identifier

    LB   shift, and go to state 138
    DOT  shift, and go to state 139

    DOT       [reduce using rule 164 (factor)]
    $default  reduce using rule 164 (factor)


State 111

   82 loop_stmt_list: loop_stmt_list • loop_stmt SEMICOLON
   83               | loop_stmt_list • loop_stmt
  118 repeat_stmt: REPEAT loop_stmt_list • UNTIL expression

    BBEGIN       shift, and go to state 120
    IDENT_NAME   shift, and go to state 10
    INTEGER      shift, and go to state 121
    READ         shift, and go to state 40
    READLN       shift, and go to state 41
    WRITE        shift, and go to state 42
    WRITELN      shift, and go to state 43
    MEMORYREAD   shift, and go to state 44
    MEMORYWRITE  shift, and go to state 45
    STACKREAD    shift, and go to state 46
    STACKWRITE   shift, and go to state 47
    IF           shift, and go to state 122
    REPEAT       shift, and go to state 49
    UNTIL        shift, and go to state 202
    WHILE        shift, and go to state 50
    CASE         shift, and go to state 123
    FOR          shift, and go to state 52
    GOTO         shift, and go to state 53
    BREAK        shift, and go to state 124
    CONTINUE     shift, and go to state 125

    BBEGIN       [reduce using rule 119 (repeat_stmt)]
    IDENT_NAME   [reduce using rule 119 (repeat_stmt)]
    INTEGER      [reduce using rule 119 (repeat_stmt)]
    READ         [reduce using rule 119 (repeat_stmt)]
    READLN       [reduce using rule 119 (repeat_stmt)]
    WRITE        [reduce using rule 119 (repeat_stmt)]
    WRITELN      [reduce using rule 119 (repeat_stmt)]
    MEMORYREAD   [reduce using rule 119 (repeat_stmt)]
    MEMORYWRITE  [reduce using rule 119 (repeat_stmt)]
    STACKREAD    [reduce using rule 119 (repeat_stmt)]
    STACKWRITE   [reduce using rule 119 (repeat_stmt)]
    IF           [reduce using rule 119 (repeat_stmt)]
    REPEAT       [reduce using rule 119 (repeat_stmt)]
    UNTIL        [reduce using rule 119 (repeat_stmt)]
    WHILE        [reduce using rule 119 (repeat_stmt)]
    CASE         [reduce using rule 119 (repeat_stmt)]
    FOR          [reduce using rule 119 (repeat_stmt)]
    GOTO         [reduce using rule 119 (repeat_stmt)]
    BREAK        [reduce using rule 119 (repeat_stmt)]
    CONTINUE     [reduce using rule 119 (repeat_stmt)]
    $default     reduce using rule 119 (repeat_stmt)

    identifier          go to state 54
    compound_loop_stmt  go to state 126
    loop_stmt           go to state 203
    no_label_loop_stmt  go to state 128
    assign_stmt         go to state 129
    goto_stmt           go to state 130
    if_loop_stmt        go to state 131
    repeat_stmt         go to state 132
    while_stmt          go to state 133
    case_loop_stmt      go to state 134
    for_stmt            go to state 135
    for_head            go to state 65
    proc_stmt           go to state 136
    lvalue              go to state 67


State 112

  120 while_stmt: WHILE expression • DO loop_stmt
  147 expression: expression • GE expr
  148           | expression • GT expr
  149           | expression • LE expr
  150           | expression • LT expr
  151           | expression • EQUAL expr
  152           | expression • UNEQUAL expr

    DO       shift, and go to state 204
    EQUAL    shift, and go to state 188
    UNEQUAL  shift, and go to state 189
    GE       shift, and go to state 190
    GT       shift, and go to state 191
    LE       shift, and go to state 192
    LT       shift, and go to state 193


State 113

  121 case_stmt: CASE expression • OF case_expr_list END
  147 expression: expression • GE expr
  148           | expression • GT expr
  149           | expression • LE expr
  150           | expression • LT expr
  151           | expression • EQUAL expr
  152           | expression • UNEQUAL expr

    EQUAL    shift, and go to state 188
    UNEQUAL  shift, and go to state 189
    GE       shift, and go to state 190
    GT       shift, and go to state 191
    LE       shift, and go to state 192
    LT       shift, and go to state 193
    OF       shift, and go to state 205


State 114

  132 for_head: FOR identifier • ASSIGN expression TO expression DO
  133         | FOR identifier • ASSIGN expression DOWNTO expression DO

    ASSIGN  shift, and go to state 206


State 115

  109 goto_stmt: GOTO INTEGER •

    $default  reduce using rule 109 (goto_stmt)


State 116

  179 lvalue: identifier LB • expression RB

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 92
    CHR         shift, and go to state 93
    ODD         shift, and go to state 94
    ORD         shift, and go to state 95
    PRED        shift, and go to state 96
    SUCC        shift, and go to state 97
    TOINT       shift, and go to state 98
    TOCHAR      shift, and go to state 99
    TOBOOL      shift, and go to state 100
    MINUS       shift, and go to state 101
    NOT         shift, and go to state 102
    LP          shift, and go to state 103

    const_value  go to state 104
    identifier   go to state 105
    expression   go to state 207
    expr         go to state 107
    term         go to state 108
    factor       go to state 109
    lvalue       go to state 110


State 117

  135 proc_stmt: identifier LP • args_list RP

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 92
    CHR         shift, and go to state 93
    ODD         shift, and go to state 94
    ORD         shift, and go to state 95
    PRED        shift, and go to state 96
    SUCC        shift, and go to state 97
    TOINT       shift, and go to state 98
    TOCHAR      shift, and go to state 99
    TOBOOL      shift, and go to state 100
    MINUS       shift, and go to state 101
    NOT         shift, and go to state 102
    LP          shift, and go to state 103

    const_value  go to state 104
    identifier   go to state 105
    args_list    go to state 208
    expression   go to state 166
    expr         go to state 107
    term         go to state 108
    factor       go to state 109
    lvalue       go to state 110


State 118

  181 lvalue: identifier DOT • identifier

    IDENT_NAME  shift, and go to state 10

    identifier  go to state 209


State 119

   79 stmt_list: stmt_list stmt SEMICOLON •

    $default  reduce using rule 79 (stmt_list)


State 120

   76 compound_loop_stmt: BBEGIN • loop_stmt_list END
   77                   | BBEGIN • loop_stmt_list

    $default  reduce using rule 81 (loop_stmt_list)

    loop_stmt_list  go to state 210


State 121

   86 loop_stmt: INTEGER • COLON no_label_loop_stmt

    COLON  shift, and go to state 211


State 122

  112 if_loop_stmt: IF • expression THEN loop_stmt else_loop_clause
  113             | IF • expression loop_stmt else_loop_clause

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 92
    CHR         shift, and go to state 93
    ODD         shift, and go to state 94
    ORD         shift, and go to state 95
    PRED        shift, and go to state 96
    SUCC        shift, and go to state 97
    TOINT       shift, and go to state 98
    TOCHAR      shift, and go to state 99
    TOBOOL      shift, and go to state 100
    MINUS       shift, and go to state 101
    NOT         shift, and go to state 102
    LP          shift, and go to state 103

    const_value  go to state 104
    identifier   go to state 105
    expression   go to state 212
    expr         go to state 107
    term         go to state 108
    factor       go to state 109
    lvalue       go to state 110


State 123

  122 case_loop_stmt: CASE • expression OF case_loop_expr_list END

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 92
    CHR         shift, and go to state 93
    ODD         shift, and go to state 94
    ORD         shift, and go to state 95
    PRED        shift, and go to state 96
    SUCC        shift, and go to state 97
    TOINT       shift, and go to state 98
    TOCHAR      shift, and go to state 99
    TOBOOL      shift, and go to state 100
    MINUS       shift, and go to state 101
    NOT         shift, and go to state 102
    LP          shift, and go to state 103

    const_value  go to state 104
    identifier   go to state 105
    expression   go to state 213
    expr         go to state 107
    term         go to state 108
    factor       go to state 109
    lvalue       go to state 110


State 124

  106 no_label_loop_stmt: BREAK •

    $default  reduce using rule 106 (no_label_loop_stmt)


State 125

  107 no_label_loop_stmt: CONTINUE •

    $default  reduce using rule 107 (no_label_loop_stmt)


State 126

   98 no_label_loop_stmt: compound_loop_stmt •

    $default  reduce using rule 98 (no_label_loop_stmt)


State 127

  131 for_stmt: for_head loop_stmt •

    $default  reduce using rule 131 (for_stmt)


State 128

   87 loop_stmt: no_label_loop_stmt •

    $default  reduce using rule 87 (loop_stmt)


State 129

   97 no_label_loop_stmt: assign_stmt •

    $default  reduce using rule 97 (no_label_loop_stmt)


State 130

   99 no_label_loop_stmt: goto_stmt •

    $default  reduce using rule 99 (no_label_loop_stmt)


State 131

  100 no_label_loop_stmt: if_loop_stmt •

    $default  reduce using rule 100 (no_label_loop_stmt)


State 132

  101 no_label_loop_stmt: repeat_stmt •

    $default  reduce using rule 101 (no_label_loop_stmt)


State 133

  102 no_label_loop_stmt: while_stmt •

    $default  reduce using rule 102 (no_label_loop_stmt)


State 134

  103 no_label_loop_stmt: case_loop_stmt •

    $default  reduce using rule 103 (no_label_loop_stmt)


State 135

  104 no_label_loop_stmt: for_stmt •

    $default  reduce using rule 104 (no_label_loop_stmt)


State 136

  105 no_label_loop_stmt: proc_stmt •

    $default  reduce using rule 105 (no_label_loop_stmt)


State 137

  108 assign_stmt: lvalue ASSIGN • expression

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 92
    CHR         shift, and go to state 93
    ODD         shift, and go to state 94
    ORD         shift, and go to state 95
    PRED        shift, and go to state 96
    SUCC        shift, and go to state 97
    TOINT       shift, and go to state 98
    TOCHAR      shift, and go to state 99
    TOBOOL      shift, and go to state 100
    MINUS       shift, and go to state 101
    NOT         shift, and go to state 102
    LP          shift, and go to state 103

    const_value  go to state 104
    identifier   go to state 105
    expression   go to state 214
    expr         go to state 107
    term         go to state 108
    factor       go to state 109
    lvalue       go to state 110


State 138

  180 lvalue: lvalue LB • expression RB

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 92
    CHR         shift, and go to state 93
    ODD         shift, and go to state 94
    ORD         shift, and go to state 95
    PRED        shift, and go to state 96
    SUCC        shift, and go to state 97
    TOINT       shift, and go to state 98
    TOCHAR      shift, and go to state 99
    TOBOOL      shift, and go to state 100
    MINUS       shift, and go to state 101
    NOT         shift, and go to state 102
    LP          shift, and go to state 103

    const_value  go to state 104
    identifier   go to state 105
    expression   go to state 215
    expr         go to state 107
    term         go to state 108
    factor       go to state 109
    lvalue       go to state 110


State 139

  182 lvalue: lvalue DOT • identifier

    IDENT_NAME  shift, and go to state 10

    identifier  go to state 216


State 140

   64 simple_type: LP • name_list RP

    IDENT_NAME  shift, and go to state 10

    name_list   go to state 217
    identifier  go to state 73


State 141

   67 simple_type: INT_TYPE •

    $default  reduce using rule 67 (simple_type)


State 142

   68 simple_type: BOOL_TYPE •

    $default  reduce using rule 68 (simple_type)


State 143

   69 simple_type: CHAR_TYPE •

    $default  reduce using rule 69 (simple_type)


State 144

   62 array_type_decl: ARRAY • LB simple_type RB OF type_decl

    LB  shift, and go to state 218


State 145

   57 record_type_decl: RECORD • field_decl_list END

    IDENT_NAME  shift, and go to state 10

    field_decl_list  go to state 219
    field_decl       go to state 220
    name_list        go to state 221
    identifier       go to state 73


State 146

   65 simple_type: const_value • DOUBLEDOT const_value

    DOUBLEDOT  shift, and go to state 222


State 147

   52 type_def: identifier EQUAL type_decl • SEMICOLON
   53         | identifier EQUAL type_decl •

    SEMICOLON  shift, and go to state 223

    $default  reduce using rule 53 (type_def)


State 148

   56 type_decl: record_type_decl •

    $default  reduce using rule 56 (type_decl)


State 149

   55 type_decl: array_type_decl •

    $default  reduce using rule 55 (type_decl)


State 150

   54 type_decl: simple_type •

    $default  reduce using rule 54 (type_decl)


State 151

   63 simple_type: identifier •
   66            | identifier • DOUBLEDOT identifier

    DOUBLEDOT  shift, and go to state 224

    $default  reduce using rule 63 (simple_type)


State 152

   30 var_decl_list: var_decl_list var_decl •

    $default  reduce using rule 30 (var_decl_list)


State 153

   70 name_list: name_list COMMA • identifier

    IDENT_NAME  shift, and go to state 10

    identifier  go to state 225


State 154

   32 var_decl: name_list COLON • type_decl SEMICOLON
   33         | name_list COLON • type_decl

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    MINUS       shift, and go to state 36
    LP          shift, and go to state 140
    INT_TYPE    shift, and go to state 141
    BOOL_TYPE   shift, and go to state 142
    CHAR_TYPE   shift, and go to state 143
    ARRAY       shift, and go to state 144
    RECORD      shift, and go to state 145

    const_value       go to state 146
    type_decl         go to state 226
    record_type_decl  go to state 148
    array_type_decl   go to state 149
    simple_type       go to state 150
    identifier        go to state 151


State 155

   16 fun_head: FUNCTION IDENT_NAME • params COLON simple_type

    LP  shift, and go to state 227

    $default  reduce using rule 22 (params)

    params  go to state 228


State 156

   21 proc_head: PROCEDURE IDENT_NAME • params

    LP  shift, and go to state 227

    $default  reduce using rule 22 (params)

    params  go to state 229


State 157

    8 routine_part: routine_part fun_decl •

    $default  reduce using rule 8 (routine_part)


State 158

    9 routine_part: routine_part proc_decl •

    $default  reduce using rule 9 (routine_part)


State 159

   12 fun_decl: fun_head SEMICOLON • routine SEMICOLON
   13         | fun_head SEMICOLON • routine

    CONST  shift, and go to state 5

    $default  reduce using rule 34 (const_part)

    routine       go to state 230
    routine_head  go to state 8
    const_part    go to state 9


State 160

   14 fun_decl: fun_head routine • SEMICOLON
   15         | fun_head routine •

    SEMICOLON  shift, and go to state 231

    $default  reduce using rule 15 (fun_decl)


State 161

   17 proc_decl: proc_head SEMICOLON • routine SEMICOLON
   19          | proc_head SEMICOLON • routine

    CONST  shift, and go to state 5

    $default  reduce using rule 34 (const_part)

    routine       go to state 232
    routine_head  go to state 8
    const_part    go to state 9


State 162

   18 proc_decl: proc_head routine • SEMICOLON
   20          | proc_head routine •

    SEMICOLON  shift, and go to state 233

    $default  reduce using rule 20 (proc_decl)


State 163

   84 stmt: INTEGER COLON no_label_stmt •

    $default  reduce using rule 84 (stmt)


State 164

  136 proc_stmt: READ LP factor • RP

    RP  shift, and go to state 234


State 165

  138 proc_stmt: WRITE LP args_list • RP
  145 args_list: args_list • COMMA expression

    RP     shift, and go to state 235
    COMMA  shift, and go to state 236


State 166

  146 args_list: expression •
  147 expression: expression • GE expr
  148           | expression • GT expr
  149           | expression • LE expr
  150           | expression • LT expr
  151           | expression • EQUAL expr
  152           | expression • UNEQUAL expr

    EQUAL    shift, and go to state 188
    UNEQUAL  shift, and go to state 189
    GE       shift, and go to state 190
    GT       shift, and go to state 191
    LE       shift, and go to state 192
    LT       shift, and go to state 193

    $default  reduce using rule 146 (args_list)


State 167

  140 proc_stmt: WRITELN LP args_list • RP
  145 args_list: args_list • COMMA expression

    RP     shift, and go to state 237
    COMMA  shift, and go to state 236


State 168

  141 proc_stmt: MEMORYREAD LP args_list • RP
  145 args_list: args_list • COMMA expression

    RP     shift, and go to state 238
    COMMA  shift, and go to state 236


State 169

  142 proc_stmt: MEMORYWRITE LP args_list • RP
  145 args_list: args_list • COMMA expression

    RP     shift, and go to state 239
    COMMA  shift, and go to state 236


State 170

  143 proc_stmt: STACKREAD LP args_list • RP
  145 args_list: args_list • COMMA expression

    RP     shift, and go to state 240
    COMMA  shift, and go to state 236


State 171

  144 proc_stmt: STACKWRITE LP args_list • RP
  145 args_list: args_list • COMMA expression

    RP     shift, and go to state 241
    COMMA  shift, and go to state 236


State 172

  169 factor: ABS LP • args_list RP

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 92
    CHR         shift, and go to state 93
    ODD         shift, and go to state 94
    ORD         shift, and go to state 95
    PRED        shift, and go to state 96
    SUCC        shift, and go to state 97
    TOINT       shift, and go to state 98
    TOCHAR      shift, and go to state 99
    TOBOOL      shift, and go to state 100
    MINUS       shift, and go to state 101
    NOT         shift, and go to state 102
    LP          shift, and go to state 103

    const_value  go to state 104
    identifier   go to state 105
    args_list    go to state 242
    expression   go to state 166
    expr         go to state 107
    term         go to state 108
    factor       go to state 109
    lvalue       go to state 110


State 173

  170 factor: CHR LP • args_list RP

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 92
    CHR         shift, and go to state 93
    ODD         shift, and go to state 94
    ORD         shift, and go to state 95
    PRED        shift, and go to state 96
    SUCC        shift, and go to state 97
    TOINT       shift, and go to state 98
    TOCHAR      shift, and go to state 99
    TOBOOL      shift, and go to state 100
    MINUS       shift, and go to state 101
    NOT         shift, and go to state 102
    LP          shift, and go to state 103

    const_value  go to state 104
    identifier   go to state 105
    args_list    go to state 243
    expression   go to state 166
    expr         go to state 107
    term         go to state 108
    factor       go to state 109
    lvalue       go to state 110


State 174

  171 factor: ODD LP • args_list RP

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 92
    CHR         shift, and go to state 93
    ODD         shift, and go to state 94
    ORD         shift, and go to state 95
    PRED        shift, and go to state 96
    SUCC        shift, and go to state 97
    TOINT       shift, and go to state 98
    TOCHAR      shift, and go to state 99
    TOBOOL      shift, and go to state 100
    MINUS       shift, and go to state 101
    NOT         shift, and go to state 102
    LP          shift, and go to state 103

    const_value  go to state 104
    identifier   go to state 105
    args_list    go to state 244
    expression   go to state 166
    expr         go to state 107
    term         go to state 108
    factor       go to state 109
    lvalue       go to state 110


State 175

  172 factor: ORD LP • args_list RP

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 92
    CHR         shift, and go to state 93
    ODD         shift, and go to state 94
    ORD         shift, and go to state 95
    PRED        shift, and go to state 96
    SUCC        shift, and go to state 97
    TOINT       shift, and go to state 98
    TOCHAR      shift, and go to state 99
    TOBOOL      shift, and go to state 100
    MINUS       shift, and go to state 101
    NOT         shift, and go to state 102
    LP          shift, and go to state 103

    const_value  go to state 104
    identifier   go to state 105
    args_list    go to state 245
    expression   go to state 166
    expr         go to state 107
    term         go to state 108
    factor       go to state 109
    lvalue       go to state 110


State 176

  173 factor: PRED LP • args_list RP

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 92
    CHR         shift, and go to state 93
    ODD         shift, and go to state 94
    ORD         shift, and go to state 95
    PRED        shift, and go to state 96
    SUCC        shift, and go to state 97
    TOINT       shift, and go to state 98
    TOCHAR      shift, and go to state 99
    TOBOOL      shift, and go to state 100
    MINUS       shift, and go to state 101
    NOT         shift, and go to state 102
    LP          shift, and go to state 103

    const_value  go to state 104
    identifier   go to state 105
    args_list    go to state 246
    expression   go to state 166
    expr         go to state 107
    term         go to state 108
    factor       go to state 109
    lvalue       go to state 110


State 177

  174 factor: SUCC LP • args_list RP

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 92
    CHR         shift, and go to state 93
    ODD         shift, and go to state 94
    ORD         shift, and go to state 95
    PRED        shift, and go to state 96
    SUCC        shift, and go to state 97
    TOINT       shift, and go to state 98
    TOCHAR      shift, and go to state 99
    TOBOOL      shift, and go to state 100
    MINUS       shift, and go to state 101
    NOT         shift, and go to state 102
    LP          shift, and go to state 103

    const_value  go to state 104
    identifier   go to state 105
    args_list    go to state 247
    expression   go to state 166
    expr         go to state 107
    term         go to state 108
    factor       go to state 109
    lvalue       go to state 110


State 178

  175 factor: TOINT LP • args_list RP

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 92
    CHR         shift, and go to state 93
    ODD         shift, and go to state 94
    ORD         shift, and go to state 95
    PRED        shift, and go to state 96
    SUCC        shift, and go to state 97
    TOINT       shift, and go to state 98
    TOCHAR      shift, and go to state 99
    TOBOOL      shift, and go to state 100
    MINUS       shift, and go to state 101
    NOT         shift, and go to state 102
    LP          shift, and go to state 103

    const_value  go to state 104
    identifier   go to state 105
    args_list    go to state 248
    expression   go to state 166
    expr         go to state 107
    term         go to state 108
    factor       go to state 109
    lvalue       go to state 110


State 179

  176 factor: TOCHAR LP • args_list RP

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 92
    CHR         shift, and go to state 93
    ODD         shift, and go to state 94
    ORD         shift, and go to state 95
    PRED        shift, and go to state 96
    SUCC        shift, and go to state 97
    TOINT       shift, and go to state 98
    TOCHAR      shift, and go to state 99
    TOBOOL      shift, and go to state 100
    MINUS       shift, and go to state 101
    NOT         shift, and go to state 102
    LP          shift, and go to state 103

    const_value  go to state 104
    identifier   go to state 105
    args_list    go to state 249
    expression   go to state 166
    expr         go to state 107
    term         go to state 108
    factor       go to state 109
    lvalue       go to state 110


State 180

  177 factor: TOBOOL LP • args_list RP

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 92
    CHR         shift, and go to state 93
    ODD         shift, and go to state 94
    ORD         shift, and go to state 95
    PRED        shift, and go to state 96
    SUCC        shift, and go to state 97
    TOINT       shift, and go to state 98
    TOCHAR      shift, and go to state 99
    TOBOOL      shift, and go to state 100
    MINUS       shift, and go to state 101
    NOT         shift, and go to state 102
    LP          shift, and go to state 103

    const_value  go to state 104
    identifier   go to state 105
    args_list    go to state 250
    expression   go to state 166
    expr         go to state 107
    term         go to state 108
    factor       go to state 109
    lvalue       go to state 110


State 181

   40 const_value: INTEGER •
   41            | MINUS INTEGER •

    $end         reduce using rule 40 (const_value)
    $end         [reduce using rule 41 (const_value)]
    FUNCTION     reduce using rule 40 (const_value)
    FUNCTION     [reduce using rule 41 (const_value)]
    PROCEDURE    reduce using rule 40 (const_value)
    PROCEDURE    [reduce using rule 41 (const_value)]
    BBEGIN       reduce using rule 40 (const_value)
    BBEGIN       [reduce using rule 41 (const_value)]
    END          reduce using rule 40 (const_value)
    END          [reduce using rule 41 (const_value)]
    IDENT_NAME   reduce using rule 40 (const_value)
    IDENT_NAME   [reduce using rule 41 (const_value)]
    INTEGER      reduce using rule 40 (const_value)
    INTEGER      [reduce using rule 41 (const_value)]
    READ         reduce using rule 40 (const_value)
    READ         [reduce using rule 41 (const_value)]
    READLN       reduce using rule 40 (const_value)
    READLN       [reduce using rule 41 (const_value)]
    WRITE        reduce using rule 40 (const_value)
    WRITE        [reduce using rule 41 (const_value)]
    WRITELN      reduce using rule 40 (const_value)
    WRITELN      [reduce using rule 41 (const_value)]
    MEMORYREAD   reduce using rule 40 (const_value)
    MEMORYREAD   [reduce using rule 41 (const_value)]
    MEMORYWRITE  reduce using rule 40 (const_value)
    MEMORYWRITE  [reduce using rule 41 (const_value)]
    STACKREAD    reduce using rule 40 (const_value)
    STACKREAD    [reduce using rule 41 (const_value)]
    STACKWRITE   reduce using rule 40 (const_value)
    STACKWRITE   [reduce using rule 41 (const_value)]
    IF           reduce using rule 40 (const_value)
    IF           [reduce using rule 41 (const_value)]
    THEN         reduce using rule 40 (const_value)
    THEN         [reduce using rule 41 (const_value)]
    ELSE         reduce using rule 40 (const_value)
    ELSE         [reduce using rule 41 (const_value)]
    REPEAT       reduce using rule 40 (const_value)
    REPEAT       [reduce using rule 41 (const_value)]
    UNTIL        reduce using rule 40 (const_value)
    UNTIL        [reduce using rule 41 (const_value)]
    WHILE        reduce using rule 40 (const_value)
    WHILE        [reduce using rule 41 (const_value)]
    DO           reduce using rule 40 (const_value)
    DO           [reduce using rule 41 (const_value)]
    CASE         reduce using rule 40 (const_value)
    CASE         [reduce using rule 41 (const_value)]
    TO           reduce using rule 40 (const_value)
    TO           [reduce using rule 41 (const_value)]
    DOWNTO       reduce using rule 40 (const_value)
    DOWNTO       [reduce using rule 41 (const_value)]
    FOR          reduce using rule 40 (const_value)
    FOR          [reduce using rule 41 (const_value)]
    EQUAL        reduce using rule 40 (const_value)
    EQUAL        [reduce using rule 41 (const_value)]
    UNEQUAL      reduce using rule 40 (const_value)
    UNEQUAL      [reduce using rule 41 (const_value)]
    GE           reduce using rule 40 (const_value)
    GE           [reduce using rule 41 (const_value)]
    GT           reduce using rule 40 (const_value)
    GT           [reduce using rule 41 (const_value)]
    LE           reduce using rule 40 (const_value)
    LE           [reduce using rule 41 (const_value)]
    LT           reduce using rule 40 (const_value)
    LT           [reduce using rule 41 (const_value)]
    PLUS         reduce using rule 40 (const_value)
    PLUS         [reduce using rule 41 (const_value)]
    MINUS        reduce using rule 40 (const_value)
    MINUS        [reduce using rule 41 (const_value)]
    MUL          reduce using rule 40 (const_value)
    MUL          [reduce using rule 41 (const_value)]
    DIV          reduce using rule 40 (const_value)
    DIV          [reduce using rule 41 (const_value)]
    OR           reduce using rule 40 (const_value)
    OR           [reduce using rule 41 (const_value)]
    AND          reduce using rule 40 (const_value)
    AND          [reduce using rule 41 (const_value)]
    MOD          reduce using rule 40 (const_value)
    MOD          [reduce using rule 41 (const_value)]
    RB           reduce using rule 40 (const_value)
    RB           [reduce using rule 41 (const_value)]
    RP           reduce using rule 40 (const_value)
    RP           [reduce using rule 41 (const_value)]
    SEMICOLON    reduce using rule 40 (const_value)
    SEMICOLON    [reduce using rule 41 (const_value)]
    DOT          reduce using rule 40 (const_value)
    DOT          [reduce using rule 41 (const_value)]
    COMMA        reduce using rule 40 (const_value)
    COMMA        [reduce using rule 41 (const_value)]
    COLON        reduce using rule 40 (const_value)
    COLON        [reduce using rule 41 (const_value)]
    OF           reduce using rule 40 (const_value)
    OF           [reduce using rule 41 (const_value)]
    GOTO         reduce using rule 40 (const_value)
    GOTO         [reduce using rule 41 (const_value)]
    BREAK        reduce using rule 40 (const_value)
    BREAK        [reduce using rule 41 (const_value)]
    CONTINUE     reduce using rule 40 (const_value)
    CONTINUE     [reduce using rule 41 (const_value)]
    $default     reduce using rule 40 (const_value)


State 182

   46 const_value: MAXINT •
   47            | MINUS MAXINT •

    $end         reduce using rule 46 (const_value)
    $end         [reduce using rule 47 (const_value)]
    FUNCTION     reduce using rule 46 (const_value)
    FUNCTION     [reduce using rule 47 (const_value)]
    PROCEDURE    reduce using rule 46 (const_value)
    PROCEDURE    [reduce using rule 47 (const_value)]
    BBEGIN       reduce using rule 46 (const_value)
    BBEGIN       [reduce using rule 47 (const_value)]
    END          reduce using rule 46 (const_value)
    END          [reduce using rule 47 (const_value)]
    IDENT_NAME   reduce using rule 46 (const_value)
    IDENT_NAME   [reduce using rule 47 (const_value)]
    INTEGER      reduce using rule 46 (const_value)
    INTEGER      [reduce using rule 47 (const_value)]
    READ         reduce using rule 46 (const_value)
    READ         [reduce using rule 47 (const_value)]
    READLN       reduce using rule 46 (const_value)
    READLN       [reduce using rule 47 (const_value)]
    WRITE        reduce using rule 46 (const_value)
    WRITE        [reduce using rule 47 (const_value)]
    WRITELN      reduce using rule 46 (const_value)
    WRITELN      [reduce using rule 47 (const_value)]
    MEMORYREAD   reduce using rule 46 (const_value)
    MEMORYREAD   [reduce using rule 47 (const_value)]
    MEMORYWRITE  reduce using rule 46 (const_value)
    MEMORYWRITE  [reduce using rule 47 (const_value)]
    STACKREAD    reduce using rule 46 (const_value)
    STACKREAD    [reduce using rule 47 (const_value)]
    STACKWRITE   reduce using rule 46 (const_value)
    STACKWRITE   [reduce using rule 47 (const_value)]
    IF           reduce using rule 46 (const_value)
    IF           [reduce using rule 47 (const_value)]
    THEN         reduce using rule 46 (const_value)
    THEN         [reduce using rule 47 (const_value)]
    ELSE         reduce using rule 46 (const_value)
    ELSE         [reduce using rule 47 (const_value)]
    REPEAT       reduce using rule 46 (const_value)
    REPEAT       [reduce using rule 47 (const_value)]
    UNTIL        reduce using rule 46 (const_value)
    UNTIL        [reduce using rule 47 (const_value)]
    WHILE        reduce using rule 46 (const_value)
    WHILE        [reduce using rule 47 (const_value)]
    DO           reduce using rule 46 (const_value)
    DO           [reduce using rule 47 (const_value)]
    CASE         reduce using rule 46 (const_value)
    CASE         [reduce using rule 47 (const_value)]
    TO           reduce using rule 46 (const_value)
    TO           [reduce using rule 47 (const_value)]
    DOWNTO       reduce using rule 46 (const_value)
    DOWNTO       [reduce using rule 47 (const_value)]
    FOR          reduce using rule 46 (const_value)
    FOR          [reduce using rule 47 (const_value)]
    EQUAL        reduce using rule 46 (const_value)
    EQUAL        [reduce using rule 47 (const_value)]
    UNEQUAL      reduce using rule 46 (const_value)
    UNEQUAL      [reduce using rule 47 (const_value)]
    GE           reduce using rule 46 (const_value)
    GE           [reduce using rule 47 (const_value)]
    GT           reduce using rule 46 (const_value)
    GT           [reduce using rule 47 (const_value)]
    LE           reduce using rule 46 (const_value)
    LE           [reduce using rule 47 (const_value)]
    LT           reduce using rule 46 (const_value)
    LT           [reduce using rule 47 (const_value)]
    PLUS         reduce using rule 46 (const_value)
    PLUS         [reduce using rule 47 (const_value)]
    MINUS        reduce using rule 46 (const_value)
    MINUS        [reduce using rule 47 (const_value)]
    MUL          reduce using rule 46 (const_value)
    MUL          [reduce using rule 47 (const_value)]
    DIV          reduce using rule 46 (const_value)
    DIV          [reduce using rule 47 (const_value)]
    OR           reduce using rule 46 (const_value)
    OR           [reduce using rule 47 (const_value)]
    AND          reduce using rule 46 (const_value)
    AND          [reduce using rule 47 (const_value)]
    MOD          reduce using rule 46 (const_value)
    MOD          [reduce using rule 47 (const_value)]
    RB           reduce using rule 46 (const_value)
    RB           [reduce using rule 47 (const_value)]
    RP           reduce using rule 46 (const_value)
    RP           [reduce using rule 47 (const_value)]
    SEMICOLON    reduce using rule 46 (const_value)
    SEMICOLON    [reduce using rule 47 (const_value)]
    DOT          reduce using rule 46 (const_value)
    DOT          [reduce using rule 47 (const_value)]
    COMMA        reduce using rule 46 (const_value)
    COMMA        [reduce using rule 47 (const_value)]
    COLON        reduce using rule 46 (const_value)
    COLON        [reduce using rule 47 (const_value)]
    OF           reduce using rule 46 (const_value)
    OF           [reduce using rule 47 (const_value)]
    GOTO         reduce using rule 46 (const_value)
    GOTO         [reduce using rule 47 (const_value)]
    BREAK        reduce using rule 46 (const_value)
    BREAK        [reduce using rule 47 (const_value)]
    CONTINUE     reduce using rule 46 (const_value)
    CONTINUE     [reduce using rule 47 (const_value)]
    $default     reduce using rule 46 (const_value)


State 183

  168 factor: MINUS factor •

    $default  reduce using rule 168 (factor)


State 184

  167 factor: NOT factor •

    $default  reduce using rule 167 (factor)


State 185

  147 expression: expression • GE expr
  148           | expression • GT expr
  149           | expression • LE expr
  150           | expression • LT expr
  151           | expression • EQUAL expr
  152           | expression • UNEQUAL expr
  166 factor: LP expression • RP

    EQUAL    shift, and go to state 188
    UNEQUAL  shift, and go to state 189
    GE       shift, and go to state 190
    GT       shift, and go to state 191
    LE       shift, and go to state 192
    LT       shift, and go to state 193
    RP       shift, and go to state 251


State 186

  163 factor: identifier LP • args_list RP

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 92
    CHR         shift, and go to state 93
    ODD         shift, and go to state 94
    ORD         shift, and go to state 95
    PRED        shift, and go to state 96
    SUCC        shift, and go to state 97
    TOINT       shift, and go to state 98
    TOCHAR      shift, and go to state 99
    TOBOOL      shift, and go to state 100
    MINUS       shift, and go to state 101
    NOT         shift, and go to state 102
    LP          shift, and go to state 103

    const_value  go to state 104
    identifier   go to state 105
    args_list    go to state 252
    expression   go to state 166
    expr         go to state 107
    term         go to state 108
    factor       go to state 109
    lvalue       go to state 110


State 187

  110 if_stmt: IF expression THEN • stmt else_clause

    BBEGIN       shift, and go to state 16
    IDENT_NAME   shift, and go to state 10
    INTEGER      shift, and go to state 39
    READ         shift, and go to state 40
    READLN       shift, and go to state 41
    WRITE        shift, and go to state 42
    WRITELN      shift, and go to state 43
    MEMORYREAD   shift, and go to state 44
    MEMORYWRITE  shift, and go to state 45
    STACKREAD    shift, and go to state 46
    STACKWRITE   shift, and go to state 47
    IF           shift, and go to state 48
    REPEAT       shift, and go to state 49
    WHILE        shift, and go to state 50
    CASE         shift, and go to state 51
    FOR          shift, and go to state 52
    GOTO         shift, and go to state 53

    BBEGIN       [reduce using rule 119 (repeat_stmt)]
    IDENT_NAME   [reduce using rule 119 (repeat_stmt)]
    INTEGER      [reduce using rule 119 (repeat_stmt)]
    READ         [reduce using rule 119 (repeat_stmt)]
    READLN       [reduce using rule 119 (repeat_stmt)]
    WRITE        [reduce using rule 119 (repeat_stmt)]
    WRITELN      [reduce using rule 119 (repeat_stmt)]
    MEMORYREAD   [reduce using rule 119 (repeat_stmt)]
    MEMORYWRITE  [reduce using rule 119 (repeat_stmt)]
    STACKREAD    [reduce using rule 119 (repeat_stmt)]
    STACKWRITE   [reduce using rule 119 (repeat_stmt)]
    IF           [reduce using rule 119 (repeat_stmt)]
    REPEAT       [reduce using rule 119 (repeat_stmt)]
    WHILE        [reduce using rule 119 (repeat_stmt)]
    CASE         [reduce using rule 119 (repeat_stmt)]
    FOR          [reduce using rule 119 (repeat_stmt)]
    GOTO         [reduce using rule 119 (repeat_stmt)]
    $default     reduce using rule 119 (repeat_stmt)

    identifier     go to state 54
    compound_stmt  go to state 55
    stmt           go to state 253
    no_label_stmt  go to state 57
    assign_stmt    go to state 58
    goto_stmt      go to state 59
    if_stmt        go to state 60
    repeat_stmt    go to state 61
    while_stmt     go to state 62
    case_stmt      go to state 63
    for_stmt       go to state 64
    for_head       go to state 65
    proc_stmt      go to state 66
    lvalue         go to state 67


State 188

  151 expression: expression EQUAL • expr

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 92
    CHR         shift, and go to state 93
    ODD         shift, and go to state 94
    ORD         shift, and go to state 95
    PRED        shift, and go to state 96
    SUCC        shift, and go to state 97
    TOINT       shift, and go to state 98
    TOCHAR      shift, and go to state 99
    TOBOOL      shift, and go to state 100
    MINUS       shift, and go to state 101
    NOT         shift, and go to state 102
    LP          shift, and go to state 103

    const_value  go to state 104
    identifier   go to state 105
    expr         go to state 254
    term         go to state 108
    factor       go to state 109
    lvalue       go to state 110


State 189

  152 expression: expression UNEQUAL • expr

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 92
    CHR         shift, and go to state 93
    ODD         shift, and go to state 94
    ORD         shift, and go to state 95
    PRED        shift, and go to state 96
    SUCC        shift, and go to state 97
    TOINT       shift, and go to state 98
    TOCHAR      shift, and go to state 99
    TOBOOL      shift, and go to state 100
    MINUS       shift, and go to state 101
    NOT         shift, and go to state 102
    LP          shift, and go to state 103

    const_value  go to state 104
    identifier   go to state 105
    expr         go to state 255
    term         go to state 108
    factor       go to state 109
    lvalue       go to state 110


State 190

  147 expression: expression GE • expr

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 92
    CHR         shift, and go to state 93
    ODD         shift, and go to state 94
    ORD         shift, and go to state 95
    PRED        shift, and go to state 96
    SUCC        shift, and go to state 97
    TOINT       shift, and go to state 98
    TOCHAR      shift, and go to state 99
    TOBOOL      shift, and go to state 100
    MINUS       shift, and go to state 101
    NOT         shift, and go to state 102
    LP          shift, and go to state 103

    const_value  go to state 104
    identifier   go to state 105
    expr         go to state 256
    term         go to state 108
    factor       go to state 109
    lvalue       go to state 110


State 191

  148 expression: expression GT • expr

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 92
    CHR         shift, and go to state 93
    ODD         shift, and go to state 94
    ORD         shift, and go to state 95
    PRED        shift, and go to state 96
    SUCC        shift, and go to state 97
    TOINT       shift, and go to state 98
    TOCHAR      shift, and go to state 99
    TOBOOL      shift, and go to state 100
    MINUS       shift, and go to state 101
    NOT         shift, and go to state 102
    LP          shift, and go to state 103

    const_value  go to state 104
    identifier   go to state 105
    expr         go to state 257
    term         go to state 108
    factor       go to state 109
    lvalue       go to state 110


State 192

  149 expression: expression LE • expr

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 92
    CHR         shift, and go to state 93
    ODD         shift, and go to state 94
    ORD         shift, and go to state 95
    PRED        shift, and go to state 96
    SUCC        shift, and go to state 97
    TOINT       shift, and go to state 98
    TOCHAR      shift, and go to state 99
    TOBOOL      shift, and go to state 100
    MINUS       shift, and go to state 101
    NOT         shift, and go to state 102
    LP          shift, and go to state 103

    const_value  go to state 104
    identifier   go to state 105
    expr         go to state 258
    term         go to state 108
    factor       go to state 109
    lvalue       go to state 110


State 193

  150 expression: expression LT • expr

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 92
    CHR         shift, and go to state 93
    ODD         shift, and go to state 94
    ORD         shift, and go to state 95
    PRED        shift, and go to state 96
    SUCC        shift, and go to state 97
    TOINT       shift, and go to state 98
    TOCHAR      shift, and go to state 99
    TOBOOL      shift, and go to state 100
    MINUS       shift, and go to state 101
    NOT         shift, and go to state 102
    LP          shift, and go to state 103

    const_value  go to state 104
    identifier   go to state 105
    expr         go to state 259
    term         go to state 108
    factor       go to state 109
    lvalue       go to state 110


State 194

  111 if_stmt: IF expression stmt • else_clause

    ELSE  shift, and go to state 260

    ELSE      [reduce using rule 114 (else_clause)]
    $default  reduce using rule 114 (else_clause)

    else_clause  go to state 261


State 195

  154 expr: expr PLUS • term

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 92
    CHR         shift, and go to state 93
    ODD         shift, and go to state 94
    ORD         shift, and go to state 95
    PRED        shift, and go to state 96
    SUCC        shift, and go to state 97
    TOINT       shift, and go to state 98
    TOCHAR      shift, and go to state 99
    TOBOOL      shift, and go to state 100
    MINUS       shift, and go to state 101
    NOT         shift, and go to state 102
    LP          shift, and go to state 103

    const_value  go to state 104
    identifier   go to state 105
    term         go to state 262
    factor       go to state 109
    lvalue       go to state 110


State 196

  155 expr: expr MINUS • term

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 92
    CHR         shift, and go to state 93
    ODD         shift, and go to state 94
    ORD         shift, and go to state 95
    PRED        shift, and go to state 96
    SUCC        shift, and go to state 97
    TOINT       shift, and go to state 98
    TOCHAR      shift, and go to state 99
    TOBOOL      shift, and go to state 100
    MINUS       shift, and go to state 101
    NOT         shift, and go to state 102
    LP          shift, and go to state 103

    const_value  go to state 104
    identifier   go to state 105
    term         go to state 263
    factor       go to state 109
    lvalue       go to state 110


State 197

  156 expr: expr OR • term

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 92
    CHR         shift, and go to state 93
    ODD         shift, and go to state 94
    ORD         shift, and go to state 95
    PRED        shift, and go to state 96
    SUCC        shift, and go to state 97
    TOINT       shift, and go to state 98
    TOCHAR      shift, and go to state 99
    TOBOOL      shift, and go to state 100
    MINUS       shift, and go to state 101
    NOT         shift, and go to state 102
    LP          shift, and go to state 103

    const_value  go to state 104
    identifier   go to state 105
    term         go to state 264
    factor       go to state 109
    lvalue       go to state 110


State 198

  158 term: term MUL • factor

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 92
    CHR         shift, and go to state 93
    ODD         shift, and go to state 94
    ORD         shift, and go to state 95
    PRED        shift, and go to state 96
    SUCC        shift, and go to state 97
    TOINT       shift, and go to state 98
    TOCHAR      shift, and go to state 99
    TOBOOL      shift, and go to state 100
    MINUS       shift, and go to state 101
    NOT         shift, and go to state 102
    LP          shift, and go to state 103

    const_value  go to state 104
    identifier   go to state 105
    factor       go to state 265
    lvalue       go to state 110


State 199

  159 term: term DIV • factor

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 92
    CHR         shift, and go to state 93
    ODD         shift, and go to state 94
    ORD         shift, and go to state 95
    PRED        shift, and go to state 96
    SUCC        shift, and go to state 97
    TOINT       shift, and go to state 98
    TOCHAR      shift, and go to state 99
    TOBOOL      shift, and go to state 100
    MINUS       shift, and go to state 101
    NOT         shift, and go to state 102
    LP          shift, and go to state 103

    const_value  go to state 104
    identifier   go to state 105
    factor       go to state 266
    lvalue       go to state 110


State 200

  161 term: term AND • factor

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 92
    CHR         shift, and go to state 93
    ODD         shift, and go to state 94
    ORD         shift, and go to state 95
    PRED        shift, and go to state 96
    SUCC        shift, and go to state 97
    TOINT       shift, and go to state 98
    TOCHAR      shift, and go to state 99
    TOBOOL      shift, and go to state 100
    MINUS       shift, and go to state 101
    NOT         shift, and go to state 102
    LP          shift, and go to state 103

    const_value  go to state 104
    identifier   go to state 105
    factor       go to state 267
    lvalue       go to state 110


State 201

  160 term: term MOD • factor

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 92
    CHR         shift, and go to state 93
    ODD         shift, and go to state 94
    ORD         shift, and go to state 95
    PRED        shift, and go to state 96
    SUCC        shift, and go to state 97
    TOINT       shift, and go to state 98
    TOCHAR      shift, and go to state 99
    TOBOOL      shift, and go to state 100
    MINUS       shift, and go to state 101
    NOT         shift, and go to state 102
    LP          shift, and go to state 103

    const_value  go to state 104
    identifier   go to state 105
    factor       go to state 268
    lvalue       go to state 110


State 202

  118 repeat_stmt: REPEAT loop_stmt_list UNTIL • expression

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 92
    CHR         shift, and go to state 93
    ODD         shift, and go to state 94
    ORD         shift, and go to state 95
    PRED        shift, and go to state 96
    SUCC        shift, and go to state 97
    TOINT       shift, and go to state 98
    TOCHAR      shift, and go to state 99
    TOBOOL      shift, and go to state 100
    MINUS       shift, and go to state 101
    NOT         shift, and go to state 102
    LP          shift, and go to state 103

    const_value  go to state 104
    identifier   go to state 105
    expression   go to state 269
    expr         go to state 107
    term         go to state 108
    factor       go to state 109
    lvalue       go to state 110


State 203

   82 loop_stmt_list: loop_stmt_list loop_stmt • SEMICOLON
   83               | loop_stmt_list loop_stmt •

    SEMICOLON  shift, and go to state 270

    SEMICOLON  [reduce using rule 83 (loop_stmt_list)]
    $default   reduce using rule 83 (loop_stmt_list)


State 204

  120 while_stmt: WHILE expression DO • loop_stmt

    BBEGIN       shift, and go to state 120
    IDENT_NAME   shift, and go to state 10
    INTEGER      shift, and go to state 121
    READ         shift, and go to state 40
    READLN       shift, and go to state 41
    WRITE        shift, and go to state 42
    WRITELN      shift, and go to state 43
    MEMORYREAD   shift, and go to state 44
    MEMORYWRITE  shift, and go to state 45
    STACKREAD    shift, and go to state 46
    STACKWRITE   shift, and go to state 47
    IF           shift, and go to state 122
    REPEAT       shift, and go to state 49
    WHILE        shift, and go to state 50
    CASE         shift, and go to state 123
    FOR          shift, and go to state 52
    GOTO         shift, and go to state 53
    BREAK        shift, and go to state 124
    CONTINUE     shift, and go to state 125

    BBEGIN       [reduce using rule 119 (repeat_stmt)]
    IDENT_NAME   [reduce using rule 119 (repeat_stmt)]
    INTEGER      [reduce using rule 119 (repeat_stmt)]
    READ         [reduce using rule 119 (repeat_stmt)]
    READLN       [reduce using rule 119 (repeat_stmt)]
    WRITE        [reduce using rule 119 (repeat_stmt)]
    WRITELN      [reduce using rule 119 (repeat_stmt)]
    MEMORYREAD   [reduce using rule 119 (repeat_stmt)]
    MEMORYWRITE  [reduce using rule 119 (repeat_stmt)]
    STACKREAD    [reduce using rule 119 (repeat_stmt)]
    STACKWRITE   [reduce using rule 119 (repeat_stmt)]
    IF           [reduce using rule 119 (repeat_stmt)]
    REPEAT       [reduce using rule 119 (repeat_stmt)]
    WHILE        [reduce using rule 119 (repeat_stmt)]
    CASE         [reduce using rule 119 (repeat_stmt)]
    FOR          [reduce using rule 119 (repeat_stmt)]
    GOTO         [reduce using rule 119 (repeat_stmt)]
    BREAK        [reduce using rule 119 (repeat_stmt)]
    CONTINUE     [reduce using rule 119 (repeat_stmt)]
    $default     reduce using rule 119 (repeat_stmt)

    identifier          go to state 54
    compound_loop_stmt  go to state 126
    loop_stmt           go to state 271
    no_label_loop_stmt  go to state 128
    assign_stmt         go to state 129
    goto_stmt           go to state 130
    if_loop_stmt        go to state 131
    repeat_stmt         go to state 132
    while_stmt          go to state 133
    case_loop_stmt      go to state 134
    for_stmt            go to state 135
    for_head            go to state 65
    proc_stmt           go to state 136
    lvalue              go to state 67


State 205

  121 case_stmt: CASE expression OF • case_expr_list END

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 92
    CHR         shift, and go to state 93
    ODD         shift, and go to state 94
    ORD         shift, and go to state 95
    PRED        shift, and go to state 96
    SUCC        shift, and go to state 97
    TOINT       shift, and go to state 98
    TOCHAR      shift, and go to state 99
    TOBOOL      shift, and go to state 100
    MINUS       shift, and go to state 101
    NOT         shift, and go to state 102
    LP          shift, and go to state 103
    OTHERWISE   shift, and go to state 272

    const_value     go to state 104
    identifier      go to state 105
    case_expr_list  go to state 273
    case_expr       go to state 274
    expression      go to state 275
    expr            go to state 107
    term            go to state 108
    factor          go to state 109
    lvalue          go to state 110


State 206

  132 for_head: FOR identifier ASSIGN • expression TO expression DO
  133         | FOR identifier ASSIGN • expression DOWNTO expression DO

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 92
    CHR         shift, and go to state 93
    ODD         shift, and go to state 94
    ORD         shift, and go to state 95
    PRED        shift, and go to state 96
    SUCC        shift, and go to state 97
    TOINT       shift, and go to state 98
    TOCHAR      shift, and go to state 99
    TOBOOL      shift, and go to state 100
    MINUS       shift, and go to state 101
    NOT         shift, and go to state 102
    LP          shift, and go to state 103

    const_value  go to state 104
    identifier   go to state 105
    expression   go to state 276
    expr         go to state 107
    term         go to state 108
    factor       go to state 109
    lvalue       go to state 110


State 207

  147 expression: expression • GE expr
  148           | expression • GT expr
  149           | expression • LE expr
  150           | expression • LT expr
  151           | expression • EQUAL expr
  152           | expression • UNEQUAL expr
  179 lvalue: identifier LB expression • RB

    EQUAL    shift, and go to state 188
    UNEQUAL  shift, and go to state 189
    GE       shift, and go to state 190
    GT       shift, and go to state 191
    LE       shift, and go to state 192
    LT       shift, and go to state 193
    RB       shift, and go to state 277


State 208

  135 proc_stmt: identifier LP args_list • RP
  145 args_list: args_list • COMMA expression

    RP     shift, and go to state 278
    COMMA  shift, and go to state 236


State 209

  181 lvalue: identifier DOT identifier •

    $default  reduce using rule 181 (lvalue)


State 210

   76 compound_loop_stmt: BBEGIN loop_stmt_list • END
   77                   | BBEGIN loop_stmt_list •
   82 loop_stmt_list: loop_stmt_list • loop_stmt SEMICOLON
   83               | loop_stmt_list • loop_stmt

    BBEGIN       shift, and go to state 120
    END          shift, and go to state 279
    IDENT_NAME   shift, and go to state 10
    INTEGER      shift, and go to state 121
    READ         shift, and go to state 40
    READLN       shift, and go to state 41
    WRITE        shift, and go to state 42
    WRITELN      shift, and go to state 43
    MEMORYREAD   shift, and go to state 44
    MEMORYWRITE  shift, and go to state 45
    STACKREAD    shift, and go to state 46
    STACKWRITE   shift, and go to state 47
    IF           shift, and go to state 122
    REPEAT       shift, and go to state 49
    WHILE        shift, and go to state 50
    CASE         shift, and go to state 123
    FOR          shift, and go to state 52
    GOTO         shift, and go to state 53
    BREAK        shift, and go to state 124
    CONTINUE     shift, and go to state 125

    $end         reduce using rule 77 (compound_loop_stmt)
    $end         [reduce using rule 119 (repeat_stmt)]
    FUNCTION     reduce using rule 77 (compound_loop_stmt)
    FUNCTION     [reduce using rule 119 (repeat_stmt)]
    PROCEDURE    reduce using rule 77 (compound_loop_stmt)
    PROCEDURE    [reduce using rule 119 (repeat_stmt)]
    BBEGIN       [reduce using rule 77 (compound_loop_stmt)]
    BBEGIN       [reduce using rule 119 (repeat_stmt)]
    END          [reduce using rule 77 (compound_loop_stmt)]
    END          [reduce using rule 119 (repeat_stmt)]
    IDENT_NAME   [reduce using rule 77 (compound_loop_stmt)]
    IDENT_NAME   [reduce using rule 119 (repeat_stmt)]
    INTEGER      [reduce using rule 77 (compound_loop_stmt)]
    INTEGER      [reduce using rule 119 (repeat_stmt)]
    READ         [reduce using rule 77 (compound_loop_stmt)]
    READ         [reduce using rule 119 (repeat_stmt)]
    READLN       [reduce using rule 77 (compound_loop_stmt)]
    READLN       [reduce using rule 119 (repeat_stmt)]
    WRITE        [reduce using rule 77 (compound_loop_stmt)]
    WRITE        [reduce using rule 119 (repeat_stmt)]
    WRITELN      [reduce using rule 77 (compound_loop_stmt)]
    WRITELN      [reduce using rule 119 (repeat_stmt)]
    MEMORYREAD   [reduce using rule 77 (compound_loop_stmt)]
    MEMORYREAD   [reduce using rule 119 (repeat_stmt)]
    MEMORYWRITE  [reduce using rule 77 (compound_loop_stmt)]
    MEMORYWRITE  [reduce using rule 119 (repeat_stmt)]
    STACKREAD    [reduce using rule 77 (compound_loop_stmt)]
    STACKREAD    [reduce using rule 119 (repeat_stmt)]
    STACKWRITE   [reduce using rule 77 (compound_loop_stmt)]
    STACKWRITE   [reduce using rule 119 (repeat_stmt)]
    IF           [reduce using rule 77 (compound_loop_stmt)]
    IF           [reduce using rule 119 (repeat_stmt)]
    ELSE         reduce using rule 77 (compound_loop_stmt)
    ELSE         [reduce using rule 119 (repeat_stmt)]
    REPEAT       [reduce using rule 77 (compound_loop_stmt)]
    REPEAT       [reduce using rule 119 (repeat_stmt)]
    UNTIL        reduce using rule 77 (compound_loop_stmt)
    UNTIL        [reduce using rule 119 (repeat_stmt)]
    WHILE        [reduce using rule 77 (compound_loop_stmt)]
    WHILE        [reduce using rule 119 (repeat_stmt)]
    CASE         [reduce using rule 77 (compound_loop_stmt)]
    CASE         [reduce using rule 119 (repeat_stmt)]
    FOR          [reduce using rule 77 (compound_loop_stmt)]
    FOR          [reduce using rule 119 (repeat_stmt)]
    SEMICOLON    reduce using rule 77 (compound_loop_stmt)
    SEMICOLON    [reduce using rule 119 (repeat_stmt)]
    DOT          reduce using rule 77 (compound_loop_stmt)
    DOT          [reduce using rule 119 (repeat_stmt)]
    GOTO         [reduce using rule 77 (compound_loop_stmt)]
    GOTO         [reduce using rule 119 (repeat_stmt)]
    BREAK        [reduce using rule 77 (compound_loop_stmt)]
    BREAK        [reduce using rule 119 (repeat_stmt)]
    CONTINUE     [reduce using rule 77 (compound_loop_stmt)]
    CONTINUE     [reduce using rule 119 (repeat_stmt)]
    $default     reduce using rule 77 (compound_loop_stmt)

    identifier          go to state 54
    compound_loop_stmt  go to state 126
    loop_stmt           go to state 203
    no_label_loop_stmt  go to state 128
    assign_stmt         go to state 129
    goto_stmt           go to state 130
    if_loop_stmt        go to state 131
    repeat_stmt         go to state 132
    while_stmt          go to state 133
    case_loop_stmt      go to state 134
    for_stmt            go to state 135
    for_head            go to state 65
    proc_stmt           go to state 136
    lvalue              go to state 67


State 211

   86 loop_stmt: INTEGER COLON • no_label_loop_stmt

    BBEGIN       shift, and go to state 120
    IDENT_NAME   shift, and go to state 10
    READ         shift, and go to state 40
    READLN       shift, and go to state 41
    WRITE        shift, and go to state 42
    WRITELN      shift, and go to state 43
    MEMORYREAD   shift, and go to state 44
    MEMORYWRITE  shift, and go to state 45
    STACKREAD    shift, and go to state 46
    STACKWRITE   shift, and go to state 47
    IF           shift, and go to state 122
    REPEAT       shift, and go to state 49
    WHILE        shift, and go to state 50
    CASE         shift, and go to state 123
    FOR          shift, and go to state 52
    GOTO         shift, and go to state 53
    BREAK        shift, and go to state 124
    CONTINUE     shift, and go to state 125

    BBEGIN       [reduce using rule 119 (repeat_stmt)]
    IDENT_NAME   [reduce using rule 119 (repeat_stmt)]
    READ         [reduce using rule 119 (repeat_stmt)]
    READLN       [reduce using rule 119 (repeat_stmt)]
    WRITE        [reduce using rule 119 (repeat_stmt)]
    WRITELN      [reduce using rule 119 (repeat_stmt)]
    MEMORYREAD   [reduce using rule 119 (repeat_stmt)]
    MEMORYWRITE  [reduce using rule 119 (repeat_stmt)]
    STACKREAD    [reduce using rule 119 (repeat_stmt)]
    STACKWRITE   [reduce using rule 119 (repeat_stmt)]
    IF           [reduce using rule 119 (repeat_stmt)]
    REPEAT       [reduce using rule 119 (repeat_stmt)]
    WHILE        [reduce using rule 119 (repeat_stmt)]
    CASE         [reduce using rule 119 (repeat_stmt)]
    FOR          [reduce using rule 119 (repeat_stmt)]
    GOTO         [reduce using rule 119 (repeat_stmt)]
    BREAK        [reduce using rule 119 (repeat_stmt)]
    CONTINUE     [reduce using rule 119 (repeat_stmt)]
    $default     reduce using rule 119 (repeat_stmt)

    identifier          go to state 54
    compound_loop_stmt  go to state 126
    no_label_loop_stmt  go to state 280
    assign_stmt         go to state 129
    goto_stmt           go to state 130
    if_loop_stmt        go to state 131
    repeat_stmt         go to state 132
    while_stmt          go to state 133
    case_loop_stmt      go to state 134
    for_stmt            go to state 135
    for_head            go to state 65
    proc_stmt           go to state 136
    lvalue              go to state 67


State 212

  112 if_loop_stmt: IF expression • THEN loop_stmt else_loop_clause
  113             | IF expression • loop_stmt else_loop_clause
  147 expression: expression • GE expr
  148           | expression • GT expr
  149           | expression • LE expr
  150           | expression • LT expr
  151           | expression • EQUAL expr
  152           | expression • UNEQUAL expr

    BBEGIN       shift, and go to state 120
    IDENT_NAME   shift, and go to state 10
    INTEGER      shift, and go to state 121
    READ         shift, and go to state 40
    READLN       shift, and go to state 41
    WRITE        shift, and go to state 42
    WRITELN      shift, and go to state 43
    MEMORYREAD   shift, and go to state 44
    MEMORYWRITE  shift, and go to state 45
    STACKREAD    shift, and go to state 46
    STACKWRITE   shift, and go to state 47
    IF           shift, and go to state 122
    THEN         shift, and go to state 281
    REPEAT       shift, and go to state 49
    WHILE        shift, and go to state 50
    CASE         shift, and go to state 123
    FOR          shift, and go to state 52
    EQUAL        shift, and go to state 188
    UNEQUAL      shift, and go to state 189
    GE           shift, and go to state 190
    GT           shift, and go to state 191
    LE           shift, and go to state 192
    LT           shift, and go to state 193
    GOTO         shift, and go to state 53
    BREAK        shift, and go to state 124
    CONTINUE     shift, and go to state 125

    BBEGIN       [reduce using rule 119 (repeat_stmt)]
    IDENT_NAME   [reduce using rule 119 (repeat_stmt)]
    INTEGER      [reduce using rule 119 (repeat_stmt)]
    READ         [reduce using rule 119 (repeat_stmt)]
    READLN       [reduce using rule 119 (repeat_stmt)]
    WRITE        [reduce using rule 119 (repeat_stmt)]
    WRITELN      [reduce using rule 119 (repeat_stmt)]
    MEMORYREAD   [reduce using rule 119 (repeat_stmt)]
    MEMORYWRITE  [reduce using rule 119 (repeat_stmt)]
    STACKREAD    [reduce using rule 119 (repeat_stmt)]
    STACKWRITE   [reduce using rule 119 (repeat_stmt)]
    IF           [reduce using rule 119 (repeat_stmt)]
    REPEAT       [reduce using rule 119 (repeat_stmt)]
    WHILE        [reduce using rule 119 (repeat_stmt)]
    CASE         [reduce using rule 119 (repeat_stmt)]
    FOR          [reduce using rule 119 (repeat_stmt)]
    GOTO         [reduce using rule 119 (repeat_stmt)]
    BREAK        [reduce using rule 119 (repeat_stmt)]
    CONTINUE     [reduce using rule 119 (repeat_stmt)]
    $default     reduce using rule 119 (repeat_stmt)

    identifier          go to state 54
    compound_loop_stmt  go to state 126
    loop_stmt           go to state 282
    no_label_loop_stmt  go to state 128
    assign_stmt         go to state 129
    goto_stmt           go to state 130
    if_loop_stmt        go to state 131
    repeat_stmt         go to state 132
    while_stmt          go to state 133
    case_loop_stmt      go to state 134
    for_stmt            go to state 135
    for_head            go to state 65
    proc_stmt           go to state 136
    lvalue              go to state 67


State 213

  122 case_loop_stmt: CASE expression • OF case_loop_expr_list END
  147 expression: expression • GE expr
  148           | expression • GT expr
  149           | expression • LE expr
  150           | expression • LT expr
  151           | expression • EQUAL expr
  152           | expression • UNEQUAL expr

    EQUAL    shift, and go to state 188
    UNEQUAL  shift, and go to state 189
    GE       shift, and go to state 190
    GT       shift, and go to state 191
    LE       shift, and go to state 192
    LT       shift, and go to state 193
    OF       shift, and go to state 283


State 214

  108 assign_stmt: lvalue ASSIGN expression •
  147 expression: expression • GE expr
  148           | expression • GT expr
  149           | expression • LE expr
  150           | expression • LT expr
  151           | expression • EQUAL expr
  152           | expression • UNEQUAL expr

    EQUAL    shift, and go to state 188
    UNEQUAL  shift, and go to state 189
    GE       shift, and go to state 190
    GT       shift, and go to state 191
    LE       shift, and go to state 192
    LT       shift, and go to state 193

    $default  reduce using rule 108 (assign_stmt)


State 215

  147 expression: expression • GE expr
  148           | expression • GT expr
  149           | expression • LE expr
  150           | expression • LT expr
  151           | expression • EQUAL expr
  152           | expression • UNEQUAL expr
  180 lvalue: lvalue LB expression • RB

    EQUAL    shift, and go to state 188
    UNEQUAL  shift, and go to state 189
    GE       shift, and go to state 190
    GT       shift, and go to state 191
    LE       shift, and go to state 192
    LT       shift, and go to state 193
    RB       shift, and go to state 284


State 216

  182 lvalue: lvalue DOT identifier •

    $default  reduce using rule 182 (lvalue)


State 217

   64 simple_type: LP name_list • RP
   70 name_list: name_list • COMMA identifier

    RP     shift, and go to state 285
    COMMA  shift, and go to state 153


State 218

   62 array_type_decl: ARRAY LB • simple_type RB OF type_decl

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    MINUS       shift, and go to state 36
    LP          shift, and go to state 140
    INT_TYPE    shift, and go to state 141
    BOOL_TYPE   shift, and go to state 142
    CHAR_TYPE   shift, and go to state 143

    const_value  go to state 146
    simple_type  go to state 286
    identifier   go to state 151


State 219

   57 record_type_decl: RECORD field_decl_list • END
   58 field_decl_list: field_decl_list • field_decl

    END         shift, and go to state 287
    IDENT_NAME  shift, and go to state 10

    field_decl  go to state 288
    name_list   go to state 221
    identifier  go to state 73


State 220

   59 field_decl_list: field_decl •

    $default  reduce using rule 59 (field_decl_list)


State 221

   60 field_decl: name_list • COLON type_decl SEMICOLON
   61           | name_list • COLON type_decl
   70 name_list: name_list • COMMA identifier

    COMMA  shift, and go to state 153
    COLON  shift, and go to state 289


State 222

   65 simple_type: const_value DOUBLEDOT • const_value

    INTEGER  shift, and go to state 30
    CHAR     shift, and go to state 31
    STRING   shift, and go to state 32
    TRUE     shift, and go to state 33
    FALSE    shift, and go to state 34
    MAXINT   shift, and go to state 35
    MINUS    shift, and go to state 36

    const_value  go to state 290


State 223

   52 type_def: identifier EQUAL type_decl SEMICOLON •

    $default  reduce using rule 52 (type_def)


State 224

   66 simple_type: identifier DOUBLEDOT • identifier

    IDENT_NAME  shift, and go to state 10

    identifier  go to state 291


State 225

   70 name_list: name_list COMMA identifier •

    $default  reduce using rule 70 (name_list)


State 226

   32 var_decl: name_list COLON type_decl • SEMICOLON
   33         | name_list COLON type_decl •

    SEMICOLON  shift, and go to state 292

    $default  reduce using rule 33 (var_decl)


State 227

   23 params: LP • params_decl RP

    VAR         shift, and go to state 293
    IDENT_NAME  shift, and go to state 10

    params_decl  go to state 294
    params_type  go to state 295
    name_list    go to state 296
    identifier   go to state 73


State 228

   16 fun_head: FUNCTION IDENT_NAME params • COLON simple_type

    COLON  shift, and go to state 297


State 229

   21 proc_head: PROCEDURE IDENT_NAME params •

    $default  reduce using rule 21 (proc_head)


State 230

   12 fun_decl: fun_head SEMICOLON routine • SEMICOLON
   13         | fun_head SEMICOLON routine •

    SEMICOLON  shift, and go to state 298

    $default  reduce using rule 13 (fun_decl)


State 231

   14 fun_decl: fun_head routine SEMICOLON •

    $default  reduce using rule 14 (fun_decl)


State 232

   17 proc_decl: proc_head SEMICOLON routine • SEMICOLON
   19          | proc_head SEMICOLON routine •

    SEMICOLON  shift, and go to state 299

    $default  reduce using rule 19 (proc_decl)


State 233

   18 proc_decl: proc_head routine SEMICOLON •

    $default  reduce using rule 18 (proc_decl)


State 234

  136 proc_stmt: READ LP factor RP •

    $default  reduce using rule 136 (proc_stmt)


State 235

  138 proc_stmt: WRITE LP args_list RP •

    $default  reduce using rule 138 (proc_stmt)


State 236

  145 args_list: args_list COMMA • expression

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 92
    CHR         shift, and go to state 93
    ODD         shift, and go to state 94
    ORD         shift, and go to state 95
    PRED        shift, and go to state 96
    SUCC        shift, and go to state 97
    TOINT       shift, and go to state 98
    TOCHAR      shift, and go to state 99
    TOBOOL      shift, and go to state 100
    MINUS       shift, and go to state 101
    NOT         shift, and go to state 102
    LP          shift, and go to state 103

    const_value  go to state 104
    identifier   go to state 105
    expression   go to state 300
    expr         go to state 107
    term         go to state 108
    factor       go to state 109
    lvalue       go to state 110


State 237

  140 proc_stmt: WRITELN LP args_list RP •

    $default  reduce using rule 140 (proc_stmt)


State 238

  141 proc_stmt: MEMORYREAD LP args_list RP •

    $default  reduce using rule 141 (proc_stmt)


State 239

  142 proc_stmt: MEMORYWRITE LP args_list RP •

    $default  reduce using rule 142 (proc_stmt)


State 240

  143 proc_stmt: STACKREAD LP args_list RP •

    $default  reduce using rule 143 (proc_stmt)


State 241

  144 proc_stmt: STACKWRITE LP args_list RP •

    $default  reduce using rule 144 (proc_stmt)


State 242

  145 args_list: args_list • COMMA expression
  169 factor: ABS LP args_list • RP

    RP     shift, and go to state 301
    COMMA  shift, and go to state 236


State 243

  145 args_list: args_list • COMMA expression
  170 factor: CHR LP args_list • RP

    RP     shift, and go to state 302
    COMMA  shift, and go to state 236


State 244

  145 args_list: args_list • COMMA expression
  171 factor: ODD LP args_list • RP

    RP     shift, and go to state 303
    COMMA  shift, and go to state 236


State 245

  145 args_list: args_list • COMMA expression
  172 factor: ORD LP args_list • RP

    RP     shift, and go to state 304
    COMMA  shift, and go to state 236


State 246

  145 args_list: args_list • COMMA expression
  173 factor: PRED LP args_list • RP

    RP     shift, and go to state 305
    COMMA  shift, and go to state 236


State 247

  145 args_list: args_list • COMMA expression
  174 factor: SUCC LP args_list • RP

    RP     shift, and go to state 306
    COMMA  shift, and go to state 236


State 248

  145 args_list: args_list • COMMA expression
  175 factor: TOINT LP args_list • RP

    RP     shift, and go to state 307
    COMMA  shift, and go to state 236


State 249

  145 args_list: args_list • COMMA expression
  176 factor: TOCHAR LP args_list • RP

    RP     shift, and go to state 308
    COMMA  shift, and go to state 236


State 250

  145 args_list: args_list • COMMA expression
  177 factor: TOBOOL LP args_list • RP

    RP     shift, and go to state 309
    COMMA  shift, and go to state 236


State 251

  166 factor: LP expression RP •

    $default  reduce using rule 166 (factor)


State 252

  145 args_list: args_list • COMMA expression
  163 factor: identifier LP args_list • RP

    RP     shift, and go to state 310
    COMMA  shift, and go to state 236


State 253

  110 if_stmt: IF expression THEN stmt • else_clause

    ELSE  shift, and go to state 260

    ELSE      [reduce using rule 114 (else_clause)]
    $default  reduce using rule 114 (else_clause)

    else_clause  go to state 311


State 254

  151 expression: expression EQUAL expr •
  154 expr: expr • PLUS term
  155     | expr • MINUS term
  156     | expr • OR term

    PLUS   shift, and go to state 195
    MINUS  shift, and go to state 196
    OR     shift, and go to state 197

    $default  reduce using rule 151 (expression)


State 255

  152 expression: expression UNEQUAL expr •
  154 expr: expr • PLUS term
  155     | expr • MINUS term
  156     | expr • OR term

    PLUS   shift, and go to state 195
    MINUS  shift, and go to state 196
    OR     shift, and go to state 197

    $default  reduce using rule 152 (expression)


State 256

  147 expression: expression GE expr •
  154 expr: expr • PLUS term
  155     | expr • MINUS term
  156     | expr • OR term

    PLUS   shift, and go to state 195
    MINUS  shift, and go to state 196
    OR     shift, and go to state 197

    $default  reduce using rule 147 (expression)


State 257

  148 expression: expression GT expr •
  154 expr: expr • PLUS term
  155     | expr • MINUS term
  156     | expr • OR term

    PLUS   shift, and go to state 195
    MINUS  shift, and go to state 196
    OR     shift, and go to state 197

    $default  reduce using rule 148 (expression)


State 258

  149 expression: expression LE expr •
  154 expr: expr • PLUS term
  155     | expr • MINUS term
  156     | expr • OR term

    PLUS   shift, and go to state 195
    MINUS  shift, and go to state 196
    OR     shift, and go to state 197

    $default  reduce using rule 149 (expression)


State 259

  150 expression: expression LT expr •
  154 expr: expr • PLUS term
  155     | expr • MINUS term
  156     | expr • OR term

    PLUS   shift, and go to state 195
    MINUS  shift, and go to state 196
    OR     shift, and go to state 197

    $default  reduce using rule 150 (expression)


State 260

  115 else_clause: ELSE • stmt

    BBEGIN       shift, and go to state 16
    IDENT_NAME   shift, and go to state 10
    INTEGER      shift, and go to state 39
    READ         shift, and go to state 40
    READLN       shift, and go to state 41
    WRITE        shift, and go to state 42
    WRITELN      shift, and go to state 43
    MEMORYREAD   shift, and go to state 44
    MEMORYWRITE  shift, and go to state 45
    STACKREAD    shift, and go to state 46
    STACKWRITE   shift, and go to state 47
    IF           shift, and go to state 48
    REPEAT       shift, and go to state 49
    WHILE        shift, and go to state 50
    CASE         shift, and go to state 51
    FOR          shift, and go to state 52
    GOTO         shift, and go to state 53

    BBEGIN       [reduce using rule 119 (repeat_stmt)]
    IDENT_NAME   [reduce using rule 119 (repeat_stmt)]
    INTEGER      [reduce using rule 119 (repeat_stmt)]
    READ         [reduce using rule 119 (repeat_stmt)]
    READLN       [reduce using rule 119 (repeat_stmt)]
    WRITE        [reduce using rule 119 (repeat_stmt)]
    WRITELN      [reduce using rule 119 (repeat_stmt)]
    MEMORYREAD   [reduce using rule 119 (repeat_stmt)]
    MEMORYWRITE  [reduce using rule 119 (repeat_stmt)]
    STACKREAD    [reduce using rule 119 (repeat_stmt)]
    STACKWRITE   [reduce using rule 119 (repeat_stmt)]
    IF           [reduce using rule 119 (repeat_stmt)]
    REPEAT       [reduce using rule 119 (repeat_stmt)]
    WHILE        [reduce using rule 119 (repeat_stmt)]
    CASE         [reduce using rule 119 (repeat_stmt)]
    FOR          [reduce using rule 119 (repeat_stmt)]
    GOTO         [reduce using rule 119 (repeat_stmt)]
    $default     reduce using rule 119 (repeat_stmt)

    identifier     go to state 54
    compound_stmt  go to state 55
    stmt           go to state 312
    no_label_stmt  go to state 57
    assign_stmt    go to state 58
    goto_stmt      go to state 59
    if_stmt        go to state 60
    repeat_stmt    go to state 61
    while_stmt     go to state 62
    case_stmt      go to state 63
    for_stmt       go to state 64
    for_head       go to state 65
    proc_stmt      go to state 66
    lvalue         go to state 67


State 261

  111 if_stmt: IF expression stmt else_clause •

    $default  reduce using rule 111 (if_stmt)


State 262

  154 expr: expr PLUS term •
  158 term: term • MUL factor
  159     | term • DIV factor
  160     | term • MOD factor
  161     | term • AND factor

    MUL  shift, and go to state 198
    DIV  shift, and go to state 199
    AND  shift, and go to state 200
    MOD  shift, and go to state 201

    $default  reduce using rule 154 (expr)


State 263

  155 expr: expr MINUS term •
  158 term: term • MUL factor
  159     | term • DIV factor
  160     | term • MOD factor
  161     | term • AND factor

    MUL  shift, and go to state 198
    DIV  shift, and go to state 199
    AND  shift, and go to state 200
    MOD  shift, and go to state 201

    $default  reduce using rule 155 (expr)


State 264

  156 expr: expr OR term •
  158 term: term • MUL factor
  159     | term • DIV factor
  160     | term • MOD factor
  161     | term • AND factor

    MUL  shift, and go to state 198
    DIV  shift, and go to state 199
    AND  shift, and go to state 200
    MOD  shift, and go to state 201

    $default  reduce using rule 156 (expr)


State 265

  158 term: term MUL factor •

    $default  reduce using rule 158 (term)


State 266

  159 term: term DIV factor •

    $default  reduce using rule 159 (term)


State 267

  161 term: term AND factor •

    $default  reduce using rule 161 (term)


State 268

  160 term: term MOD factor •

    $default  reduce using rule 160 (term)


State 269

  118 repeat_stmt: REPEAT loop_stmt_list UNTIL expression •
  147 expression: expression • GE expr
  148           | expression • GT expr
  149           | expression • LE expr
  150           | expression • LT expr
  151           | expression • EQUAL expr
  152           | expression • UNEQUAL expr

    EQUAL    shift, and go to state 188
    UNEQUAL  shift, and go to state 189
    GE       shift, and go to state 190
    GT       shift, and go to state 191
    LE       shift, and go to state 192
    LT       shift, and go to state 193

    $default  reduce using rule 118 (repeat_stmt)


State 270

   82 loop_stmt_list: loop_stmt_list loop_stmt SEMICOLON •

    $default  reduce using rule 82 (loop_stmt_list)


State 271

  120 while_stmt: WHILE expression DO loop_stmt •

    $default  reduce using rule 120 (while_stmt)


State 272

  128 case_expr: OTHERWISE • stmt SEMICOLON

    BBEGIN       shift, and go to state 16
    IDENT_NAME   shift, and go to state 10
    INTEGER      shift, and go to state 39
    READ         shift, and go to state 40
    READLN       shift, and go to state 41
    WRITE        shift, and go to state 42
    WRITELN      shift, and go to state 43
    MEMORYREAD   shift, and go to state 44
    MEMORYWRITE  shift, and go to state 45
    STACKREAD    shift, and go to state 46
    STACKWRITE   shift, and go to state 47
    IF           shift, and go to state 48
    REPEAT       shift, and go to state 49
    WHILE        shift, and go to state 50
    CASE         shift, and go to state 51
    FOR          shift, and go to state 52
    GOTO         shift, and go to state 53

    $default  reduce using rule 119 (repeat_stmt)

    identifier     go to state 54
    compound_stmt  go to state 55
    stmt           go to state 313
    no_label_stmt  go to state 57
    assign_stmt    go to state 58
    goto_stmt      go to state 59
    if_stmt        go to state 60
    repeat_stmt    go to state 61
    while_stmt     go to state 62
    case_stmt      go to state 63
    for_stmt       go to state 64
    for_head       go to state 65
    proc_stmt      go to state 66
    lvalue         go to state 67


State 273

  121 case_stmt: CASE expression OF case_expr_list • END
  123 case_expr_list: case_expr_list • case_expr

    END         shift, and go to state 314
    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 92
    CHR         shift, and go to state 93
    ODD         shift, and go to state 94
    ORD         shift, and go to state 95
    PRED        shift, and go to state 96
    SUCC        shift, and go to state 97
    TOINT       shift, and go to state 98
    TOCHAR      shift, and go to state 99
    TOBOOL      shift, and go to state 100
    MINUS       shift, and go to state 101
    NOT         shift, and go to state 102
    LP          shift, and go to state 103
    OTHERWISE   shift, and go to state 272

    const_value  go to state 104
    identifier   go to state 105
    case_expr    go to state 315
    expression   go to state 275
    expr         go to state 107
    term         go to state 108
    factor       go to state 109
    lvalue       go to state 110


State 274

  124 case_expr_list: case_expr •

    $default  reduce using rule 124 (case_expr_list)


State 275

  127 case_expr: expression • COLON stmt SEMICOLON
  147 expression: expression • GE expr
  148           | expression • GT expr
  149           | expression • LE expr
  150           | expression • LT expr
  151           | expression • EQUAL expr
  152           | expression • UNEQUAL expr

    EQUAL    shift, and go to state 188
    UNEQUAL  shift, and go to state 189
    GE       shift, and go to state 190
    GT       shift, and go to state 191
    LE       shift, and go to state 192
    LT       shift, and go to state 193
    COLON    shift, and go to state 316


State 276

  132 for_head: FOR identifier ASSIGN expression • TO expression DO
  133         | FOR identifier ASSIGN expression • DOWNTO expression DO
  147 expression: expression • GE expr
  148           | expression • GT expr
  149           | expression • LE expr
  150           | expression • LT expr
  151           | expression • EQUAL expr
  152           | expression • UNEQUAL expr

    TO       shift, and go to state 317
    DOWNTO   shift, and go to state 318
    EQUAL    shift, and go to state 188
    UNEQUAL  shift, and go to state 189
    GE       shift, and go to state 190
    GT       shift, and go to state 191
    LE       shift, and go to state 192
    LT       shift, and go to state 193


State 277

  179 lvalue: identifier LB expression RB •

    $default  reduce using rule 179 (lvalue)


State 278

  135 proc_stmt: identifier LP args_list RP •

    $default  reduce using rule 135 (proc_stmt)


State 279

   76 compound_loop_stmt: BBEGIN loop_stmt_list END •

    $default  reduce using rule 76 (compound_loop_stmt)


State 280

   86 loop_stmt: INTEGER COLON no_label_loop_stmt •

    $default  reduce using rule 86 (loop_stmt)


State 281

  112 if_loop_stmt: IF expression THEN • loop_stmt else_loop_clause

    BBEGIN       shift, and go to state 120
    IDENT_NAME   shift, and go to state 10
    INTEGER      shift, and go to state 121
    READ         shift, and go to state 40
    READLN       shift, and go to state 41
    WRITE        shift, and go to state 42
    WRITELN      shift, and go to state 43
    MEMORYREAD   shift, and go to state 44
    MEMORYWRITE  shift, and go to state 45
    STACKREAD    shift, and go to state 46
    STACKWRITE   shift, and go to state 47
    IF           shift, and go to state 122
    REPEAT       shift, and go to state 49
    WHILE        shift, and go to state 50
    CASE         shift, and go to state 123
    FOR          shift, and go to state 52
    GOTO         shift, and go to state 53
    BREAK        shift, and go to state 124
    CONTINUE     shift, and go to state 125

    BBEGIN       [reduce using rule 119 (repeat_stmt)]
    IDENT_NAME   [reduce using rule 119 (repeat_stmt)]
    INTEGER      [reduce using rule 119 (repeat_stmt)]
    READ         [reduce using rule 119 (repeat_stmt)]
    READLN       [reduce using rule 119 (repeat_stmt)]
    WRITE        [reduce using rule 119 (repeat_stmt)]
    WRITELN      [reduce using rule 119 (repeat_stmt)]
    MEMORYREAD   [reduce using rule 119 (repeat_stmt)]
    MEMORYWRITE  [reduce using rule 119 (repeat_stmt)]
    STACKREAD    [reduce using rule 119 (repeat_stmt)]
    STACKWRITE   [reduce using rule 119 (repeat_stmt)]
    IF           [reduce using rule 119 (repeat_stmt)]
    REPEAT       [reduce using rule 119 (repeat_stmt)]
    WHILE        [reduce using rule 119 (repeat_stmt)]
    CASE         [reduce using rule 119 (repeat_stmt)]
    FOR          [reduce using rule 119 (repeat_stmt)]
    GOTO         [reduce using rule 119 (repeat_stmt)]
    BREAK        [reduce using rule 119 (repeat_stmt)]
    CONTINUE     [reduce using rule 119 (repeat_stmt)]
    $default     reduce using rule 119 (repeat_stmt)

    identifier          go to state 54
    compound_loop_stmt  go to state 126
    loop_stmt           go to state 319
    no_label_loop_stmt  go to state 128
    assign_stmt         go to state 129
    goto_stmt           go to state 130
    if_loop_stmt        go to state 131
    repeat_stmt         go to state 132
    while_stmt          go to state 133
    case_loop_stmt      go to state 134
    for_stmt            go to state 135
    for_head            go to state 65
    proc_stmt           go to state 136
    lvalue              go to state 67


State 282

  113 if_loop_stmt: IF expression loop_stmt • else_loop_clause

    ELSE  shift, and go to state 320

    ELSE      [reduce using rule 116 (else_loop_clause)]
    $default  reduce using rule 116 (else_loop_clause)

    else_loop_clause  go to state 321


State 283

  122 case_loop_stmt: CASE expression OF • case_loop_expr_list END

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 92
    CHR         shift, and go to state 93
    ODD         shift, and go to state 94
    ORD         shift, and go to state 95
    PRED        shift, and go to state 96
    SUCC        shift, and go to state 97
    TOINT       shift, and go to state 98
    TOCHAR      shift, and go to state 99
    TOBOOL      shift, and go to state 100
    MINUS       shift, and go to state 101
    NOT         shift, and go to state 102
    LP          shift, and go to state 103
    OTHERWISE   shift, and go to state 322

    const_value          go to state 104
    identifier           go to state 105
    case_loop_expr_list  go to state 323
    case_loop_expr       go to state 324
    expression           go to state 325
    expr                 go to state 107
    term                 go to state 108
    factor               go to state 109
    lvalue               go to state 110


State 284

  180 lvalue: lvalue LB expression RB •

    $default  reduce using rule 180 (lvalue)


State 285

   64 simple_type: LP name_list RP •

    $default  reduce using rule 64 (simple_type)


State 286

   62 array_type_decl: ARRAY LB simple_type • RB OF type_decl

    RB  shift, and go to state 326


State 287

   57 record_type_decl: RECORD field_decl_list END •

    $default  reduce using rule 57 (record_type_decl)


State 288

   58 field_decl_list: field_decl_list field_decl •

    $default  reduce using rule 58 (field_decl_list)


State 289

   60 field_decl: name_list COLON • type_decl SEMICOLON
   61           | name_list COLON • type_decl

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    MINUS       shift, and go to state 36
    LP          shift, and go to state 140
    INT_TYPE    shift, and go to state 141
    BOOL_TYPE   shift, and go to state 142
    CHAR_TYPE   shift, and go to state 143
    ARRAY       shift, and go to state 144
    RECORD      shift, and go to state 145

    const_value       go to state 146
    type_decl         go to state 327
    record_type_decl  go to state 148
    array_type_decl   go to state 149
    simple_type       go to state 150
    identifier        go to state 151


State 290

   65 simple_type: const_value DOUBLEDOT const_value •

    $default  reduce using rule 65 (simple_type)


State 291

   66 simple_type: identifier DOUBLEDOT identifier •

    $default  reduce using rule 66 (simple_type)


State 292

   32 var_decl: name_list COLON type_decl SEMICOLON •

    $default  reduce using rule 32 (var_decl)


State 293

   26 params_type: VAR • name_list COLON simple_type

    IDENT_NAME  shift, and go to state 10

    name_list   go to state 328
    identifier  go to state 73


State 294

   23 params: LP params_decl • RP
   24 params_decl: params_decl • SEMICOLON params_type

    RP         shift, and go to state 329
    SEMICOLON  shift, and go to state 330


State 295

   25 params_decl: params_type •

    $default  reduce using rule 25 (params_decl)


State 296

   27 params_type: name_list • COLON simple_type
   70 name_list: name_list • COMMA identifier

    COMMA  shift, and go to state 153
    COLON  shift, and go to state 331


State 297

   16 fun_head: FUNCTION IDENT_NAME params COLON • simple_type

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    MINUS       shift, and go to state 36
    LP          shift, and go to state 140
    INT_TYPE    shift, and go to state 141
    BOOL_TYPE   shift, and go to state 142
    CHAR_TYPE   shift, and go to state 143

    const_value  go to state 146
    simple_type  go to state 332
    identifier   go to state 151


State 298

   12 fun_decl: fun_head SEMICOLON routine SEMICOLON •

    $default  reduce using rule 12 (fun_decl)


State 299

   17 proc_decl: proc_head SEMICOLON routine SEMICOLON •

    $default  reduce using rule 17 (proc_decl)


State 300

  145 args_list: args_list COMMA expression •
  147 expression: expression • GE expr
  148           | expression • GT expr
  149           | expression • LE expr
  150           | expression • LT expr
  151           | expression • EQUAL expr
  152           | expression • UNEQUAL expr

    EQUAL    shift, and go to state 188
    UNEQUAL  shift, and go to state 189
    GE       shift, and go to state 190
    GT       shift, and go to state 191
    LE       shift, and go to state 192
    LT       shift, and go to state 193

    $default  reduce using rule 145 (args_list)


State 301

  169 factor: ABS LP args_list RP •

    $default  reduce using rule 169 (factor)


State 302

  170 factor: CHR LP args_list RP •

    $default  reduce using rule 170 (factor)


State 303

  171 factor: ODD LP args_list RP •

    $default  reduce using rule 171 (factor)


State 304

  172 factor: ORD LP args_list RP •

    $default  reduce using rule 172 (factor)


State 305

  173 factor: PRED LP args_list RP •

    $default  reduce using rule 173 (factor)


State 306

  174 factor: SUCC LP args_list RP •

    $default  reduce using rule 174 (factor)


State 307

  175 factor: TOINT LP args_list RP •

    $default  reduce using rule 175 (factor)


State 308

  176 factor: TOCHAR LP args_list RP •

    $default  reduce using rule 176 (factor)


State 309

  177 factor: TOBOOL LP args_list RP •

    $default  reduce using rule 177 (factor)


State 310

  163 factor: identifier LP args_list RP •

    $default  reduce using rule 163 (factor)


State 311

  110 if_stmt: IF expression THEN stmt else_clause •

    $default  reduce using rule 110 (if_stmt)


State 312

  115 else_clause: ELSE stmt •

    $default  reduce using rule 115 (else_clause)


State 313

  128 case_expr: OTHERWISE stmt • SEMICOLON

    SEMICOLON  shift, and go to state 333


State 314

  121 case_stmt: CASE expression OF case_expr_list END •

    $default  reduce using rule 121 (case_stmt)


State 315

  123 case_expr_list: case_expr_list case_expr •

    $default  reduce using rule 123 (case_expr_list)


State 316

  127 case_expr: expression COLON • stmt SEMICOLON

    BBEGIN       shift, and go to state 16
    IDENT_NAME   shift, and go to state 10
    INTEGER      shift, and go to state 39
    READ         shift, and go to state 40
    READLN       shift, and go to state 41
    WRITE        shift, and go to state 42
    WRITELN      shift, and go to state 43
    MEMORYREAD   shift, and go to state 44
    MEMORYWRITE  shift, and go to state 45
    STACKREAD    shift, and go to state 46
    STACKWRITE   shift, and go to state 47
    IF           shift, and go to state 48
    REPEAT       shift, and go to state 49
    WHILE        shift, and go to state 50
    CASE         shift, and go to state 51
    FOR          shift, and go to state 52
    GOTO         shift, and go to state 53

    $default  reduce using rule 119 (repeat_stmt)

    identifier     go to state 54
    compound_stmt  go to state 55
    stmt           go to state 334
    no_label_stmt  go to state 57
    assign_stmt    go to state 58
    goto_stmt      go to state 59
    if_stmt        go to state 60
    repeat_stmt    go to state 61
    while_stmt     go to state 62
    case_stmt      go to state 63
    for_stmt       go to state 64
    for_head       go to state 65
    proc_stmt      go to state 66
    lvalue         go to state 67


State 317

  132 for_head: FOR identifier ASSIGN expression TO • expression DO

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 92
    CHR         shift, and go to state 93
    ODD         shift, and go to state 94
    ORD         shift, and go to state 95
    PRED        shift, and go to state 96
    SUCC        shift, and go to state 97
    TOINT       shift, and go to state 98
    TOCHAR      shift, and go to state 99
    TOBOOL      shift, and go to state 100
    MINUS       shift, and go to state 101
    NOT         shift, and go to state 102
    LP          shift, and go to state 103

    const_value  go to state 104
    identifier   go to state 105
    expression   go to state 335
    expr         go to state 107
    term         go to state 108
    factor       go to state 109
    lvalue       go to state 110


State 318

  133 for_head: FOR identifier ASSIGN expression DOWNTO • expression DO

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 92
    CHR         shift, and go to state 93
    ODD         shift, and go to state 94
    ORD         shift, and go to state 95
    PRED        shift, and go to state 96
    SUCC        shift, and go to state 97
    TOINT       shift, and go to state 98
    TOCHAR      shift, and go to state 99
    TOBOOL      shift, and go to state 100
    MINUS       shift, and go to state 101
    NOT         shift, and go to state 102
    LP          shift, and go to state 103

    const_value  go to state 104
    identifier   go to state 105
    expression   go to state 336
    expr         go to state 107
    term         go to state 108
    factor       go to state 109
    lvalue       go to state 110


State 319

  112 if_loop_stmt: IF expression THEN loop_stmt • else_loop_clause

    ELSE  shift, and go to state 320

    ELSE      [reduce using rule 116 (else_loop_clause)]
    $default  reduce using rule 116 (else_loop_clause)

    else_loop_clause  go to state 337


State 320

  117 else_loop_clause: ELSE • loop_stmt

    BBEGIN       shift, and go to state 120
    IDENT_NAME   shift, and go to state 10
    INTEGER      shift, and go to state 121
    READ         shift, and go to state 40
    READLN       shift, and go to state 41
    WRITE        shift, and go to state 42
    WRITELN      shift, and go to state 43
    MEMORYREAD   shift, and go to state 44
    MEMORYWRITE  shift, and go to state 45
    STACKREAD    shift, and go to state 46
    STACKWRITE   shift, and go to state 47
    IF           shift, and go to state 122
    REPEAT       shift, and go to state 49
    WHILE        shift, and go to state 50
    CASE         shift, and go to state 123
    FOR          shift, and go to state 52
    GOTO         shift, and go to state 53
    BREAK        shift, and go to state 124
    CONTINUE     shift, and go to state 125

    BBEGIN       [reduce using rule 119 (repeat_stmt)]
    IDENT_NAME   [reduce using rule 119 (repeat_stmt)]
    INTEGER      [reduce using rule 119 (repeat_stmt)]
    READ         [reduce using rule 119 (repeat_stmt)]
    READLN       [reduce using rule 119 (repeat_stmt)]
    WRITE        [reduce using rule 119 (repeat_stmt)]
    WRITELN      [reduce using rule 119 (repeat_stmt)]
    MEMORYREAD   [reduce using rule 119 (repeat_stmt)]
    MEMORYWRITE  [reduce using rule 119 (repeat_stmt)]
    STACKREAD    [reduce using rule 119 (repeat_stmt)]
    STACKWRITE   [reduce using rule 119 (repeat_stmt)]
    IF           [reduce using rule 119 (repeat_stmt)]
    REPEAT       [reduce using rule 119 (repeat_stmt)]
    WHILE        [reduce using rule 119 (repeat_stmt)]
    CASE         [reduce using rule 119 (repeat_stmt)]
    FOR          [reduce using rule 119 (repeat_stmt)]
    GOTO         [reduce using rule 119 (repeat_stmt)]
    BREAK        [reduce using rule 119 (repeat_stmt)]
    CONTINUE     [reduce using rule 119 (repeat_stmt)]
    $default     reduce using rule 119 (repeat_stmt)

    identifier          go to state 54
    compound_loop_stmt  go to state 126
    loop_stmt           go to state 338
    no_label_loop_stmt  go to state 128
    assign_stmt         go to state 129
    goto_stmt           go to state 130
    if_loop_stmt        go to state 131
    repeat_stmt         go to state 132
    while_stmt          go to state 133
    case_loop_stmt      go to state 134
    for_stmt            go to state 135
    for_head            go to state 65
    proc_stmt           go to state 136
    lvalue              go to state 67


State 321

  113 if_loop_stmt: IF expression loop_stmt else_loop_clause •

    $default  reduce using rule 113 (if_loop_stmt)


State 322

  130 case_loop_expr: OTHERWISE • loop_stmt SEMICOLON

    BBEGIN       shift, and go to state 120
    IDENT_NAME   shift, and go to state 10
    INTEGER      shift, and go to state 121
    READ         shift, and go to state 40
    READLN       shift, and go to state 41
    WRITE        shift, and go to state 42
    WRITELN      shift, and go to state 43
    MEMORYREAD   shift, and go to state 44
    MEMORYWRITE  shift, and go to state 45
    STACKREAD    shift, and go to state 46
    STACKWRITE   shift, and go to state 47
    IF           shift, and go to state 122
    REPEAT       shift, and go to state 49
    WHILE        shift, and go to state 50
    CASE         shift, and go to state 123
    FOR          shift, and go to state 52
    GOTO         shift, and go to state 53
    BREAK        shift, and go to state 124
    CONTINUE     shift, and go to state 125

    $default  reduce using rule 119 (repeat_stmt)

    identifier          go to state 54
    compound_loop_stmt  go to state 126
    loop_stmt           go to state 339
    no_label_loop_stmt  go to state 128
    assign_stmt         go to state 129
    goto_stmt           go to state 130
    if_loop_stmt        go to state 131
    repeat_stmt         go to state 132
    while_stmt          go to state 133
    case_loop_stmt      go to state 134
    for_stmt            go to state 135
    for_head            go to state 65
    proc_stmt           go to state 136
    lvalue              go to state 67


State 323

  122 case_loop_stmt: CASE expression OF case_loop_expr_list • END
  125 case_loop_expr_list: case_loop_expr_list • case_loop_expr

    END         shift, and go to state 340
    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 92
    CHR         shift, and go to state 93
    ODD         shift, and go to state 94
    ORD         shift, and go to state 95
    PRED        shift, and go to state 96
    SUCC        shift, and go to state 97
    TOINT       shift, and go to state 98
    TOCHAR      shift, and go to state 99
    TOBOOL      shift, and go to state 100
    MINUS       shift, and go to state 101
    NOT         shift, and go to state 102
    LP          shift, and go to state 103
    OTHERWISE   shift, and go to state 322

    const_value     go to state 104
    identifier      go to state 105
    case_loop_expr  go to state 341
    expression      go to state 325
    expr            go to state 107
    term            go to state 108
    factor          go to state 109
    lvalue          go to state 110


State 324

  126 case_loop_expr_list: case_loop_expr •

    $default  reduce using rule 126 (case_loop_expr_list)


State 325

  129 case_loop_expr: expression • COLON loop_stmt SEMICOLON
  147 expression: expression • GE expr
  148           | expression • GT expr
  149           | expression • LE expr
  150           | expression • LT expr
  151           | expression • EQUAL expr
  152           | expression • UNEQUAL expr

    EQUAL    shift, and go to state 188
    UNEQUAL  shift, and go to state 189
    GE       shift, and go to state 190
    GT       shift, and go to state 191
    LE       shift, and go to state 192
    LT       shift, and go to state 193
    COLON    shift, and go to state 342


State 326

   62 array_type_decl: ARRAY LB simple_type RB • OF type_decl

    OF  shift, and go to state 343


State 327

   60 field_decl: name_list COLON type_decl • SEMICOLON
   61           | name_list COLON type_decl •

    SEMICOLON  shift, and go to state 344

    $default  reduce using rule 61 (field_decl)


State 328

   26 params_type: VAR name_list • COLON simple_type
   70 name_list: name_list • COMMA identifier

    COMMA  shift, and go to state 153
    COLON  shift, and go to state 345


State 329

   23 params: LP params_decl RP •

    $default  reduce using rule 23 (params)


State 330

   24 params_decl: params_decl SEMICOLON • params_type

    VAR         shift, and go to state 293
    IDENT_NAME  shift, and go to state 10

    params_type  go to state 346
    name_list    go to state 296
    identifier   go to state 73


State 331

   27 params_type: name_list COLON • simple_type

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    MINUS       shift, and go to state 36
    LP          shift, and go to state 140
    INT_TYPE    shift, and go to state 141
    BOOL_TYPE   shift, and go to state 142
    CHAR_TYPE   shift, and go to state 143

    const_value  go to state 146
    simple_type  go to state 347
    identifier   go to state 151


State 332

   16 fun_head: FUNCTION IDENT_NAME params COLON simple_type •

    $default  reduce using rule 16 (fun_head)


State 333

  128 case_expr: OTHERWISE stmt SEMICOLON •

    $default  reduce using rule 128 (case_expr)


State 334

  127 case_expr: expression COLON stmt • SEMICOLON

    SEMICOLON  shift, and go to state 348


State 335

  132 for_head: FOR identifier ASSIGN expression TO expression • DO
  147 expression: expression • GE expr
  148           | expression • GT expr
  149           | expression • LE expr
  150           | expression • LT expr
  151           | expression • EQUAL expr
  152           | expression • UNEQUAL expr

    DO       shift, and go to state 349
    EQUAL    shift, and go to state 188
    UNEQUAL  shift, and go to state 189
    GE       shift, and go to state 190
    GT       shift, and go to state 191
    LE       shift, and go to state 192
    LT       shift, and go to state 193


State 336

  133 for_head: FOR identifier ASSIGN expression DOWNTO expression • DO
  147 expression: expression • GE expr
  148           | expression • GT expr
  149           | expression • LE expr
  150           | expression • LT expr
  151           | expression • EQUAL expr
  152           | expression • UNEQUAL expr

    DO       shift, and go to state 350
    EQUAL    shift, and go to state 188
    UNEQUAL  shift, and go to state 189
    GE       shift, and go to state 190
    GT       shift, and go to state 191
    LE       shift, and go to state 192
    LT       shift, and go to state 193


State 337

  112 if_loop_stmt: IF expression THEN loop_stmt else_loop_clause •

    $default  reduce using rule 112 (if_loop_stmt)


State 338

  117 else_loop_clause: ELSE loop_stmt •

    $default  reduce using rule 117 (else_loop_clause)


State 339

  130 case_loop_expr: OTHERWISE loop_stmt • SEMICOLON

    SEMICOLON  shift, and go to state 351


State 340

  122 case_loop_stmt: CASE expression OF case_loop_expr_list END •

    $default  reduce using rule 122 (case_loop_stmt)


State 341

  125 case_loop_expr_list: case_loop_expr_list case_loop_expr •

    $default  reduce using rule 125 (case_loop_expr_list)


State 342

  129 case_loop_expr: expression COLON • loop_stmt SEMICOLON

    BBEGIN       shift, and go to state 120
    IDENT_NAME   shift, and go to state 10
    INTEGER      shift, and go to state 121
    READ         shift, and go to state 40
    READLN       shift, and go to state 41
    WRITE        shift, and go to state 42
    WRITELN      shift, and go to state 43
    MEMORYREAD   shift, and go to state 44
    MEMORYWRITE  shift, and go to state 45
    STACKREAD    shift, and go to state 46
    STACKWRITE   shift, and go to state 47
    IF           shift, and go to state 122
    REPEAT       shift, and go to state 49
    WHILE        shift, and go to state 50
    CASE         shift, and go to state 123
    FOR          shift, and go to state 52
    GOTO         shift, and go to state 53
    BREAK        shift, and go to state 124
    CONTINUE     shift, and go to state 125

    $default  reduce using rule 119 (repeat_stmt)

    identifier          go to state 54
    compound_loop_stmt  go to state 126
    loop_stmt           go to state 352
    no_label_loop_stmt  go to state 128
    assign_stmt         go to state 129
    goto_stmt           go to state 130
    if_loop_stmt        go to state 131
    repeat_stmt         go to state 132
    while_stmt          go to state 133
    case_loop_stmt      go to state 134
    for_stmt            go to state 135
    for_head            go to state 65
    proc_stmt           go to state 136
    lvalue              go to state 67


State 343

   62 array_type_decl: ARRAY LB simple_type RB OF • type_decl

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    MINUS       shift, and go to state 36
    LP          shift, and go to state 140
    INT_TYPE    shift, and go to state 141
    BOOL_TYPE   shift, and go to state 142
    CHAR_TYPE   shift, and go to state 143
    ARRAY       shift, and go to state 144
    RECORD      shift, and go to state 145

    const_value       go to state 146
    type_decl         go to state 353
    record_type_decl  go to state 148
    array_type_decl   go to state 149
    simple_type       go to state 150
    identifier        go to state 151


State 344

   60 field_decl: name_list COLON type_decl SEMICOLON •

    $default  reduce using rule 60 (field_decl)


State 345

   26 params_type: VAR name_list COLON • simple_type

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    MINUS       shift, and go to state 36
    LP          shift, and go to state 140
    INT_TYPE    shift, and go to state 141
    BOOL_TYPE   shift, and go to state 142
    CHAR_TYPE   shift, and go to state 143

    const_value  go to state 146
    simple_type  go to state 354
    identifier   go to state 151


State 346

   24 params_decl: params_decl SEMICOLON params_type •

    $default  reduce using rule 24 (params_decl)


State 347

   27 params_type: name_list COLON simple_type •

    $default  reduce using rule 27 (params_type)


State 348

  127 case_expr: expression COLON stmt SEMICOLON •

    $default  reduce using rule 127 (case_expr)


State 349

  132 for_head: FOR identifier ASSIGN expression TO expression DO •

    $default  reduce using rule 132 (for_head)


State 350

  133 for_head: FOR identifier ASSIGN expression DOWNTO expression DO •

    $default  reduce using rule 133 (for_head)


State 351

  130 case_loop_expr: OTHERWISE loop_stmt SEMICOLON •

    $default  reduce using rule 130 (case_loop_expr)


State 352

  129 case_loop_expr: expression COLON loop_stmt • SEMICOLON

    SEMICOLON  shift, and go to state 355


State 353

   62 array_type_decl: ARRAY LB simple_type RB OF type_decl •

    $default  reduce using rule 62 (array_type_decl)


State 354

   26 params_type: VAR name_list COLON simple_type •

    $default  reduce using rule 26 (params_type)


State 355

  129 case_loop_expr: expression COLON loop_stmt SEMICOLON •

    $default  reduce using rule 129 (case_loop_expr)
