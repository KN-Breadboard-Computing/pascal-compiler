Terminals unused in grammar

    BOOLEAN
    ERROR


State 24 conflicts: 14 shift/reduce, 21 reduce/reduce
State 29 conflicts: 2 shift/reduce
State 50 conflicts: 1 shift/reduce
State 52 conflicts: 1 shift/reduce
State 78 conflicts: 12 shift/reduce
State 92 conflicts: 1 shift/reduce
State 93 conflicts: 13 shift/reduce
State 97 conflicts: 14 shift/reduce
State 142 conflicts: 42 reduce/reduce
State 143 conflicts: 42 reduce/reduce
State 150 conflicts: 13 shift/reduce
State 157 conflicts: 1 shift/reduce
State 166 conflicts: 13 shift/reduce
State 203 conflicts: 1 shift/reduce
State 210 conflicts: 13 shift/reduce
State 282 conflicts: 13 shift/reduce
State 283 conflicts: 13 shift/reduce


Grammar

    0 $accept: program $end

    1 program: PROGRAM IDENT_NAME SEMICOLON routine DOT
    2        | PROGRAM IDENT_NAME SEMICOLON routine
    3        | PROGRAM IDENT_NAME routine DOT
    4        | PROGRAM IDENT_NAME routine

    5 routine: routine_head routine_body

    6 routine_head: const_part type_part var_part routine_part

    7 routine_part: ε
    8             | routine_part fun_decl
    9             | routine_part proc_decl
   10             | fun_decl
   11             | proc_decl

   12 fun_decl: fun_head SEMICOLON routine SEMICOLON
   13         | fun_head SEMICOLON routine
   14         | fun_head routine SEMICOLON
   15         | fun_head routine

   16 fun_head: FUNCTION IDENT_NAME params COLON simple_type

   17 proc_decl: proc_head SEMICOLON routine SEMICOLON

   18 proc_head: PROCEDURE IDENT_NAME params

   19 params: ε
   20       | LP params_decl RP

   21 params_decl: params_decl SEMICOLON params_type
   22            | params_type

   23 params_type: VAR name_list COLON simple_type
   24            | name_list COLON simple_type

   25 var_part: ε
   26         | VAR var_decl_list

   27 var_decl_list: var_decl_list var_decl
   28              | var_decl

   29 var_decl: name_list COLON type_decl SEMICOLON
   30         | name_list COLON type_decl

   31 const_part: ε
   32           | CONST const_expr_list

   33 const_expr_list: const_expr_list const_expr
   34                | const_expr

   35 const_expr: identifier EQUAL const_value SEMICOLON
   36           | identifier EQUAL const_value

   37 const_value: INTEGER
   38            | MINUS INTEGER
   39            | CHAR
   40            | STRING
   41            | TRUE
   42            | FALSE
   43            | MAXINT
   44            | MINUS MAXINT

   45 type_part: ε
   46          | TYPE type_decl_list

   47 type_decl_list: type_decl_list type_def
   48               | type_def

   49 type_def: identifier EQUAL type_decl SEMICOLON
   50         | identifier EQUAL type_decl

   51 type_decl: simple_type
   52          | array_type_decl
   53          | record_type_decl

   54 record_type_decl: RECORD field_decl_list END

   55 field_decl_list: field_decl_list field_decl
   56                | field_decl

   57 field_decl: name_list COLON type_decl SEMICOLON
   58           | name_list COLON type_decl

   59 array_type_decl: ARRAY LB simple_type RB OF type_decl

   60 simple_type: identifier
   61            | LP name_list RP
   62            | const_value DOUBLEDOT const_value
   63            | identifier DOUBLEDOT identifier
   64            | INT_TYPE
   65            | UNSIGNED_TYPE
   66            | BOOL_TYPE
   67            | CHAR_TYPE
   68            | STRING_TYPE

   69 name_list: name_list COMMA identifier
   70          | identifier

   71 identifier: IDENT_NAME

   72 routine_body: compound_stmt

   73 compound_stmt: BBEGIN stmt_list END
   74              | BBEGIN stmt_list

   75 stmt_list: ε
   76          | stmt_list stmt SEMICOLON
   77          | stmt_list stmt

   78 stmt: INTEGER COLON no_label_stmt
   79     | no_label_stmt

   80 no_label_stmt: assign_stmt
   81              | compound_stmt
   82              | goto_stmt
   83              | if_stmt
   84              | repeat_stmt
   85              | while_stmt
   86              | case_stmt
   87              | for_stmt
   88              | proc_stmt

   89 assign_stmt: identifier ASSIGN expression
   90            | identifier LB expression RB ASSIGN expression
   91            | identifier DOT identifier ASSIGN expression

   92 goto_stmt: GOTO INTEGER

   93 if_stmt: IF expression THEN stmt else_clause
   94        | IF expression stmt else_clause

   95 else_clause: ε
   96            | ELSE stmt

   97 repeat_stmt: REPEAT stmt_list UNTIL expression
   98            | ε

   99 while_stmt: WHILE expression DO stmt

  100 case_stmt: CASE expression OF case_expr_list END

  101 case_expr_list: case_expr_list case_expr
  102               | case_expr

  103 case_expr: const_value COLON stmt SEMICOLON
  104          | identifier COLON stmt SEMICOLON

  105 for_stmt: FOR identifier ASSIGN expression TO expression DO stmt
  106         | FOR identifier ASSIGN expression DOWNTO expression DO stmt

  107 proc_stmt: identifier
  108          | identifier LP args_list RP
  109          | READ LP factor RP
  110          | READLN
  111          | WRITE LP args_list RP
  112          | WRITELN
  113          | WRITELN LP args_list RP

  114 args_list: args_list COMMA expression
  115          | expression

  116 expression: expression GE expr
  117           | expression GT expr
  118           | expression LE expr
  119           | expression LT expr
  120           | expression EQUAL expr
  121           | expression UNEQUAL expr
  122           | expr

  123 expr: expr PLUS term
  124     | expr MINUS term
  125     | expr OR term
  126     | term

  127 term: term MUL factor
  128     | term DIV factor
  129     | term MOD factor
  130     | term AND factor
  131     | factor

  132 factor: identifier
  133       | identifier LP args_list RP
  134       | const_value
  135       | LP expression RP
  136       | NOT factor
  137       | MINUS factor
  138       | identifier LB expression RB
  139       | identifier DOT identifier
  140       | ABS LP args_list RP
  141       | CHR LP args_list RP
  142       | ODD LP args_list RP
  143       | ORD LP args_list RP
  144       | PRED LP args_list RP
  145       | SUCC LP args_list RP


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    PROGRAM <token> (258) 1 2 3 4
    FUNCTION <token> (259) 16
    PROCEDURE <token> (260) 18
    CONST <token> (261) 32
    TYPE <token> (262) 46
    VAR <token> (263) 23 26
    BBEGIN <token> (264) 73 74
    END <token> (265) 54 73 100
    IDENT_NAME <token> (266) 1 2 3 4 16 18 71
    INTEGER <token> (267) 37 38 78 92
    BOOLEAN <token> (268)
    CHAR <token> (269) 39
    STRING <token> (270) 40
    TRUE <token> (271) 41
    FALSE <token> (272) 42
    MAXINT <token> (273) 43 44
    READ <token> (274) 109
    READLN <token> (275) 110
    WRITE <token> (276) 111
    WRITELN <token> (277) 112 113
    ABS <token> (278) 140
    CHR <token> (279) 141
    ODD <token> (280) 142
    ORD <token> (281) 143
    PRED <token> (282) 144
    SUCC <token> (283) 145
    IF <token> (284) 93 94
    THEN <token> (285) 93
    ELSE <token> (286) 96
    REPEAT <token> (287) 97
    UNTIL <token> (288) 97
    WHILE <token> (289) 99
    DO <token> (290) 99 105 106
    CASE <token> (291) 100
    TO <token> (292) 105
    DOWNTO <token> (293) 106
    FOR <token> (294) 105 106
    EQUAL <token> (295) 35 36 49 50 120
    UNEQUAL <token> (296) 121
    GE <token> (297) 116
    GT <token> (298) 117
    LE <token> (299) 118
    LT <token> (300) 119
    ASSIGN <token> (301) 89 90 91 105 106
    PLUS <token> (302) 123
    MINUS <token> (303) 38 44 124 137
    MUL <token> (304) 127
    DIV <token> (305) 128
    OR <token> (306) 125
    AND <token> (307) 130
    NOT <token> (308) 136
    MOD <token> (309) 129
    LB <token> (310) 59 90 138
    RB <token> (311) 59 90 138
    LP <token> (312) 20 61 108 109 111 113 133 135 140 141 142 143 144 145
    RP <token> (313) 20 61 108 109 111 113 133 135 140 141 142 143 144 145
    SEMICOLON <token> (314) 1 2 12 13 14 17 21 29 35 49 57 76 103 104
    DOT <token> (315) 1 3 91 139
    DOUBLEDOT <token> (316) 62 63
    COMMA <token> (317) 69 114
    COLON <token> (318) 16 23 24 29 30 57 58 78 103 104
    INT_TYPE <token> (319) 64
    UNSIGNED_TYPE <token> (320) 65
    BOOL_TYPE <token> (321) 66
    CHAR_TYPE <token> (322) 67
    STRING_TYPE <token> (323) 68
    ARRAY <token> (324) 59
    OF <token> (325) 59 100
    RECORD <token> (326) 54
    GOTO <token> (327) 92
    ERROR <token> (328)


Nonterminals, with rules where they appear

    $accept (74)
        on left: 0
    program <programNode> (75)
        on left: 1 2 3 4
        on right: 0
    routine <routineNode> (76)
        on left: 5
        on right: 1 2 3 4 12 13 14 15 17
    routine_head <routineHeadNode> (77)
        on left: 6
        on right: 5
    routine_part <routinePartList> (78)
        on left: 7 8 9 10 11
        on right: 6 8 9
    fun_decl <routineDeclarationNode> (79)
        on left: 12 13 14 15
        on right: 8 10
    fun_head <routineDeclarationNode> (80)
        on left: 16
        on right: 12 13 14 15
    proc_decl <routineDeclarationNode> (81)
        on left: 17
        on right: 9 11
    proc_head <routineDeclarationNode> (82)
        on left: 18
        on right: 17
    params <paramsNode> (83)
        on left: 19 20
        on right: 16 18
    params_decl <paramsGroupList> (84)
        on left: 21 22
        on right: 20 21
    params_type <paramsGroupNode> (85)
        on left: 23 24
        on right: 21 22
    var_part <varPartList> (86)
        on left: 25 26
        on right: 6
    var_decl_list <varPartList> (87)
        on left: 27 28
        on right: 26 27
    var_decl <varPartListElement> (88)
        on left: 29 30
        on right: 27 28
    const_part <constPartList> (89)
        on left: 31 32
        on right: 6
    const_expr_list <constPartList> (90)
        on left: 33 34
        on right: 32 33
    const_expr <constPartListElement> (91)
        on left: 35 36
        on right: 33 34
    const_value <constantNode> (92)
        on left: 37 38 39 40 41 42 43 44
        on right: 35 36 62 103 134
    type_part <typePartList> (93)
        on left: 45 46
        on right: 6
    type_decl_list <typePartList> (94)
        on left: 47 48
        on right: 46 47
    type_def <typePartListElement> (95)
        on left: 49 50
        on right: 47 48
    type_decl <typeNode> (96)
        on left: 51 52 53
        on right: 29 30 49 50 57 58 59
    record_type_decl <recordTypeNode> (97)
        on left: 54
        on right: 53
    field_decl_list <fieldDeclList> (98)
        on left: 55 56
        on right: 54 55
    field_decl <fieldDeclListElement> (99)
        on left: 57 58
        on right: 55 56
    array_type_decl <arrayTypeNode> (100)
        on left: 59
        on right: 52
    simple_type <simpleTypeNode> (101)
        on left: 60 61 62 63 64 65 66 67 68
        on right: 16 23 24 51 59
    name_list <identifierList> (102)
        on left: 69 70
        on right: 23 24 29 30 57 58 61 69
    identifier <identifierNode> (103)
        on left: 71
        on right: 35 36 49 50 60 63 69 70 89 90 91 104 105 106 107 108 132 133 138 139
    routine_body <routineBodyNode> (104)
        on left: 72
        on right: 5
    compound_stmt <compoundStatementNode> (105)
        on left: 73 74
        on right: 72 81
    stmt_list <statementNodeList> (106)
        on left: 75 76 77
        on right: 73 74 76 77 97
    stmt <statementNode> (107)
        on left: 78 79
        on right: 76 77 93 94 96 99 103 104 105 106
    no_label_stmt <statementNode> (108)
        on left: 80 81 82 83 84 85 86 87 88
        on right: 78 79
    assign_stmt <assignNode> (109)
        on left: 89 90 91
        on right: 80
    goto_stmt <gotoNode> (110)
        on left: 92
        on right: 82
    if_stmt <ifNode> (111)
        on left: 93 94
        on right: 83
    else_clause <ifNode> (112)
        on left: 95 96
        on right: 93 94
    repeat_stmt <repeatNode> (113)
        on left: 97 98
        on right: 84
    while_stmt <whileNode> (114)
        on left: 99
        on right: 85
    case_stmt <caseNode> (115)
        on left: 100
        on right: 86
    case_expr_list <caseExprList> (116)
        on left: 101 102
        on right: 100 101
    case_expr <caseExpr> (117)
        on left: 103 104
        on right: 101 102
    for_stmt <forNode> (118)
        on left: 105 106
        on right: 87
    proc_stmt <callNode> (119)
        on left: 107 108 109 110 111 112 113
        on right: 88
    args_list <argsList> (120)
        on left: 114 115
        on right: 108 111 113 114 133 140 141 142 143 144 145
    expression <expressionNode> (121)
        on left: 116 117 118 119 120 121 122
        on right: 89 90 91 93 94 97 99 100 105 106 114 115 116 117 118 119 120 121 135 138
    expr <expressionNode> (122)
        on left: 123 124 125 126
        on right: 116 117 118 119 120 121 122 123 124 125
    term <expressionNode> (123)
        on left: 127 128 129 130 131
        on right: 123 124 125 126 127 128 129 130
    factor <expressionNode> (124)
        on left: 132 133 134 135 136 137 138 139 140 141 142 143 144 145
        on right: 109 127 128 129 130 131 136 137


State 0

    0 $accept: • program $end

    PROGRAM  shift, and go to state 1

    program  go to state 2


State 1

    1 program: PROGRAM • IDENT_NAME SEMICOLON routine DOT
    2        | PROGRAM • IDENT_NAME SEMICOLON routine
    3        | PROGRAM • IDENT_NAME routine DOT
    4        | PROGRAM • IDENT_NAME routine

    IDENT_NAME  shift, and go to state 3


State 2

    0 $accept: program • $end

    $end  shift, and go to state 4


State 3

    1 program: PROGRAM IDENT_NAME • SEMICOLON routine DOT
    2        | PROGRAM IDENT_NAME • SEMICOLON routine
    3        | PROGRAM IDENT_NAME • routine DOT
    4        | PROGRAM IDENT_NAME • routine

    CONST      shift, and go to state 5
    SEMICOLON  shift, and go to state 6

    $default  reduce using rule 31 (const_part)

    routine       go to state 7
    routine_head  go to state 8
    const_part    go to state 9


State 4

    0 $accept: program $end •

    $default  accept


State 5

   32 const_part: CONST • const_expr_list

    IDENT_NAME  shift, and go to state 10

    const_expr_list  go to state 11
    const_expr       go to state 12
    identifier       go to state 13


State 6

    1 program: PROGRAM IDENT_NAME SEMICOLON • routine DOT
    2        | PROGRAM IDENT_NAME SEMICOLON • routine

    CONST  shift, and go to state 5

    $default  reduce using rule 31 (const_part)

    routine       go to state 14
    routine_head  go to state 8
    const_part    go to state 9


State 7

    3 program: PROGRAM IDENT_NAME routine • DOT
    4        | PROGRAM IDENT_NAME routine •

    DOT  shift, and go to state 15

    $default  reduce using rule 4 (program)


State 8

    5 routine: routine_head • routine_body

    BBEGIN  shift, and go to state 16

    routine_body   go to state 17
    compound_stmt  go to state 18


State 9

    6 routine_head: const_part • type_part var_part routine_part

    TYPE  shift, and go to state 19

    $default  reduce using rule 45 (type_part)

    type_part  go to state 20


State 10

   71 identifier: IDENT_NAME •

    $default  reduce using rule 71 (identifier)


State 11

   32 const_part: CONST const_expr_list •
   33 const_expr_list: const_expr_list • const_expr

    IDENT_NAME  shift, and go to state 10

    $default  reduce using rule 32 (const_part)

    const_expr  go to state 21
    identifier  go to state 13


State 12

   34 const_expr_list: const_expr •

    $default  reduce using rule 34 (const_expr_list)


State 13

   35 const_expr: identifier • EQUAL const_value SEMICOLON
   36           | identifier • EQUAL const_value

    EQUAL  shift, and go to state 22


State 14

    1 program: PROGRAM IDENT_NAME SEMICOLON routine • DOT
    2        | PROGRAM IDENT_NAME SEMICOLON routine •

    DOT  shift, and go to state 23

    $default  reduce using rule 2 (program)


State 15

    3 program: PROGRAM IDENT_NAME routine DOT •

    $default  reduce using rule 3 (program)


State 16

   73 compound_stmt: BBEGIN • stmt_list END
   74              | BBEGIN • stmt_list

    $default  reduce using rule 75 (stmt_list)

    stmt_list  go to state 24


State 17

    5 routine: routine_head routine_body •

    $default  reduce using rule 5 (routine)


State 18

   72 routine_body: compound_stmt •

    $default  reduce using rule 72 (routine_body)


State 19

   46 type_part: TYPE • type_decl_list

    IDENT_NAME  shift, and go to state 10

    type_decl_list  go to state 25
    type_def        go to state 26
    identifier      go to state 27


State 20

    6 routine_head: const_part type_part • var_part routine_part

    VAR  shift, and go to state 28

    $default  reduce using rule 25 (var_part)

    var_part  go to state 29


State 21

   33 const_expr_list: const_expr_list const_expr •

    $default  reduce using rule 33 (const_expr_list)


State 22

   35 const_expr: identifier EQUAL • const_value SEMICOLON
   36           | identifier EQUAL • const_value

    INTEGER  shift, and go to state 30
    CHAR     shift, and go to state 31
    STRING   shift, and go to state 32
    TRUE     shift, and go to state 33
    FALSE    shift, and go to state 34
    MAXINT   shift, and go to state 35
    MINUS    shift, and go to state 36

    const_value  go to state 37


State 23

    1 program: PROGRAM IDENT_NAME SEMICOLON routine DOT •

    $default  reduce using rule 1 (program)


State 24

   73 compound_stmt: BBEGIN stmt_list • END
   74              | BBEGIN stmt_list •
   76 stmt_list: stmt_list • stmt SEMICOLON
   77          | stmt_list • stmt

    BBEGIN      shift, and go to state 16
    END         shift, and go to state 38
    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 39
    READ        shift, and go to state 40
    READLN      shift, and go to state 41
    WRITE       shift, and go to state 42
    WRITELN     shift, and go to state 43
    IF          shift, and go to state 44
    REPEAT      shift, and go to state 45
    WHILE       shift, and go to state 46
    CASE        shift, and go to state 47
    FOR         shift, and go to state 48
    GOTO        shift, and go to state 49

    $end        reduce using rule 74 (compound_stmt)
    $end        [reduce using rule 98 (repeat_stmt)]
    FUNCTION    reduce using rule 74 (compound_stmt)
    FUNCTION    [reduce using rule 98 (repeat_stmt)]
    PROCEDURE   reduce using rule 74 (compound_stmt)
    PROCEDURE   [reduce using rule 98 (repeat_stmt)]
    BBEGIN      [reduce using rule 74 (compound_stmt)]
    BBEGIN      [reduce using rule 98 (repeat_stmt)]
    END         [reduce using rule 74 (compound_stmt)]
    END         [reduce using rule 98 (repeat_stmt)]
    IDENT_NAME  [reduce using rule 74 (compound_stmt)]
    IDENT_NAME  [reduce using rule 98 (repeat_stmt)]
    INTEGER     [reduce using rule 74 (compound_stmt)]
    INTEGER     [reduce using rule 98 (repeat_stmt)]
    READ        [reduce using rule 74 (compound_stmt)]
    READ        [reduce using rule 98 (repeat_stmt)]
    READLN      [reduce using rule 74 (compound_stmt)]
    READLN      [reduce using rule 98 (repeat_stmt)]
    WRITE       [reduce using rule 74 (compound_stmt)]
    WRITE       [reduce using rule 98 (repeat_stmt)]
    WRITELN     [reduce using rule 74 (compound_stmt)]
    WRITELN     [reduce using rule 98 (repeat_stmt)]
    IF          [reduce using rule 74 (compound_stmt)]
    IF          [reduce using rule 98 (repeat_stmt)]
    ELSE        reduce using rule 74 (compound_stmt)
    ELSE        [reduce using rule 98 (repeat_stmt)]
    REPEAT      [reduce using rule 74 (compound_stmt)]
    REPEAT      [reduce using rule 98 (repeat_stmt)]
    UNTIL       reduce using rule 74 (compound_stmt)
    UNTIL       [reduce using rule 98 (repeat_stmt)]
    WHILE       [reduce using rule 74 (compound_stmt)]
    WHILE       [reduce using rule 98 (repeat_stmt)]
    CASE        [reduce using rule 74 (compound_stmt)]
    CASE        [reduce using rule 98 (repeat_stmt)]
    FOR         [reduce using rule 74 (compound_stmt)]
    FOR         [reduce using rule 98 (repeat_stmt)]
    SEMICOLON   reduce using rule 74 (compound_stmt)
    SEMICOLON   [reduce using rule 98 (repeat_stmt)]
    DOT         reduce using rule 74 (compound_stmt)
    DOT         [reduce using rule 98 (repeat_stmt)]
    GOTO        [reduce using rule 74 (compound_stmt)]
    GOTO        [reduce using rule 98 (repeat_stmt)]
    $default    reduce using rule 74 (compound_stmt)

    identifier     go to state 50
    compound_stmt  go to state 51
    stmt           go to state 52
    no_label_stmt  go to state 53
    assign_stmt    go to state 54
    goto_stmt      go to state 55
    if_stmt        go to state 56
    repeat_stmt    go to state 57
    while_stmt     go to state 58
    case_stmt      go to state 59
    for_stmt       go to state 60
    proc_stmt      go to state 61


State 25

   46 type_part: TYPE type_decl_list •
   47 type_decl_list: type_decl_list • type_def

    IDENT_NAME  shift, and go to state 10

    $default  reduce using rule 46 (type_part)

    type_def    go to state 62
    identifier  go to state 27


State 26

   48 type_decl_list: type_def •

    $default  reduce using rule 48 (type_decl_list)


State 27

   49 type_def: identifier • EQUAL type_decl SEMICOLON
   50         | identifier • EQUAL type_decl

    EQUAL  shift, and go to state 63


State 28

   26 var_part: VAR • var_decl_list

    IDENT_NAME  shift, and go to state 10

    var_decl_list  go to state 64
    var_decl       go to state 65
    name_list      go to state 66
    identifier     go to state 67


State 29

    6 routine_head: const_part type_part var_part • routine_part

    FUNCTION   shift, and go to state 68
    PROCEDURE  shift, and go to state 69

    FUNCTION   [reduce using rule 7 (routine_part)]
    PROCEDURE  [reduce using rule 7 (routine_part)]
    $default   reduce using rule 7 (routine_part)

    routine_part  go to state 70
    fun_decl      go to state 71
    fun_head      go to state 72
    proc_decl     go to state 73
    proc_head     go to state 74


State 30

   37 const_value: INTEGER •

    $default  reduce using rule 37 (const_value)


State 31

   39 const_value: CHAR •

    $default  reduce using rule 39 (const_value)


State 32

   40 const_value: STRING •

    $default  reduce using rule 40 (const_value)


State 33

   41 const_value: TRUE •

    $default  reduce using rule 41 (const_value)


State 34

   42 const_value: FALSE •

    $default  reduce using rule 42 (const_value)


State 35

   43 const_value: MAXINT •

    $default  reduce using rule 43 (const_value)


State 36

   38 const_value: MINUS • INTEGER
   44            | MINUS • MAXINT

    INTEGER  shift, and go to state 75
    MAXINT   shift, and go to state 76


State 37

   35 const_expr: identifier EQUAL const_value • SEMICOLON
   36           | identifier EQUAL const_value •

    SEMICOLON  shift, and go to state 77

    $default  reduce using rule 36 (const_expr)


State 38

   73 compound_stmt: BBEGIN stmt_list END •

    $default  reduce using rule 73 (compound_stmt)


State 39

   78 stmt: INTEGER • COLON no_label_stmt

    COLON  shift, and go to state 78


State 40

  109 proc_stmt: READ • LP factor RP

    LP  shift, and go to state 79


State 41

  110 proc_stmt: READLN •

    $default  reduce using rule 110 (proc_stmt)


State 42

  111 proc_stmt: WRITE • LP args_list RP

    LP  shift, and go to state 80


State 43

  112 proc_stmt: WRITELN •
  113          | WRITELN • LP args_list RP

    LP  shift, and go to state 81

    $default  reduce using rule 112 (proc_stmt)


State 44

   93 if_stmt: IF • expression THEN stmt else_clause
   94        | IF • expression stmt else_clause

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 82
    CHR         shift, and go to state 83
    ODD         shift, and go to state 84
    ORD         shift, and go to state 85
    PRED        shift, and go to state 86
    SUCC        shift, and go to state 87
    MINUS       shift, and go to state 88
    NOT         shift, and go to state 89
    LP          shift, and go to state 90

    const_value  go to state 91
    identifier   go to state 92
    expression   go to state 93
    expr         go to state 94
    term         go to state 95
    factor       go to state 96


State 45

   97 repeat_stmt: REPEAT • stmt_list UNTIL expression

    $default  reduce using rule 75 (stmt_list)

    stmt_list  go to state 97


State 46

   99 while_stmt: WHILE • expression DO stmt

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 82
    CHR         shift, and go to state 83
    ODD         shift, and go to state 84
    ORD         shift, and go to state 85
    PRED        shift, and go to state 86
    SUCC        shift, and go to state 87
    MINUS       shift, and go to state 88
    NOT         shift, and go to state 89
    LP          shift, and go to state 90

    const_value  go to state 91
    identifier   go to state 92
    expression   go to state 98
    expr         go to state 94
    term         go to state 95
    factor       go to state 96


State 47

  100 case_stmt: CASE • expression OF case_expr_list END

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 82
    CHR         shift, and go to state 83
    ODD         shift, and go to state 84
    ORD         shift, and go to state 85
    PRED        shift, and go to state 86
    SUCC        shift, and go to state 87
    MINUS       shift, and go to state 88
    NOT         shift, and go to state 89
    LP          shift, and go to state 90

    const_value  go to state 91
    identifier   go to state 92
    expression   go to state 99
    expr         go to state 94
    term         go to state 95
    factor       go to state 96


State 48

  105 for_stmt: FOR • identifier ASSIGN expression TO expression DO stmt
  106         | FOR • identifier ASSIGN expression DOWNTO expression DO stmt

    IDENT_NAME  shift, and go to state 10

    identifier  go to state 100


State 49

   92 goto_stmt: GOTO • INTEGER

    INTEGER  shift, and go to state 101


State 50

   89 assign_stmt: identifier • ASSIGN expression
   90            | identifier • LB expression RB ASSIGN expression
   91            | identifier • DOT identifier ASSIGN expression
  107 proc_stmt: identifier •
  108          | identifier • LP args_list RP

    ASSIGN  shift, and go to state 102
    LB      shift, and go to state 103
    LP      shift, and go to state 104
    DOT     shift, and go to state 105

    DOT       [reduce using rule 107 (proc_stmt)]
    $default  reduce using rule 107 (proc_stmt)


State 51

   81 no_label_stmt: compound_stmt •

    $default  reduce using rule 81 (no_label_stmt)


State 52

   76 stmt_list: stmt_list stmt • SEMICOLON
   77          | stmt_list stmt •

    SEMICOLON  shift, and go to state 106

    SEMICOLON  [reduce using rule 77 (stmt_list)]
    $default   reduce using rule 77 (stmt_list)


State 53

   79 stmt: no_label_stmt •

    $default  reduce using rule 79 (stmt)


State 54

   80 no_label_stmt: assign_stmt •

    $default  reduce using rule 80 (no_label_stmt)


State 55

   82 no_label_stmt: goto_stmt •

    $default  reduce using rule 82 (no_label_stmt)


State 56

   83 no_label_stmt: if_stmt •

    $default  reduce using rule 83 (no_label_stmt)


State 57

   84 no_label_stmt: repeat_stmt •

    $default  reduce using rule 84 (no_label_stmt)


State 58

   85 no_label_stmt: while_stmt •

    $default  reduce using rule 85 (no_label_stmt)


State 59

   86 no_label_stmt: case_stmt •

    $default  reduce using rule 86 (no_label_stmt)


State 60

   87 no_label_stmt: for_stmt •

    $default  reduce using rule 87 (no_label_stmt)


State 61

   88 no_label_stmt: proc_stmt •

    $default  reduce using rule 88 (no_label_stmt)


State 62

   47 type_decl_list: type_decl_list type_def •

    $default  reduce using rule 47 (type_decl_list)


State 63

   49 type_def: identifier EQUAL • type_decl SEMICOLON
   50         | identifier EQUAL • type_decl

    IDENT_NAME     shift, and go to state 10
    INTEGER        shift, and go to state 30
    CHAR           shift, and go to state 31
    STRING         shift, and go to state 32
    TRUE           shift, and go to state 33
    FALSE          shift, and go to state 34
    MAXINT         shift, and go to state 35
    MINUS          shift, and go to state 36
    LP             shift, and go to state 107
    INT_TYPE       shift, and go to state 108
    UNSIGNED_TYPE  shift, and go to state 109
    BOOL_TYPE      shift, and go to state 110
    CHAR_TYPE      shift, and go to state 111
    STRING_TYPE    shift, and go to state 112
    ARRAY          shift, and go to state 113
    RECORD         shift, and go to state 114

    const_value       go to state 115
    type_decl         go to state 116
    record_type_decl  go to state 117
    array_type_decl   go to state 118
    simple_type       go to state 119
    identifier        go to state 120


State 64

   26 var_part: VAR var_decl_list •
   27 var_decl_list: var_decl_list • var_decl

    IDENT_NAME  shift, and go to state 10

    $default  reduce using rule 26 (var_part)

    var_decl    go to state 121
    name_list   go to state 66
    identifier  go to state 67


State 65

   28 var_decl_list: var_decl •

    $default  reduce using rule 28 (var_decl_list)


State 66

   29 var_decl: name_list • COLON type_decl SEMICOLON
   30         | name_list • COLON type_decl
   69 name_list: name_list • COMMA identifier

    COMMA  shift, and go to state 122
    COLON  shift, and go to state 123


State 67

   70 name_list: identifier •

    $default  reduce using rule 70 (name_list)


State 68

   16 fun_head: FUNCTION • IDENT_NAME params COLON simple_type

    IDENT_NAME  shift, and go to state 124


State 69

   18 proc_head: PROCEDURE • IDENT_NAME params

    IDENT_NAME  shift, and go to state 125


State 70

    6 routine_head: const_part type_part var_part routine_part •
    8 routine_part: routine_part • fun_decl
    9             | routine_part • proc_decl

    FUNCTION   shift, and go to state 68
    PROCEDURE  shift, and go to state 69

    $default  reduce using rule 6 (routine_head)

    fun_decl   go to state 126
    fun_head   go to state 72
    proc_decl  go to state 127
    proc_head  go to state 74


State 71

   10 routine_part: fun_decl •

    $default  reduce using rule 10 (routine_part)


State 72

   12 fun_decl: fun_head • SEMICOLON routine SEMICOLON
   13         | fun_head • SEMICOLON routine
   14         | fun_head • routine SEMICOLON
   15         | fun_head • routine

    CONST      shift, and go to state 5
    SEMICOLON  shift, and go to state 128

    $default  reduce using rule 31 (const_part)

    routine       go to state 129
    routine_head  go to state 8
    const_part    go to state 9


State 73

   11 routine_part: proc_decl •

    $default  reduce using rule 11 (routine_part)


State 74

   17 proc_decl: proc_head • SEMICOLON routine SEMICOLON

    SEMICOLON  shift, and go to state 130


State 75

   38 const_value: MINUS INTEGER •

    $default  reduce using rule 38 (const_value)


State 76

   44 const_value: MINUS MAXINT •

    $default  reduce using rule 44 (const_value)


State 77

   35 const_expr: identifier EQUAL const_value SEMICOLON •

    $default  reduce using rule 35 (const_expr)


State 78

   78 stmt: INTEGER COLON • no_label_stmt

    BBEGIN      shift, and go to state 16
    IDENT_NAME  shift, and go to state 10
    READ        shift, and go to state 40
    READLN      shift, and go to state 41
    WRITE       shift, and go to state 42
    WRITELN     shift, and go to state 43
    IF          shift, and go to state 44
    REPEAT      shift, and go to state 45
    WHILE       shift, and go to state 46
    CASE        shift, and go to state 47
    FOR         shift, and go to state 48
    GOTO        shift, and go to state 49

    BBEGIN      [reduce using rule 98 (repeat_stmt)]
    IDENT_NAME  [reduce using rule 98 (repeat_stmt)]
    READ        [reduce using rule 98 (repeat_stmt)]
    READLN      [reduce using rule 98 (repeat_stmt)]
    WRITE       [reduce using rule 98 (repeat_stmt)]
    WRITELN     [reduce using rule 98 (repeat_stmt)]
    IF          [reduce using rule 98 (repeat_stmt)]
    REPEAT      [reduce using rule 98 (repeat_stmt)]
    WHILE       [reduce using rule 98 (repeat_stmt)]
    CASE        [reduce using rule 98 (repeat_stmt)]
    FOR         [reduce using rule 98 (repeat_stmt)]
    GOTO        [reduce using rule 98 (repeat_stmt)]
    $default    reduce using rule 98 (repeat_stmt)

    identifier     go to state 50
    compound_stmt  go to state 51
    no_label_stmt  go to state 131
    assign_stmt    go to state 54
    goto_stmt      go to state 55
    if_stmt        go to state 56
    repeat_stmt    go to state 57
    while_stmt     go to state 58
    case_stmt      go to state 59
    for_stmt       go to state 60
    proc_stmt      go to state 61


State 79

  109 proc_stmt: READ LP • factor RP

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 82
    CHR         shift, and go to state 83
    ODD         shift, and go to state 84
    ORD         shift, and go to state 85
    PRED        shift, and go to state 86
    SUCC        shift, and go to state 87
    MINUS       shift, and go to state 88
    NOT         shift, and go to state 89
    LP          shift, and go to state 90

    const_value  go to state 91
    identifier   go to state 92
    factor       go to state 132


State 80

  111 proc_stmt: WRITE LP • args_list RP

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 82
    CHR         shift, and go to state 83
    ODD         shift, and go to state 84
    ORD         shift, and go to state 85
    PRED        shift, and go to state 86
    SUCC        shift, and go to state 87
    MINUS       shift, and go to state 88
    NOT         shift, and go to state 89
    LP          shift, and go to state 90

    const_value  go to state 91
    identifier   go to state 92
    args_list    go to state 133
    expression   go to state 134
    expr         go to state 94
    term         go to state 95
    factor       go to state 96


State 81

  113 proc_stmt: WRITELN LP • args_list RP

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 82
    CHR         shift, and go to state 83
    ODD         shift, and go to state 84
    ORD         shift, and go to state 85
    PRED        shift, and go to state 86
    SUCC        shift, and go to state 87
    MINUS       shift, and go to state 88
    NOT         shift, and go to state 89
    LP          shift, and go to state 90

    const_value  go to state 91
    identifier   go to state 92
    args_list    go to state 135
    expression   go to state 134
    expr         go to state 94
    term         go to state 95
    factor       go to state 96


State 82

  140 factor: ABS • LP args_list RP

    LP  shift, and go to state 136


State 83

  141 factor: CHR • LP args_list RP

    LP  shift, and go to state 137


State 84

  142 factor: ODD • LP args_list RP

    LP  shift, and go to state 138


State 85

  143 factor: ORD • LP args_list RP

    LP  shift, and go to state 139


State 86

  144 factor: PRED • LP args_list RP

    LP  shift, and go to state 140


State 87

  145 factor: SUCC • LP args_list RP

    LP  shift, and go to state 141


State 88

   38 const_value: MINUS • INTEGER
   44            | MINUS • MAXINT
  137 factor: MINUS • factor

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 142
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 143
    ABS         shift, and go to state 82
    CHR         shift, and go to state 83
    ODD         shift, and go to state 84
    ORD         shift, and go to state 85
    PRED        shift, and go to state 86
    SUCC        shift, and go to state 87
    MINUS       shift, and go to state 88
    NOT         shift, and go to state 89
    LP          shift, and go to state 90

    const_value  go to state 91
    identifier   go to state 92
    factor       go to state 144


State 89

  136 factor: NOT • factor

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 82
    CHR         shift, and go to state 83
    ODD         shift, and go to state 84
    ORD         shift, and go to state 85
    PRED        shift, and go to state 86
    SUCC        shift, and go to state 87
    MINUS       shift, and go to state 88
    NOT         shift, and go to state 89
    LP          shift, and go to state 90

    const_value  go to state 91
    identifier   go to state 92
    factor       go to state 145


State 90

  135 factor: LP • expression RP

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 82
    CHR         shift, and go to state 83
    ODD         shift, and go to state 84
    ORD         shift, and go to state 85
    PRED        shift, and go to state 86
    SUCC        shift, and go to state 87
    MINUS       shift, and go to state 88
    NOT         shift, and go to state 89
    LP          shift, and go to state 90

    const_value  go to state 91
    identifier   go to state 92
    expression   go to state 146
    expr         go to state 94
    term         go to state 95
    factor       go to state 96


State 91

  134 factor: const_value •

    $default  reduce using rule 134 (factor)


State 92

  132 factor: identifier •
  133       | identifier • LP args_list RP
  138       | identifier • LB expression RB
  139       | identifier • DOT identifier

    LB   shift, and go to state 147
    LP   shift, and go to state 148
    DOT  shift, and go to state 149

    DOT       [reduce using rule 132 (factor)]
    $default  reduce using rule 132 (factor)


State 93

   93 if_stmt: IF expression • THEN stmt else_clause
   94        | IF expression • stmt else_clause
  116 expression: expression • GE expr
  117           | expression • GT expr
  118           | expression • LE expr
  119           | expression • LT expr
  120           | expression • EQUAL expr
  121           | expression • UNEQUAL expr

    BBEGIN      shift, and go to state 16
    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 39
    READ        shift, and go to state 40
    READLN      shift, and go to state 41
    WRITE       shift, and go to state 42
    WRITELN     shift, and go to state 43
    IF          shift, and go to state 44
    THEN        shift, and go to state 150
    REPEAT      shift, and go to state 45
    WHILE       shift, and go to state 46
    CASE        shift, and go to state 47
    FOR         shift, and go to state 48
    EQUAL       shift, and go to state 151
    UNEQUAL     shift, and go to state 152
    GE          shift, and go to state 153
    GT          shift, and go to state 154
    LE          shift, and go to state 155
    LT          shift, and go to state 156
    GOTO        shift, and go to state 49

    BBEGIN      [reduce using rule 98 (repeat_stmt)]
    IDENT_NAME  [reduce using rule 98 (repeat_stmt)]
    INTEGER     [reduce using rule 98 (repeat_stmt)]
    READ        [reduce using rule 98 (repeat_stmt)]
    READLN      [reduce using rule 98 (repeat_stmt)]
    WRITE       [reduce using rule 98 (repeat_stmt)]
    WRITELN     [reduce using rule 98 (repeat_stmt)]
    IF          [reduce using rule 98 (repeat_stmt)]
    REPEAT      [reduce using rule 98 (repeat_stmt)]
    WHILE       [reduce using rule 98 (repeat_stmt)]
    CASE        [reduce using rule 98 (repeat_stmt)]
    FOR         [reduce using rule 98 (repeat_stmt)]
    GOTO        [reduce using rule 98 (repeat_stmt)]
    $default    reduce using rule 98 (repeat_stmt)

    identifier     go to state 50
    compound_stmt  go to state 51
    stmt           go to state 157
    no_label_stmt  go to state 53
    assign_stmt    go to state 54
    goto_stmt      go to state 55
    if_stmt        go to state 56
    repeat_stmt    go to state 57
    while_stmt     go to state 58
    case_stmt      go to state 59
    for_stmt       go to state 60
    proc_stmt      go to state 61


State 94

  122 expression: expr •
  123 expr: expr • PLUS term
  124     | expr • MINUS term
  125     | expr • OR term

    PLUS   shift, and go to state 158
    MINUS  shift, and go to state 159
    OR     shift, and go to state 160

    $default  reduce using rule 122 (expression)


State 95

  126 expr: term •
  127 term: term • MUL factor
  128     | term • DIV factor
  129     | term • MOD factor
  130     | term • AND factor

    MUL  shift, and go to state 161
    DIV  shift, and go to state 162
    AND  shift, and go to state 163
    MOD  shift, and go to state 164

    $default  reduce using rule 126 (expr)


State 96

  131 term: factor •

    $default  reduce using rule 131 (term)


State 97

   76 stmt_list: stmt_list • stmt SEMICOLON
   77          | stmt_list • stmt
   97 repeat_stmt: REPEAT stmt_list • UNTIL expression

    BBEGIN      shift, and go to state 16
    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 39
    READ        shift, and go to state 40
    READLN      shift, and go to state 41
    WRITE       shift, and go to state 42
    WRITELN     shift, and go to state 43
    IF          shift, and go to state 44
    REPEAT      shift, and go to state 45
    UNTIL       shift, and go to state 165
    WHILE       shift, and go to state 46
    CASE        shift, and go to state 47
    FOR         shift, and go to state 48
    GOTO        shift, and go to state 49

    BBEGIN      [reduce using rule 98 (repeat_stmt)]
    IDENT_NAME  [reduce using rule 98 (repeat_stmt)]
    INTEGER     [reduce using rule 98 (repeat_stmt)]
    READ        [reduce using rule 98 (repeat_stmt)]
    READLN      [reduce using rule 98 (repeat_stmt)]
    WRITE       [reduce using rule 98 (repeat_stmt)]
    WRITELN     [reduce using rule 98 (repeat_stmt)]
    IF          [reduce using rule 98 (repeat_stmt)]
    REPEAT      [reduce using rule 98 (repeat_stmt)]
    UNTIL       [reduce using rule 98 (repeat_stmt)]
    WHILE       [reduce using rule 98 (repeat_stmt)]
    CASE        [reduce using rule 98 (repeat_stmt)]
    FOR         [reduce using rule 98 (repeat_stmt)]
    GOTO        [reduce using rule 98 (repeat_stmt)]
    $default    reduce using rule 98 (repeat_stmt)

    identifier     go to state 50
    compound_stmt  go to state 51
    stmt           go to state 52
    no_label_stmt  go to state 53
    assign_stmt    go to state 54
    goto_stmt      go to state 55
    if_stmt        go to state 56
    repeat_stmt    go to state 57
    while_stmt     go to state 58
    case_stmt      go to state 59
    for_stmt       go to state 60
    proc_stmt      go to state 61


State 98

   99 while_stmt: WHILE expression • DO stmt
  116 expression: expression • GE expr
  117           | expression • GT expr
  118           | expression • LE expr
  119           | expression • LT expr
  120           | expression • EQUAL expr
  121           | expression • UNEQUAL expr

    DO       shift, and go to state 166
    EQUAL    shift, and go to state 151
    UNEQUAL  shift, and go to state 152
    GE       shift, and go to state 153
    GT       shift, and go to state 154
    LE       shift, and go to state 155
    LT       shift, and go to state 156


State 99

  100 case_stmt: CASE expression • OF case_expr_list END
  116 expression: expression • GE expr
  117           | expression • GT expr
  118           | expression • LE expr
  119           | expression • LT expr
  120           | expression • EQUAL expr
  121           | expression • UNEQUAL expr

    EQUAL    shift, and go to state 151
    UNEQUAL  shift, and go to state 152
    GE       shift, and go to state 153
    GT       shift, and go to state 154
    LE       shift, and go to state 155
    LT       shift, and go to state 156
    OF       shift, and go to state 167


State 100

  105 for_stmt: FOR identifier • ASSIGN expression TO expression DO stmt
  106         | FOR identifier • ASSIGN expression DOWNTO expression DO stmt

    ASSIGN  shift, and go to state 168


State 101

   92 goto_stmt: GOTO INTEGER •

    $default  reduce using rule 92 (goto_stmt)


State 102

   89 assign_stmt: identifier ASSIGN • expression

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 82
    CHR         shift, and go to state 83
    ODD         shift, and go to state 84
    ORD         shift, and go to state 85
    PRED        shift, and go to state 86
    SUCC        shift, and go to state 87
    MINUS       shift, and go to state 88
    NOT         shift, and go to state 89
    LP          shift, and go to state 90

    const_value  go to state 91
    identifier   go to state 92
    expression   go to state 169
    expr         go to state 94
    term         go to state 95
    factor       go to state 96


State 103

   90 assign_stmt: identifier LB • expression RB ASSIGN expression

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 82
    CHR         shift, and go to state 83
    ODD         shift, and go to state 84
    ORD         shift, and go to state 85
    PRED        shift, and go to state 86
    SUCC        shift, and go to state 87
    MINUS       shift, and go to state 88
    NOT         shift, and go to state 89
    LP          shift, and go to state 90

    const_value  go to state 91
    identifier   go to state 92
    expression   go to state 170
    expr         go to state 94
    term         go to state 95
    factor       go to state 96


State 104

  108 proc_stmt: identifier LP • args_list RP

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 82
    CHR         shift, and go to state 83
    ODD         shift, and go to state 84
    ORD         shift, and go to state 85
    PRED        shift, and go to state 86
    SUCC        shift, and go to state 87
    MINUS       shift, and go to state 88
    NOT         shift, and go to state 89
    LP          shift, and go to state 90

    const_value  go to state 91
    identifier   go to state 92
    args_list    go to state 171
    expression   go to state 134
    expr         go to state 94
    term         go to state 95
    factor       go to state 96


State 105

   91 assign_stmt: identifier DOT • identifier ASSIGN expression

    IDENT_NAME  shift, and go to state 10

    identifier  go to state 172


State 106

   76 stmt_list: stmt_list stmt SEMICOLON •

    $default  reduce using rule 76 (stmt_list)


State 107

   61 simple_type: LP • name_list RP

    IDENT_NAME  shift, and go to state 10

    name_list   go to state 173
    identifier  go to state 67


State 108

   64 simple_type: INT_TYPE •

    $default  reduce using rule 64 (simple_type)


State 109

   65 simple_type: UNSIGNED_TYPE •

    $default  reduce using rule 65 (simple_type)


State 110

   66 simple_type: BOOL_TYPE •

    $default  reduce using rule 66 (simple_type)


State 111

   67 simple_type: CHAR_TYPE •

    $default  reduce using rule 67 (simple_type)


State 112

   68 simple_type: STRING_TYPE •

    $default  reduce using rule 68 (simple_type)


State 113

   59 array_type_decl: ARRAY • LB simple_type RB OF type_decl

    LB  shift, and go to state 174


State 114

   54 record_type_decl: RECORD • field_decl_list END

    IDENT_NAME  shift, and go to state 10

    field_decl_list  go to state 175
    field_decl       go to state 176
    name_list        go to state 177
    identifier       go to state 67


State 115

   62 simple_type: const_value • DOUBLEDOT const_value

    DOUBLEDOT  shift, and go to state 178


State 116

   49 type_def: identifier EQUAL type_decl • SEMICOLON
   50         | identifier EQUAL type_decl •

    SEMICOLON  shift, and go to state 179

    $default  reduce using rule 50 (type_def)


State 117

   53 type_decl: record_type_decl •

    $default  reduce using rule 53 (type_decl)


State 118

   52 type_decl: array_type_decl •

    $default  reduce using rule 52 (type_decl)


State 119

   51 type_decl: simple_type •

    $default  reduce using rule 51 (type_decl)


State 120

   60 simple_type: identifier •
   63            | identifier • DOUBLEDOT identifier

    DOUBLEDOT  shift, and go to state 180

    $default  reduce using rule 60 (simple_type)


State 121

   27 var_decl_list: var_decl_list var_decl •

    $default  reduce using rule 27 (var_decl_list)


State 122

   69 name_list: name_list COMMA • identifier

    IDENT_NAME  shift, and go to state 10

    identifier  go to state 181


State 123

   29 var_decl: name_list COLON • type_decl SEMICOLON
   30         | name_list COLON • type_decl

    IDENT_NAME     shift, and go to state 10
    INTEGER        shift, and go to state 30
    CHAR           shift, and go to state 31
    STRING         shift, and go to state 32
    TRUE           shift, and go to state 33
    FALSE          shift, and go to state 34
    MAXINT         shift, and go to state 35
    MINUS          shift, and go to state 36
    LP             shift, and go to state 107
    INT_TYPE       shift, and go to state 108
    UNSIGNED_TYPE  shift, and go to state 109
    BOOL_TYPE      shift, and go to state 110
    CHAR_TYPE      shift, and go to state 111
    STRING_TYPE    shift, and go to state 112
    ARRAY          shift, and go to state 113
    RECORD         shift, and go to state 114

    const_value       go to state 115
    type_decl         go to state 182
    record_type_decl  go to state 117
    array_type_decl   go to state 118
    simple_type       go to state 119
    identifier        go to state 120


State 124

   16 fun_head: FUNCTION IDENT_NAME • params COLON simple_type

    LP  shift, and go to state 183

    $default  reduce using rule 19 (params)

    params  go to state 184


State 125

   18 proc_head: PROCEDURE IDENT_NAME • params

    LP  shift, and go to state 183

    $default  reduce using rule 19 (params)

    params  go to state 185


State 126

    8 routine_part: routine_part fun_decl •

    $default  reduce using rule 8 (routine_part)


State 127

    9 routine_part: routine_part proc_decl •

    $default  reduce using rule 9 (routine_part)


State 128

   12 fun_decl: fun_head SEMICOLON • routine SEMICOLON
   13         | fun_head SEMICOLON • routine

    CONST  shift, and go to state 5

    $default  reduce using rule 31 (const_part)

    routine       go to state 186
    routine_head  go to state 8
    const_part    go to state 9


State 129

   14 fun_decl: fun_head routine • SEMICOLON
   15         | fun_head routine •

    SEMICOLON  shift, and go to state 187

    $default  reduce using rule 15 (fun_decl)


State 130

   17 proc_decl: proc_head SEMICOLON • routine SEMICOLON

    CONST  shift, and go to state 5

    $default  reduce using rule 31 (const_part)

    routine       go to state 188
    routine_head  go to state 8
    const_part    go to state 9


State 131

   78 stmt: INTEGER COLON no_label_stmt •

    $default  reduce using rule 78 (stmt)


State 132

  109 proc_stmt: READ LP factor • RP

    RP  shift, and go to state 189


State 133

  111 proc_stmt: WRITE LP args_list • RP
  114 args_list: args_list • COMMA expression

    RP     shift, and go to state 190
    COMMA  shift, and go to state 191


State 134

  115 args_list: expression •
  116 expression: expression • GE expr
  117           | expression • GT expr
  118           | expression • LE expr
  119           | expression • LT expr
  120           | expression • EQUAL expr
  121           | expression • UNEQUAL expr

    EQUAL    shift, and go to state 151
    UNEQUAL  shift, and go to state 152
    GE       shift, and go to state 153
    GT       shift, and go to state 154
    LE       shift, and go to state 155
    LT       shift, and go to state 156

    $default  reduce using rule 115 (args_list)


State 135

  113 proc_stmt: WRITELN LP args_list • RP
  114 args_list: args_list • COMMA expression

    RP     shift, and go to state 192
    COMMA  shift, and go to state 191


State 136

  140 factor: ABS LP • args_list RP

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 82
    CHR         shift, and go to state 83
    ODD         shift, and go to state 84
    ORD         shift, and go to state 85
    PRED        shift, and go to state 86
    SUCC        shift, and go to state 87
    MINUS       shift, and go to state 88
    NOT         shift, and go to state 89
    LP          shift, and go to state 90

    const_value  go to state 91
    identifier   go to state 92
    args_list    go to state 193
    expression   go to state 134
    expr         go to state 94
    term         go to state 95
    factor       go to state 96


State 137

  141 factor: CHR LP • args_list RP

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 82
    CHR         shift, and go to state 83
    ODD         shift, and go to state 84
    ORD         shift, and go to state 85
    PRED        shift, and go to state 86
    SUCC        shift, and go to state 87
    MINUS       shift, and go to state 88
    NOT         shift, and go to state 89
    LP          shift, and go to state 90

    const_value  go to state 91
    identifier   go to state 92
    args_list    go to state 194
    expression   go to state 134
    expr         go to state 94
    term         go to state 95
    factor       go to state 96


State 138

  142 factor: ODD LP • args_list RP

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 82
    CHR         shift, and go to state 83
    ODD         shift, and go to state 84
    ORD         shift, and go to state 85
    PRED        shift, and go to state 86
    SUCC        shift, and go to state 87
    MINUS       shift, and go to state 88
    NOT         shift, and go to state 89
    LP          shift, and go to state 90

    const_value  go to state 91
    identifier   go to state 92
    args_list    go to state 195
    expression   go to state 134
    expr         go to state 94
    term         go to state 95
    factor       go to state 96


State 139

  143 factor: ORD LP • args_list RP

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 82
    CHR         shift, and go to state 83
    ODD         shift, and go to state 84
    ORD         shift, and go to state 85
    PRED        shift, and go to state 86
    SUCC        shift, and go to state 87
    MINUS       shift, and go to state 88
    NOT         shift, and go to state 89
    LP          shift, and go to state 90

    const_value  go to state 91
    identifier   go to state 92
    args_list    go to state 196
    expression   go to state 134
    expr         go to state 94
    term         go to state 95
    factor       go to state 96


State 140

  144 factor: PRED LP • args_list RP

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 82
    CHR         shift, and go to state 83
    ODD         shift, and go to state 84
    ORD         shift, and go to state 85
    PRED        shift, and go to state 86
    SUCC        shift, and go to state 87
    MINUS       shift, and go to state 88
    NOT         shift, and go to state 89
    LP          shift, and go to state 90

    const_value  go to state 91
    identifier   go to state 92
    args_list    go to state 197
    expression   go to state 134
    expr         go to state 94
    term         go to state 95
    factor       go to state 96


State 141

  145 factor: SUCC LP • args_list RP

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 82
    CHR         shift, and go to state 83
    ODD         shift, and go to state 84
    ORD         shift, and go to state 85
    PRED        shift, and go to state 86
    SUCC        shift, and go to state 87
    MINUS       shift, and go to state 88
    NOT         shift, and go to state 89
    LP          shift, and go to state 90

    const_value  go to state 91
    identifier   go to state 92
    args_list    go to state 198
    expression   go to state 134
    expr         go to state 94
    term         go to state 95
    factor       go to state 96


State 142

   37 const_value: INTEGER •
   38            | MINUS INTEGER •

    $end        reduce using rule 37 (const_value)
    $end        [reduce using rule 38 (const_value)]
    FUNCTION    reduce using rule 37 (const_value)
    FUNCTION    [reduce using rule 38 (const_value)]
    PROCEDURE   reduce using rule 37 (const_value)
    PROCEDURE   [reduce using rule 38 (const_value)]
    BBEGIN      reduce using rule 37 (const_value)
    BBEGIN      [reduce using rule 38 (const_value)]
    END         reduce using rule 37 (const_value)
    END         [reduce using rule 38 (const_value)]
    IDENT_NAME  reduce using rule 37 (const_value)
    IDENT_NAME  [reduce using rule 38 (const_value)]
    INTEGER     reduce using rule 37 (const_value)
    INTEGER     [reduce using rule 38 (const_value)]
    READ        reduce using rule 37 (const_value)
    READ        [reduce using rule 38 (const_value)]
    READLN      reduce using rule 37 (const_value)
    READLN      [reduce using rule 38 (const_value)]
    WRITE       reduce using rule 37 (const_value)
    WRITE       [reduce using rule 38 (const_value)]
    WRITELN     reduce using rule 37 (const_value)
    WRITELN     [reduce using rule 38 (const_value)]
    IF          reduce using rule 37 (const_value)
    IF          [reduce using rule 38 (const_value)]
    THEN        reduce using rule 37 (const_value)
    THEN        [reduce using rule 38 (const_value)]
    ELSE        reduce using rule 37 (const_value)
    ELSE        [reduce using rule 38 (const_value)]
    REPEAT      reduce using rule 37 (const_value)
    REPEAT      [reduce using rule 38 (const_value)]
    UNTIL       reduce using rule 37 (const_value)
    UNTIL       [reduce using rule 38 (const_value)]
    WHILE       reduce using rule 37 (const_value)
    WHILE       [reduce using rule 38 (const_value)]
    DO          reduce using rule 37 (const_value)
    DO          [reduce using rule 38 (const_value)]
    CASE        reduce using rule 37 (const_value)
    CASE        [reduce using rule 38 (const_value)]
    TO          reduce using rule 37 (const_value)
    TO          [reduce using rule 38 (const_value)]
    DOWNTO      reduce using rule 37 (const_value)
    DOWNTO      [reduce using rule 38 (const_value)]
    FOR         reduce using rule 37 (const_value)
    FOR         [reduce using rule 38 (const_value)]
    EQUAL       reduce using rule 37 (const_value)
    EQUAL       [reduce using rule 38 (const_value)]
    UNEQUAL     reduce using rule 37 (const_value)
    UNEQUAL     [reduce using rule 38 (const_value)]
    GE          reduce using rule 37 (const_value)
    GE          [reduce using rule 38 (const_value)]
    GT          reduce using rule 37 (const_value)
    GT          [reduce using rule 38 (const_value)]
    LE          reduce using rule 37 (const_value)
    LE          [reduce using rule 38 (const_value)]
    LT          reduce using rule 37 (const_value)
    LT          [reduce using rule 38 (const_value)]
    PLUS        reduce using rule 37 (const_value)
    PLUS        [reduce using rule 38 (const_value)]
    MINUS       reduce using rule 37 (const_value)
    MINUS       [reduce using rule 38 (const_value)]
    MUL         reduce using rule 37 (const_value)
    MUL         [reduce using rule 38 (const_value)]
    DIV         reduce using rule 37 (const_value)
    DIV         [reduce using rule 38 (const_value)]
    OR          reduce using rule 37 (const_value)
    OR          [reduce using rule 38 (const_value)]
    AND         reduce using rule 37 (const_value)
    AND         [reduce using rule 38 (const_value)]
    MOD         reduce using rule 37 (const_value)
    MOD         [reduce using rule 38 (const_value)]
    RB          reduce using rule 37 (const_value)
    RB          [reduce using rule 38 (const_value)]
    RP          reduce using rule 37 (const_value)
    RP          [reduce using rule 38 (const_value)]
    SEMICOLON   reduce using rule 37 (const_value)
    SEMICOLON   [reduce using rule 38 (const_value)]
    DOT         reduce using rule 37 (const_value)
    DOT         [reduce using rule 38 (const_value)]
    COMMA       reduce using rule 37 (const_value)
    COMMA       [reduce using rule 38 (const_value)]
    OF          reduce using rule 37 (const_value)
    OF          [reduce using rule 38 (const_value)]
    GOTO        reduce using rule 37 (const_value)
    GOTO        [reduce using rule 38 (const_value)]
    $default    reduce using rule 37 (const_value)


State 143

   43 const_value: MAXINT •
   44            | MINUS MAXINT •

    $end        reduce using rule 43 (const_value)
    $end        [reduce using rule 44 (const_value)]
    FUNCTION    reduce using rule 43 (const_value)
    FUNCTION    [reduce using rule 44 (const_value)]
    PROCEDURE   reduce using rule 43 (const_value)
    PROCEDURE   [reduce using rule 44 (const_value)]
    BBEGIN      reduce using rule 43 (const_value)
    BBEGIN      [reduce using rule 44 (const_value)]
    END         reduce using rule 43 (const_value)
    END         [reduce using rule 44 (const_value)]
    IDENT_NAME  reduce using rule 43 (const_value)
    IDENT_NAME  [reduce using rule 44 (const_value)]
    INTEGER     reduce using rule 43 (const_value)
    INTEGER     [reduce using rule 44 (const_value)]
    READ        reduce using rule 43 (const_value)
    READ        [reduce using rule 44 (const_value)]
    READLN      reduce using rule 43 (const_value)
    READLN      [reduce using rule 44 (const_value)]
    WRITE       reduce using rule 43 (const_value)
    WRITE       [reduce using rule 44 (const_value)]
    WRITELN     reduce using rule 43 (const_value)
    WRITELN     [reduce using rule 44 (const_value)]
    IF          reduce using rule 43 (const_value)
    IF          [reduce using rule 44 (const_value)]
    THEN        reduce using rule 43 (const_value)
    THEN        [reduce using rule 44 (const_value)]
    ELSE        reduce using rule 43 (const_value)
    ELSE        [reduce using rule 44 (const_value)]
    REPEAT      reduce using rule 43 (const_value)
    REPEAT      [reduce using rule 44 (const_value)]
    UNTIL       reduce using rule 43 (const_value)
    UNTIL       [reduce using rule 44 (const_value)]
    WHILE       reduce using rule 43 (const_value)
    WHILE       [reduce using rule 44 (const_value)]
    DO          reduce using rule 43 (const_value)
    DO          [reduce using rule 44 (const_value)]
    CASE        reduce using rule 43 (const_value)
    CASE        [reduce using rule 44 (const_value)]
    TO          reduce using rule 43 (const_value)
    TO          [reduce using rule 44 (const_value)]
    DOWNTO      reduce using rule 43 (const_value)
    DOWNTO      [reduce using rule 44 (const_value)]
    FOR         reduce using rule 43 (const_value)
    FOR         [reduce using rule 44 (const_value)]
    EQUAL       reduce using rule 43 (const_value)
    EQUAL       [reduce using rule 44 (const_value)]
    UNEQUAL     reduce using rule 43 (const_value)
    UNEQUAL     [reduce using rule 44 (const_value)]
    GE          reduce using rule 43 (const_value)
    GE          [reduce using rule 44 (const_value)]
    GT          reduce using rule 43 (const_value)
    GT          [reduce using rule 44 (const_value)]
    LE          reduce using rule 43 (const_value)
    LE          [reduce using rule 44 (const_value)]
    LT          reduce using rule 43 (const_value)
    LT          [reduce using rule 44 (const_value)]
    PLUS        reduce using rule 43 (const_value)
    PLUS        [reduce using rule 44 (const_value)]
    MINUS       reduce using rule 43 (const_value)
    MINUS       [reduce using rule 44 (const_value)]
    MUL         reduce using rule 43 (const_value)
    MUL         [reduce using rule 44 (const_value)]
    DIV         reduce using rule 43 (const_value)
    DIV         [reduce using rule 44 (const_value)]
    OR          reduce using rule 43 (const_value)
    OR          [reduce using rule 44 (const_value)]
    AND         reduce using rule 43 (const_value)
    AND         [reduce using rule 44 (const_value)]
    MOD         reduce using rule 43 (const_value)
    MOD         [reduce using rule 44 (const_value)]
    RB          reduce using rule 43 (const_value)
    RB          [reduce using rule 44 (const_value)]
    RP          reduce using rule 43 (const_value)
    RP          [reduce using rule 44 (const_value)]
    SEMICOLON   reduce using rule 43 (const_value)
    SEMICOLON   [reduce using rule 44 (const_value)]
    DOT         reduce using rule 43 (const_value)
    DOT         [reduce using rule 44 (const_value)]
    COMMA       reduce using rule 43 (const_value)
    COMMA       [reduce using rule 44 (const_value)]
    OF          reduce using rule 43 (const_value)
    OF          [reduce using rule 44 (const_value)]
    GOTO        reduce using rule 43 (const_value)
    GOTO        [reduce using rule 44 (const_value)]
    $default    reduce using rule 43 (const_value)


State 144

  137 factor: MINUS factor •

    $default  reduce using rule 137 (factor)


State 145

  136 factor: NOT factor •

    $default  reduce using rule 136 (factor)


State 146

  116 expression: expression • GE expr
  117           | expression • GT expr
  118           | expression • LE expr
  119           | expression • LT expr
  120           | expression • EQUAL expr
  121           | expression • UNEQUAL expr
  135 factor: LP expression • RP

    EQUAL    shift, and go to state 151
    UNEQUAL  shift, and go to state 152
    GE       shift, and go to state 153
    GT       shift, and go to state 154
    LE       shift, and go to state 155
    LT       shift, and go to state 156
    RP       shift, and go to state 199


State 147

  138 factor: identifier LB • expression RB

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 82
    CHR         shift, and go to state 83
    ODD         shift, and go to state 84
    ORD         shift, and go to state 85
    PRED        shift, and go to state 86
    SUCC        shift, and go to state 87
    MINUS       shift, and go to state 88
    NOT         shift, and go to state 89
    LP          shift, and go to state 90

    const_value  go to state 91
    identifier   go to state 92
    expression   go to state 200
    expr         go to state 94
    term         go to state 95
    factor       go to state 96


State 148

  133 factor: identifier LP • args_list RP

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 82
    CHR         shift, and go to state 83
    ODD         shift, and go to state 84
    ORD         shift, and go to state 85
    PRED        shift, and go to state 86
    SUCC        shift, and go to state 87
    MINUS       shift, and go to state 88
    NOT         shift, and go to state 89
    LP          shift, and go to state 90

    const_value  go to state 91
    identifier   go to state 92
    args_list    go to state 201
    expression   go to state 134
    expr         go to state 94
    term         go to state 95
    factor       go to state 96


State 149

  139 factor: identifier DOT • identifier

    IDENT_NAME  shift, and go to state 10

    identifier  go to state 202


State 150

   93 if_stmt: IF expression THEN • stmt else_clause

    BBEGIN      shift, and go to state 16
    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 39
    READ        shift, and go to state 40
    READLN      shift, and go to state 41
    WRITE       shift, and go to state 42
    WRITELN     shift, and go to state 43
    IF          shift, and go to state 44
    REPEAT      shift, and go to state 45
    WHILE       shift, and go to state 46
    CASE        shift, and go to state 47
    FOR         shift, and go to state 48
    GOTO        shift, and go to state 49

    BBEGIN      [reduce using rule 98 (repeat_stmt)]
    IDENT_NAME  [reduce using rule 98 (repeat_stmt)]
    INTEGER     [reduce using rule 98 (repeat_stmt)]
    READ        [reduce using rule 98 (repeat_stmt)]
    READLN      [reduce using rule 98 (repeat_stmt)]
    WRITE       [reduce using rule 98 (repeat_stmt)]
    WRITELN     [reduce using rule 98 (repeat_stmt)]
    IF          [reduce using rule 98 (repeat_stmt)]
    REPEAT      [reduce using rule 98 (repeat_stmt)]
    WHILE       [reduce using rule 98 (repeat_stmt)]
    CASE        [reduce using rule 98 (repeat_stmt)]
    FOR         [reduce using rule 98 (repeat_stmt)]
    GOTO        [reduce using rule 98 (repeat_stmt)]
    $default    reduce using rule 98 (repeat_stmt)

    identifier     go to state 50
    compound_stmt  go to state 51
    stmt           go to state 203
    no_label_stmt  go to state 53
    assign_stmt    go to state 54
    goto_stmt      go to state 55
    if_stmt        go to state 56
    repeat_stmt    go to state 57
    while_stmt     go to state 58
    case_stmt      go to state 59
    for_stmt       go to state 60
    proc_stmt      go to state 61


State 151

  120 expression: expression EQUAL • expr

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 82
    CHR         shift, and go to state 83
    ODD         shift, and go to state 84
    ORD         shift, and go to state 85
    PRED        shift, and go to state 86
    SUCC        shift, and go to state 87
    MINUS       shift, and go to state 88
    NOT         shift, and go to state 89
    LP          shift, and go to state 90

    const_value  go to state 91
    identifier   go to state 92
    expr         go to state 204
    term         go to state 95
    factor       go to state 96


State 152

  121 expression: expression UNEQUAL • expr

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 82
    CHR         shift, and go to state 83
    ODD         shift, and go to state 84
    ORD         shift, and go to state 85
    PRED        shift, and go to state 86
    SUCC        shift, and go to state 87
    MINUS       shift, and go to state 88
    NOT         shift, and go to state 89
    LP          shift, and go to state 90

    const_value  go to state 91
    identifier   go to state 92
    expr         go to state 205
    term         go to state 95
    factor       go to state 96


State 153

  116 expression: expression GE • expr

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 82
    CHR         shift, and go to state 83
    ODD         shift, and go to state 84
    ORD         shift, and go to state 85
    PRED        shift, and go to state 86
    SUCC        shift, and go to state 87
    MINUS       shift, and go to state 88
    NOT         shift, and go to state 89
    LP          shift, and go to state 90

    const_value  go to state 91
    identifier   go to state 92
    expr         go to state 206
    term         go to state 95
    factor       go to state 96


State 154

  117 expression: expression GT • expr

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 82
    CHR         shift, and go to state 83
    ODD         shift, and go to state 84
    ORD         shift, and go to state 85
    PRED        shift, and go to state 86
    SUCC        shift, and go to state 87
    MINUS       shift, and go to state 88
    NOT         shift, and go to state 89
    LP          shift, and go to state 90

    const_value  go to state 91
    identifier   go to state 92
    expr         go to state 207
    term         go to state 95
    factor       go to state 96


State 155

  118 expression: expression LE • expr

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 82
    CHR         shift, and go to state 83
    ODD         shift, and go to state 84
    ORD         shift, and go to state 85
    PRED        shift, and go to state 86
    SUCC        shift, and go to state 87
    MINUS       shift, and go to state 88
    NOT         shift, and go to state 89
    LP          shift, and go to state 90

    const_value  go to state 91
    identifier   go to state 92
    expr         go to state 208
    term         go to state 95
    factor       go to state 96


State 156

  119 expression: expression LT • expr

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 82
    CHR         shift, and go to state 83
    ODD         shift, and go to state 84
    ORD         shift, and go to state 85
    PRED        shift, and go to state 86
    SUCC        shift, and go to state 87
    MINUS       shift, and go to state 88
    NOT         shift, and go to state 89
    LP          shift, and go to state 90

    const_value  go to state 91
    identifier   go to state 92
    expr         go to state 209
    term         go to state 95
    factor       go to state 96


State 157

   94 if_stmt: IF expression stmt • else_clause

    ELSE  shift, and go to state 210

    ELSE      [reduce using rule 95 (else_clause)]
    $default  reduce using rule 95 (else_clause)

    else_clause  go to state 211


State 158

  123 expr: expr PLUS • term

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 82
    CHR         shift, and go to state 83
    ODD         shift, and go to state 84
    ORD         shift, and go to state 85
    PRED        shift, and go to state 86
    SUCC        shift, and go to state 87
    MINUS       shift, and go to state 88
    NOT         shift, and go to state 89
    LP          shift, and go to state 90

    const_value  go to state 91
    identifier   go to state 92
    term         go to state 212
    factor       go to state 96


State 159

  124 expr: expr MINUS • term

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 82
    CHR         shift, and go to state 83
    ODD         shift, and go to state 84
    ORD         shift, and go to state 85
    PRED        shift, and go to state 86
    SUCC        shift, and go to state 87
    MINUS       shift, and go to state 88
    NOT         shift, and go to state 89
    LP          shift, and go to state 90

    const_value  go to state 91
    identifier   go to state 92
    term         go to state 213
    factor       go to state 96


State 160

  125 expr: expr OR • term

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 82
    CHR         shift, and go to state 83
    ODD         shift, and go to state 84
    ORD         shift, and go to state 85
    PRED        shift, and go to state 86
    SUCC        shift, and go to state 87
    MINUS       shift, and go to state 88
    NOT         shift, and go to state 89
    LP          shift, and go to state 90

    const_value  go to state 91
    identifier   go to state 92
    term         go to state 214
    factor       go to state 96


State 161

  127 term: term MUL • factor

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 82
    CHR         shift, and go to state 83
    ODD         shift, and go to state 84
    ORD         shift, and go to state 85
    PRED        shift, and go to state 86
    SUCC        shift, and go to state 87
    MINUS       shift, and go to state 88
    NOT         shift, and go to state 89
    LP          shift, and go to state 90

    const_value  go to state 91
    identifier   go to state 92
    factor       go to state 215


State 162

  128 term: term DIV • factor

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 82
    CHR         shift, and go to state 83
    ODD         shift, and go to state 84
    ORD         shift, and go to state 85
    PRED        shift, and go to state 86
    SUCC        shift, and go to state 87
    MINUS       shift, and go to state 88
    NOT         shift, and go to state 89
    LP          shift, and go to state 90

    const_value  go to state 91
    identifier   go to state 92
    factor       go to state 216


State 163

  130 term: term AND • factor

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 82
    CHR         shift, and go to state 83
    ODD         shift, and go to state 84
    ORD         shift, and go to state 85
    PRED        shift, and go to state 86
    SUCC        shift, and go to state 87
    MINUS       shift, and go to state 88
    NOT         shift, and go to state 89
    LP          shift, and go to state 90

    const_value  go to state 91
    identifier   go to state 92
    factor       go to state 217


State 164

  129 term: term MOD • factor

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 82
    CHR         shift, and go to state 83
    ODD         shift, and go to state 84
    ORD         shift, and go to state 85
    PRED        shift, and go to state 86
    SUCC        shift, and go to state 87
    MINUS       shift, and go to state 88
    NOT         shift, and go to state 89
    LP          shift, and go to state 90

    const_value  go to state 91
    identifier   go to state 92
    factor       go to state 218


State 165

   97 repeat_stmt: REPEAT stmt_list UNTIL • expression

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 82
    CHR         shift, and go to state 83
    ODD         shift, and go to state 84
    ORD         shift, and go to state 85
    PRED        shift, and go to state 86
    SUCC        shift, and go to state 87
    MINUS       shift, and go to state 88
    NOT         shift, and go to state 89
    LP          shift, and go to state 90

    const_value  go to state 91
    identifier   go to state 92
    expression   go to state 219
    expr         go to state 94
    term         go to state 95
    factor       go to state 96


State 166

   99 while_stmt: WHILE expression DO • stmt

    BBEGIN      shift, and go to state 16
    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 39
    READ        shift, and go to state 40
    READLN      shift, and go to state 41
    WRITE       shift, and go to state 42
    WRITELN     shift, and go to state 43
    IF          shift, and go to state 44
    REPEAT      shift, and go to state 45
    WHILE       shift, and go to state 46
    CASE        shift, and go to state 47
    FOR         shift, and go to state 48
    GOTO        shift, and go to state 49

    BBEGIN      [reduce using rule 98 (repeat_stmt)]
    IDENT_NAME  [reduce using rule 98 (repeat_stmt)]
    INTEGER     [reduce using rule 98 (repeat_stmt)]
    READ        [reduce using rule 98 (repeat_stmt)]
    READLN      [reduce using rule 98 (repeat_stmt)]
    WRITE       [reduce using rule 98 (repeat_stmt)]
    WRITELN     [reduce using rule 98 (repeat_stmt)]
    IF          [reduce using rule 98 (repeat_stmt)]
    REPEAT      [reduce using rule 98 (repeat_stmt)]
    WHILE       [reduce using rule 98 (repeat_stmt)]
    CASE        [reduce using rule 98 (repeat_stmt)]
    FOR         [reduce using rule 98 (repeat_stmt)]
    GOTO        [reduce using rule 98 (repeat_stmt)]
    $default    reduce using rule 98 (repeat_stmt)

    identifier     go to state 50
    compound_stmt  go to state 51
    stmt           go to state 220
    no_label_stmt  go to state 53
    assign_stmt    go to state 54
    goto_stmt      go to state 55
    if_stmt        go to state 56
    repeat_stmt    go to state 57
    while_stmt     go to state 58
    case_stmt      go to state 59
    for_stmt       go to state 60
    proc_stmt      go to state 61


State 167

  100 case_stmt: CASE expression OF • case_expr_list END

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    MINUS       shift, and go to state 36

    const_value     go to state 221
    identifier      go to state 222
    case_expr_list  go to state 223
    case_expr       go to state 224


State 168

  105 for_stmt: FOR identifier ASSIGN • expression TO expression DO stmt
  106         | FOR identifier ASSIGN • expression DOWNTO expression DO stmt

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 82
    CHR         shift, and go to state 83
    ODD         shift, and go to state 84
    ORD         shift, and go to state 85
    PRED        shift, and go to state 86
    SUCC        shift, and go to state 87
    MINUS       shift, and go to state 88
    NOT         shift, and go to state 89
    LP          shift, and go to state 90

    const_value  go to state 91
    identifier   go to state 92
    expression   go to state 225
    expr         go to state 94
    term         go to state 95
    factor       go to state 96


State 169

   89 assign_stmt: identifier ASSIGN expression •
  116 expression: expression • GE expr
  117           | expression • GT expr
  118           | expression • LE expr
  119           | expression • LT expr
  120           | expression • EQUAL expr
  121           | expression • UNEQUAL expr

    EQUAL    shift, and go to state 151
    UNEQUAL  shift, and go to state 152
    GE       shift, and go to state 153
    GT       shift, and go to state 154
    LE       shift, and go to state 155
    LT       shift, and go to state 156

    $default  reduce using rule 89 (assign_stmt)


State 170

   90 assign_stmt: identifier LB expression • RB ASSIGN expression
  116 expression: expression • GE expr
  117           | expression • GT expr
  118           | expression • LE expr
  119           | expression • LT expr
  120           | expression • EQUAL expr
  121           | expression • UNEQUAL expr

    EQUAL    shift, and go to state 151
    UNEQUAL  shift, and go to state 152
    GE       shift, and go to state 153
    GT       shift, and go to state 154
    LE       shift, and go to state 155
    LT       shift, and go to state 156
    RB       shift, and go to state 226


State 171

  108 proc_stmt: identifier LP args_list • RP
  114 args_list: args_list • COMMA expression

    RP     shift, and go to state 227
    COMMA  shift, and go to state 191


State 172

   91 assign_stmt: identifier DOT identifier • ASSIGN expression

    ASSIGN  shift, and go to state 228


State 173

   61 simple_type: LP name_list • RP
   69 name_list: name_list • COMMA identifier

    RP     shift, and go to state 229
    COMMA  shift, and go to state 122


State 174

   59 array_type_decl: ARRAY LB • simple_type RB OF type_decl

    IDENT_NAME     shift, and go to state 10
    INTEGER        shift, and go to state 30
    CHAR           shift, and go to state 31
    STRING         shift, and go to state 32
    TRUE           shift, and go to state 33
    FALSE          shift, and go to state 34
    MAXINT         shift, and go to state 35
    MINUS          shift, and go to state 36
    LP             shift, and go to state 107
    INT_TYPE       shift, and go to state 108
    UNSIGNED_TYPE  shift, and go to state 109
    BOOL_TYPE      shift, and go to state 110
    CHAR_TYPE      shift, and go to state 111
    STRING_TYPE    shift, and go to state 112

    const_value  go to state 115
    simple_type  go to state 230
    identifier   go to state 120


State 175

   54 record_type_decl: RECORD field_decl_list • END
   55 field_decl_list: field_decl_list • field_decl

    END         shift, and go to state 231
    IDENT_NAME  shift, and go to state 10

    field_decl  go to state 232
    name_list   go to state 177
    identifier  go to state 67


State 176

   56 field_decl_list: field_decl •

    $default  reduce using rule 56 (field_decl_list)


State 177

   57 field_decl: name_list • COLON type_decl SEMICOLON
   58           | name_list • COLON type_decl
   69 name_list: name_list • COMMA identifier

    COMMA  shift, and go to state 122
    COLON  shift, and go to state 233


State 178

   62 simple_type: const_value DOUBLEDOT • const_value

    INTEGER  shift, and go to state 30
    CHAR     shift, and go to state 31
    STRING   shift, and go to state 32
    TRUE     shift, and go to state 33
    FALSE    shift, and go to state 34
    MAXINT   shift, and go to state 35
    MINUS    shift, and go to state 36

    const_value  go to state 234


State 179

   49 type_def: identifier EQUAL type_decl SEMICOLON •

    $default  reduce using rule 49 (type_def)


State 180

   63 simple_type: identifier DOUBLEDOT • identifier

    IDENT_NAME  shift, and go to state 10

    identifier  go to state 235


State 181

   69 name_list: name_list COMMA identifier •

    $default  reduce using rule 69 (name_list)


State 182

   29 var_decl: name_list COLON type_decl • SEMICOLON
   30         | name_list COLON type_decl •

    SEMICOLON  shift, and go to state 236

    $default  reduce using rule 30 (var_decl)


State 183

   20 params: LP • params_decl RP

    VAR         shift, and go to state 237
    IDENT_NAME  shift, and go to state 10

    params_decl  go to state 238
    params_type  go to state 239
    name_list    go to state 240
    identifier   go to state 67


State 184

   16 fun_head: FUNCTION IDENT_NAME params • COLON simple_type

    COLON  shift, and go to state 241


State 185

   18 proc_head: PROCEDURE IDENT_NAME params •

    $default  reduce using rule 18 (proc_head)


State 186

   12 fun_decl: fun_head SEMICOLON routine • SEMICOLON
   13         | fun_head SEMICOLON routine •

    SEMICOLON  shift, and go to state 242

    $default  reduce using rule 13 (fun_decl)


State 187

   14 fun_decl: fun_head routine SEMICOLON •

    $default  reduce using rule 14 (fun_decl)


State 188

   17 proc_decl: proc_head SEMICOLON routine • SEMICOLON

    SEMICOLON  shift, and go to state 243


State 189

  109 proc_stmt: READ LP factor RP •

    $default  reduce using rule 109 (proc_stmt)


State 190

  111 proc_stmt: WRITE LP args_list RP •

    $default  reduce using rule 111 (proc_stmt)


State 191

  114 args_list: args_list COMMA • expression

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 82
    CHR         shift, and go to state 83
    ODD         shift, and go to state 84
    ORD         shift, and go to state 85
    PRED        shift, and go to state 86
    SUCC        shift, and go to state 87
    MINUS       shift, and go to state 88
    NOT         shift, and go to state 89
    LP          shift, and go to state 90

    const_value  go to state 91
    identifier   go to state 92
    expression   go to state 244
    expr         go to state 94
    term         go to state 95
    factor       go to state 96


State 192

  113 proc_stmt: WRITELN LP args_list RP •

    $default  reduce using rule 113 (proc_stmt)


State 193

  114 args_list: args_list • COMMA expression
  140 factor: ABS LP args_list • RP

    RP     shift, and go to state 245
    COMMA  shift, and go to state 191


State 194

  114 args_list: args_list • COMMA expression
  141 factor: CHR LP args_list • RP

    RP     shift, and go to state 246
    COMMA  shift, and go to state 191


State 195

  114 args_list: args_list • COMMA expression
  142 factor: ODD LP args_list • RP

    RP     shift, and go to state 247
    COMMA  shift, and go to state 191


State 196

  114 args_list: args_list • COMMA expression
  143 factor: ORD LP args_list • RP

    RP     shift, and go to state 248
    COMMA  shift, and go to state 191


State 197

  114 args_list: args_list • COMMA expression
  144 factor: PRED LP args_list • RP

    RP     shift, and go to state 249
    COMMA  shift, and go to state 191


State 198

  114 args_list: args_list • COMMA expression
  145 factor: SUCC LP args_list • RP

    RP     shift, and go to state 250
    COMMA  shift, and go to state 191


State 199

  135 factor: LP expression RP •

    $default  reduce using rule 135 (factor)


State 200

  116 expression: expression • GE expr
  117           | expression • GT expr
  118           | expression • LE expr
  119           | expression • LT expr
  120           | expression • EQUAL expr
  121           | expression • UNEQUAL expr
  138 factor: identifier LB expression • RB

    EQUAL    shift, and go to state 151
    UNEQUAL  shift, and go to state 152
    GE       shift, and go to state 153
    GT       shift, and go to state 154
    LE       shift, and go to state 155
    LT       shift, and go to state 156
    RB       shift, and go to state 251


State 201

  114 args_list: args_list • COMMA expression
  133 factor: identifier LP args_list • RP

    RP     shift, and go to state 252
    COMMA  shift, and go to state 191


State 202

  139 factor: identifier DOT identifier •

    $default  reduce using rule 139 (factor)


State 203

   93 if_stmt: IF expression THEN stmt • else_clause

    ELSE  shift, and go to state 210

    ELSE      [reduce using rule 95 (else_clause)]
    $default  reduce using rule 95 (else_clause)

    else_clause  go to state 253


State 204

  120 expression: expression EQUAL expr •
  123 expr: expr • PLUS term
  124     | expr • MINUS term
  125     | expr • OR term

    PLUS   shift, and go to state 158
    MINUS  shift, and go to state 159
    OR     shift, and go to state 160

    $default  reduce using rule 120 (expression)


State 205

  121 expression: expression UNEQUAL expr •
  123 expr: expr • PLUS term
  124     | expr • MINUS term
  125     | expr • OR term

    PLUS   shift, and go to state 158
    MINUS  shift, and go to state 159
    OR     shift, and go to state 160

    $default  reduce using rule 121 (expression)


State 206

  116 expression: expression GE expr •
  123 expr: expr • PLUS term
  124     | expr • MINUS term
  125     | expr • OR term

    PLUS   shift, and go to state 158
    MINUS  shift, and go to state 159
    OR     shift, and go to state 160

    $default  reduce using rule 116 (expression)


State 207

  117 expression: expression GT expr •
  123 expr: expr • PLUS term
  124     | expr • MINUS term
  125     | expr • OR term

    PLUS   shift, and go to state 158
    MINUS  shift, and go to state 159
    OR     shift, and go to state 160

    $default  reduce using rule 117 (expression)


State 208

  118 expression: expression LE expr •
  123 expr: expr • PLUS term
  124     | expr • MINUS term
  125     | expr • OR term

    PLUS   shift, and go to state 158
    MINUS  shift, and go to state 159
    OR     shift, and go to state 160

    $default  reduce using rule 118 (expression)


State 209

  119 expression: expression LT expr •
  123 expr: expr • PLUS term
  124     | expr • MINUS term
  125     | expr • OR term

    PLUS   shift, and go to state 158
    MINUS  shift, and go to state 159
    OR     shift, and go to state 160

    $default  reduce using rule 119 (expression)


State 210

   96 else_clause: ELSE • stmt

    BBEGIN      shift, and go to state 16
    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 39
    READ        shift, and go to state 40
    READLN      shift, and go to state 41
    WRITE       shift, and go to state 42
    WRITELN     shift, and go to state 43
    IF          shift, and go to state 44
    REPEAT      shift, and go to state 45
    WHILE       shift, and go to state 46
    CASE        shift, and go to state 47
    FOR         shift, and go to state 48
    GOTO        shift, and go to state 49

    BBEGIN      [reduce using rule 98 (repeat_stmt)]
    IDENT_NAME  [reduce using rule 98 (repeat_stmt)]
    INTEGER     [reduce using rule 98 (repeat_stmt)]
    READ        [reduce using rule 98 (repeat_stmt)]
    READLN      [reduce using rule 98 (repeat_stmt)]
    WRITE       [reduce using rule 98 (repeat_stmt)]
    WRITELN     [reduce using rule 98 (repeat_stmt)]
    IF          [reduce using rule 98 (repeat_stmt)]
    REPEAT      [reduce using rule 98 (repeat_stmt)]
    WHILE       [reduce using rule 98 (repeat_stmt)]
    CASE        [reduce using rule 98 (repeat_stmt)]
    FOR         [reduce using rule 98 (repeat_stmt)]
    GOTO        [reduce using rule 98 (repeat_stmt)]
    $default    reduce using rule 98 (repeat_stmt)

    identifier     go to state 50
    compound_stmt  go to state 51
    stmt           go to state 254
    no_label_stmt  go to state 53
    assign_stmt    go to state 54
    goto_stmt      go to state 55
    if_stmt        go to state 56
    repeat_stmt    go to state 57
    while_stmt     go to state 58
    case_stmt      go to state 59
    for_stmt       go to state 60
    proc_stmt      go to state 61


State 211

   94 if_stmt: IF expression stmt else_clause •

    $default  reduce using rule 94 (if_stmt)


State 212

  123 expr: expr PLUS term •
  127 term: term • MUL factor
  128     | term • DIV factor
  129     | term • MOD factor
  130     | term • AND factor

    MUL  shift, and go to state 161
    DIV  shift, and go to state 162
    AND  shift, and go to state 163
    MOD  shift, and go to state 164

    $default  reduce using rule 123 (expr)


State 213

  124 expr: expr MINUS term •
  127 term: term • MUL factor
  128     | term • DIV factor
  129     | term • MOD factor
  130     | term • AND factor

    MUL  shift, and go to state 161
    DIV  shift, and go to state 162
    AND  shift, and go to state 163
    MOD  shift, and go to state 164

    $default  reduce using rule 124 (expr)


State 214

  125 expr: expr OR term •
  127 term: term • MUL factor
  128     | term • DIV factor
  129     | term • MOD factor
  130     | term • AND factor

    MUL  shift, and go to state 161
    DIV  shift, and go to state 162
    AND  shift, and go to state 163
    MOD  shift, and go to state 164

    $default  reduce using rule 125 (expr)


State 215

  127 term: term MUL factor •

    $default  reduce using rule 127 (term)


State 216

  128 term: term DIV factor •

    $default  reduce using rule 128 (term)


State 217

  130 term: term AND factor •

    $default  reduce using rule 130 (term)


State 218

  129 term: term MOD factor •

    $default  reduce using rule 129 (term)


State 219

   97 repeat_stmt: REPEAT stmt_list UNTIL expression •
  116 expression: expression • GE expr
  117           | expression • GT expr
  118           | expression • LE expr
  119           | expression • LT expr
  120           | expression • EQUAL expr
  121           | expression • UNEQUAL expr

    EQUAL    shift, and go to state 151
    UNEQUAL  shift, and go to state 152
    GE       shift, and go to state 153
    GT       shift, and go to state 154
    LE       shift, and go to state 155
    LT       shift, and go to state 156

    $default  reduce using rule 97 (repeat_stmt)


State 220

   99 while_stmt: WHILE expression DO stmt •

    $default  reduce using rule 99 (while_stmt)


State 221

  103 case_expr: const_value • COLON stmt SEMICOLON

    COLON  shift, and go to state 255


State 222

  104 case_expr: identifier • COLON stmt SEMICOLON

    COLON  shift, and go to state 256


State 223

  100 case_stmt: CASE expression OF case_expr_list • END
  101 case_expr_list: case_expr_list • case_expr

    END         shift, and go to state 257
    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    MINUS       shift, and go to state 36

    const_value  go to state 221
    identifier   go to state 222
    case_expr    go to state 258


State 224

  102 case_expr_list: case_expr •

    $default  reduce using rule 102 (case_expr_list)


State 225

  105 for_stmt: FOR identifier ASSIGN expression • TO expression DO stmt
  106         | FOR identifier ASSIGN expression • DOWNTO expression DO stmt
  116 expression: expression • GE expr
  117           | expression • GT expr
  118           | expression • LE expr
  119           | expression • LT expr
  120           | expression • EQUAL expr
  121           | expression • UNEQUAL expr

    TO       shift, and go to state 259
    DOWNTO   shift, and go to state 260
    EQUAL    shift, and go to state 151
    UNEQUAL  shift, and go to state 152
    GE       shift, and go to state 153
    GT       shift, and go to state 154
    LE       shift, and go to state 155
    LT       shift, and go to state 156


State 226

   90 assign_stmt: identifier LB expression RB • ASSIGN expression

    ASSIGN  shift, and go to state 261


State 227

  108 proc_stmt: identifier LP args_list RP •

    $default  reduce using rule 108 (proc_stmt)


State 228

   91 assign_stmt: identifier DOT identifier ASSIGN • expression

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 82
    CHR         shift, and go to state 83
    ODD         shift, and go to state 84
    ORD         shift, and go to state 85
    PRED        shift, and go to state 86
    SUCC        shift, and go to state 87
    MINUS       shift, and go to state 88
    NOT         shift, and go to state 89
    LP          shift, and go to state 90

    const_value  go to state 91
    identifier   go to state 92
    expression   go to state 262
    expr         go to state 94
    term         go to state 95
    factor       go to state 96


State 229

   61 simple_type: LP name_list RP •

    $default  reduce using rule 61 (simple_type)


State 230

   59 array_type_decl: ARRAY LB simple_type • RB OF type_decl

    RB  shift, and go to state 263


State 231

   54 record_type_decl: RECORD field_decl_list END •

    $default  reduce using rule 54 (record_type_decl)


State 232

   55 field_decl_list: field_decl_list field_decl •

    $default  reduce using rule 55 (field_decl_list)


State 233

   57 field_decl: name_list COLON • type_decl SEMICOLON
   58           | name_list COLON • type_decl

    IDENT_NAME     shift, and go to state 10
    INTEGER        shift, and go to state 30
    CHAR           shift, and go to state 31
    STRING         shift, and go to state 32
    TRUE           shift, and go to state 33
    FALSE          shift, and go to state 34
    MAXINT         shift, and go to state 35
    MINUS          shift, and go to state 36
    LP             shift, and go to state 107
    INT_TYPE       shift, and go to state 108
    UNSIGNED_TYPE  shift, and go to state 109
    BOOL_TYPE      shift, and go to state 110
    CHAR_TYPE      shift, and go to state 111
    STRING_TYPE    shift, and go to state 112
    ARRAY          shift, and go to state 113
    RECORD         shift, and go to state 114

    const_value       go to state 115
    type_decl         go to state 264
    record_type_decl  go to state 117
    array_type_decl   go to state 118
    simple_type       go to state 119
    identifier        go to state 120


State 234

   62 simple_type: const_value DOUBLEDOT const_value •

    $default  reduce using rule 62 (simple_type)


State 235

   63 simple_type: identifier DOUBLEDOT identifier •

    $default  reduce using rule 63 (simple_type)


State 236

   29 var_decl: name_list COLON type_decl SEMICOLON •

    $default  reduce using rule 29 (var_decl)


State 237

   23 params_type: VAR • name_list COLON simple_type

    IDENT_NAME  shift, and go to state 10

    name_list   go to state 265
    identifier  go to state 67


State 238

   20 params: LP params_decl • RP
   21 params_decl: params_decl • SEMICOLON params_type

    RP         shift, and go to state 266
    SEMICOLON  shift, and go to state 267


State 239

   22 params_decl: params_type •

    $default  reduce using rule 22 (params_decl)


State 240

   24 params_type: name_list • COLON simple_type
   69 name_list: name_list • COMMA identifier

    COMMA  shift, and go to state 122
    COLON  shift, and go to state 268


State 241

   16 fun_head: FUNCTION IDENT_NAME params COLON • simple_type

    IDENT_NAME     shift, and go to state 10
    INTEGER        shift, and go to state 30
    CHAR           shift, and go to state 31
    STRING         shift, and go to state 32
    TRUE           shift, and go to state 33
    FALSE          shift, and go to state 34
    MAXINT         shift, and go to state 35
    MINUS          shift, and go to state 36
    LP             shift, and go to state 107
    INT_TYPE       shift, and go to state 108
    UNSIGNED_TYPE  shift, and go to state 109
    BOOL_TYPE      shift, and go to state 110
    CHAR_TYPE      shift, and go to state 111
    STRING_TYPE    shift, and go to state 112

    const_value  go to state 115
    simple_type  go to state 269
    identifier   go to state 120


State 242

   12 fun_decl: fun_head SEMICOLON routine SEMICOLON •

    $default  reduce using rule 12 (fun_decl)


State 243

   17 proc_decl: proc_head SEMICOLON routine SEMICOLON •

    $default  reduce using rule 17 (proc_decl)


State 244

  114 args_list: args_list COMMA expression •
  116 expression: expression • GE expr
  117           | expression • GT expr
  118           | expression • LE expr
  119           | expression • LT expr
  120           | expression • EQUAL expr
  121           | expression • UNEQUAL expr

    EQUAL    shift, and go to state 151
    UNEQUAL  shift, and go to state 152
    GE       shift, and go to state 153
    GT       shift, and go to state 154
    LE       shift, and go to state 155
    LT       shift, and go to state 156

    $default  reduce using rule 114 (args_list)


State 245

  140 factor: ABS LP args_list RP •

    $default  reduce using rule 140 (factor)


State 246

  141 factor: CHR LP args_list RP •

    $default  reduce using rule 141 (factor)


State 247

  142 factor: ODD LP args_list RP •

    $default  reduce using rule 142 (factor)


State 248

  143 factor: ORD LP args_list RP •

    $default  reduce using rule 143 (factor)


State 249

  144 factor: PRED LP args_list RP •

    $default  reduce using rule 144 (factor)


State 250

  145 factor: SUCC LP args_list RP •

    $default  reduce using rule 145 (factor)


State 251

  138 factor: identifier LB expression RB •

    $default  reduce using rule 138 (factor)


State 252

  133 factor: identifier LP args_list RP •

    $default  reduce using rule 133 (factor)


State 253

   93 if_stmt: IF expression THEN stmt else_clause •

    $default  reduce using rule 93 (if_stmt)


State 254

   96 else_clause: ELSE stmt •

    $default  reduce using rule 96 (else_clause)


State 255

  103 case_expr: const_value COLON • stmt SEMICOLON

    BBEGIN      shift, and go to state 16
    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 39
    READ        shift, and go to state 40
    READLN      shift, and go to state 41
    WRITE       shift, and go to state 42
    WRITELN     shift, and go to state 43
    IF          shift, and go to state 44
    REPEAT      shift, and go to state 45
    WHILE       shift, and go to state 46
    CASE        shift, and go to state 47
    FOR         shift, and go to state 48
    GOTO        shift, and go to state 49

    $default  reduce using rule 98 (repeat_stmt)

    identifier     go to state 50
    compound_stmt  go to state 51
    stmt           go to state 270
    no_label_stmt  go to state 53
    assign_stmt    go to state 54
    goto_stmt      go to state 55
    if_stmt        go to state 56
    repeat_stmt    go to state 57
    while_stmt     go to state 58
    case_stmt      go to state 59
    for_stmt       go to state 60
    proc_stmt      go to state 61


State 256

  104 case_expr: identifier COLON • stmt SEMICOLON

    BBEGIN      shift, and go to state 16
    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 39
    READ        shift, and go to state 40
    READLN      shift, and go to state 41
    WRITE       shift, and go to state 42
    WRITELN     shift, and go to state 43
    IF          shift, and go to state 44
    REPEAT      shift, and go to state 45
    WHILE       shift, and go to state 46
    CASE        shift, and go to state 47
    FOR         shift, and go to state 48
    GOTO        shift, and go to state 49

    $default  reduce using rule 98 (repeat_stmt)

    identifier     go to state 50
    compound_stmt  go to state 51
    stmt           go to state 271
    no_label_stmt  go to state 53
    assign_stmt    go to state 54
    goto_stmt      go to state 55
    if_stmt        go to state 56
    repeat_stmt    go to state 57
    while_stmt     go to state 58
    case_stmt      go to state 59
    for_stmt       go to state 60
    proc_stmt      go to state 61


State 257

  100 case_stmt: CASE expression OF case_expr_list END •

    $default  reduce using rule 100 (case_stmt)


State 258

  101 case_expr_list: case_expr_list case_expr •

    $default  reduce using rule 101 (case_expr_list)


State 259

  105 for_stmt: FOR identifier ASSIGN expression TO • expression DO stmt

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 82
    CHR         shift, and go to state 83
    ODD         shift, and go to state 84
    ORD         shift, and go to state 85
    PRED        shift, and go to state 86
    SUCC        shift, and go to state 87
    MINUS       shift, and go to state 88
    NOT         shift, and go to state 89
    LP          shift, and go to state 90

    const_value  go to state 91
    identifier   go to state 92
    expression   go to state 272
    expr         go to state 94
    term         go to state 95
    factor       go to state 96


State 260

  106 for_stmt: FOR identifier ASSIGN expression DOWNTO • expression DO stmt

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 82
    CHR         shift, and go to state 83
    ODD         shift, and go to state 84
    ORD         shift, and go to state 85
    PRED        shift, and go to state 86
    SUCC        shift, and go to state 87
    MINUS       shift, and go to state 88
    NOT         shift, and go to state 89
    LP          shift, and go to state 90

    const_value  go to state 91
    identifier   go to state 92
    expression   go to state 273
    expr         go to state 94
    term         go to state 95
    factor       go to state 96


State 261

   90 assign_stmt: identifier LB expression RB ASSIGN • expression

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 82
    CHR         shift, and go to state 83
    ODD         shift, and go to state 84
    ORD         shift, and go to state 85
    PRED        shift, and go to state 86
    SUCC        shift, and go to state 87
    MINUS       shift, and go to state 88
    NOT         shift, and go to state 89
    LP          shift, and go to state 90

    const_value  go to state 91
    identifier   go to state 92
    expression   go to state 274
    expr         go to state 94
    term         go to state 95
    factor       go to state 96


State 262

   91 assign_stmt: identifier DOT identifier ASSIGN expression •
  116 expression: expression • GE expr
  117           | expression • GT expr
  118           | expression • LE expr
  119           | expression • LT expr
  120           | expression • EQUAL expr
  121           | expression • UNEQUAL expr

    EQUAL    shift, and go to state 151
    UNEQUAL  shift, and go to state 152
    GE       shift, and go to state 153
    GT       shift, and go to state 154
    LE       shift, and go to state 155
    LT       shift, and go to state 156

    $default  reduce using rule 91 (assign_stmt)


State 263

   59 array_type_decl: ARRAY LB simple_type RB • OF type_decl

    OF  shift, and go to state 275


State 264

   57 field_decl: name_list COLON type_decl • SEMICOLON
   58           | name_list COLON type_decl •

    SEMICOLON  shift, and go to state 276

    $default  reduce using rule 58 (field_decl)


State 265

   23 params_type: VAR name_list • COLON simple_type
   69 name_list: name_list • COMMA identifier

    COMMA  shift, and go to state 122
    COLON  shift, and go to state 277


State 266

   20 params: LP params_decl RP •

    $default  reduce using rule 20 (params)


State 267

   21 params_decl: params_decl SEMICOLON • params_type

    VAR         shift, and go to state 237
    IDENT_NAME  shift, and go to state 10

    params_type  go to state 278
    name_list    go to state 240
    identifier   go to state 67


State 268

   24 params_type: name_list COLON • simple_type

    IDENT_NAME     shift, and go to state 10
    INTEGER        shift, and go to state 30
    CHAR           shift, and go to state 31
    STRING         shift, and go to state 32
    TRUE           shift, and go to state 33
    FALSE          shift, and go to state 34
    MAXINT         shift, and go to state 35
    MINUS          shift, and go to state 36
    LP             shift, and go to state 107
    INT_TYPE       shift, and go to state 108
    UNSIGNED_TYPE  shift, and go to state 109
    BOOL_TYPE      shift, and go to state 110
    CHAR_TYPE      shift, and go to state 111
    STRING_TYPE    shift, and go to state 112

    const_value  go to state 115
    simple_type  go to state 279
    identifier   go to state 120


State 269

   16 fun_head: FUNCTION IDENT_NAME params COLON simple_type •

    $default  reduce using rule 16 (fun_head)


State 270

  103 case_expr: const_value COLON stmt • SEMICOLON

    SEMICOLON  shift, and go to state 280


State 271

  104 case_expr: identifier COLON stmt • SEMICOLON

    SEMICOLON  shift, and go to state 281


State 272

  105 for_stmt: FOR identifier ASSIGN expression TO expression • DO stmt
  116 expression: expression • GE expr
  117           | expression • GT expr
  118           | expression • LE expr
  119           | expression • LT expr
  120           | expression • EQUAL expr
  121           | expression • UNEQUAL expr

    DO       shift, and go to state 282
    EQUAL    shift, and go to state 151
    UNEQUAL  shift, and go to state 152
    GE       shift, and go to state 153
    GT       shift, and go to state 154
    LE       shift, and go to state 155
    LT       shift, and go to state 156


State 273

  106 for_stmt: FOR identifier ASSIGN expression DOWNTO expression • DO stmt
  116 expression: expression • GE expr
  117           | expression • GT expr
  118           | expression • LE expr
  119           | expression • LT expr
  120           | expression • EQUAL expr
  121           | expression • UNEQUAL expr

    DO       shift, and go to state 283
    EQUAL    shift, and go to state 151
    UNEQUAL  shift, and go to state 152
    GE       shift, and go to state 153
    GT       shift, and go to state 154
    LE       shift, and go to state 155
    LT       shift, and go to state 156


State 274

   90 assign_stmt: identifier LB expression RB ASSIGN expression •
  116 expression: expression • GE expr
  117           | expression • GT expr
  118           | expression • LE expr
  119           | expression • LT expr
  120           | expression • EQUAL expr
  121           | expression • UNEQUAL expr

    EQUAL    shift, and go to state 151
    UNEQUAL  shift, and go to state 152
    GE       shift, and go to state 153
    GT       shift, and go to state 154
    LE       shift, and go to state 155
    LT       shift, and go to state 156

    $default  reduce using rule 90 (assign_stmt)


State 275

   59 array_type_decl: ARRAY LB simple_type RB OF • type_decl

    IDENT_NAME     shift, and go to state 10
    INTEGER        shift, and go to state 30
    CHAR           shift, and go to state 31
    STRING         shift, and go to state 32
    TRUE           shift, and go to state 33
    FALSE          shift, and go to state 34
    MAXINT         shift, and go to state 35
    MINUS          shift, and go to state 36
    LP             shift, and go to state 107
    INT_TYPE       shift, and go to state 108
    UNSIGNED_TYPE  shift, and go to state 109
    BOOL_TYPE      shift, and go to state 110
    CHAR_TYPE      shift, and go to state 111
    STRING_TYPE    shift, and go to state 112
    ARRAY          shift, and go to state 113
    RECORD         shift, and go to state 114

    const_value       go to state 115
    type_decl         go to state 284
    record_type_decl  go to state 117
    array_type_decl   go to state 118
    simple_type       go to state 119
    identifier        go to state 120


State 276

   57 field_decl: name_list COLON type_decl SEMICOLON •

    $default  reduce using rule 57 (field_decl)


State 277

   23 params_type: VAR name_list COLON • simple_type

    IDENT_NAME     shift, and go to state 10
    INTEGER        shift, and go to state 30
    CHAR           shift, and go to state 31
    STRING         shift, and go to state 32
    TRUE           shift, and go to state 33
    FALSE          shift, and go to state 34
    MAXINT         shift, and go to state 35
    MINUS          shift, and go to state 36
    LP             shift, and go to state 107
    INT_TYPE       shift, and go to state 108
    UNSIGNED_TYPE  shift, and go to state 109
    BOOL_TYPE      shift, and go to state 110
    CHAR_TYPE      shift, and go to state 111
    STRING_TYPE    shift, and go to state 112

    const_value  go to state 115
    simple_type  go to state 285
    identifier   go to state 120


State 278

   21 params_decl: params_decl SEMICOLON params_type •

    $default  reduce using rule 21 (params_decl)


State 279

   24 params_type: name_list COLON simple_type •

    $default  reduce using rule 24 (params_type)


State 280

  103 case_expr: const_value COLON stmt SEMICOLON •

    $default  reduce using rule 103 (case_expr)


State 281

  104 case_expr: identifier COLON stmt SEMICOLON •

    $default  reduce using rule 104 (case_expr)


State 282

  105 for_stmt: FOR identifier ASSIGN expression TO expression DO • stmt

    BBEGIN      shift, and go to state 16
    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 39
    READ        shift, and go to state 40
    READLN      shift, and go to state 41
    WRITE       shift, and go to state 42
    WRITELN     shift, and go to state 43
    IF          shift, and go to state 44
    REPEAT      shift, and go to state 45
    WHILE       shift, and go to state 46
    CASE        shift, and go to state 47
    FOR         shift, and go to state 48
    GOTO        shift, and go to state 49

    BBEGIN      [reduce using rule 98 (repeat_stmt)]
    IDENT_NAME  [reduce using rule 98 (repeat_stmt)]
    INTEGER     [reduce using rule 98 (repeat_stmt)]
    READ        [reduce using rule 98 (repeat_stmt)]
    READLN      [reduce using rule 98 (repeat_stmt)]
    WRITE       [reduce using rule 98 (repeat_stmt)]
    WRITELN     [reduce using rule 98 (repeat_stmt)]
    IF          [reduce using rule 98 (repeat_stmt)]
    REPEAT      [reduce using rule 98 (repeat_stmt)]
    WHILE       [reduce using rule 98 (repeat_stmt)]
    CASE        [reduce using rule 98 (repeat_stmt)]
    FOR         [reduce using rule 98 (repeat_stmt)]
    GOTO        [reduce using rule 98 (repeat_stmt)]
    $default    reduce using rule 98 (repeat_stmt)

    identifier     go to state 50
    compound_stmt  go to state 51
    stmt           go to state 286
    no_label_stmt  go to state 53
    assign_stmt    go to state 54
    goto_stmt      go to state 55
    if_stmt        go to state 56
    repeat_stmt    go to state 57
    while_stmt     go to state 58
    case_stmt      go to state 59
    for_stmt       go to state 60
    proc_stmt      go to state 61


State 283

  106 for_stmt: FOR identifier ASSIGN expression DOWNTO expression DO • stmt

    BBEGIN      shift, and go to state 16
    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 39
    READ        shift, and go to state 40
    READLN      shift, and go to state 41
    WRITE       shift, and go to state 42
    WRITELN     shift, and go to state 43
    IF          shift, and go to state 44
    REPEAT      shift, and go to state 45
    WHILE       shift, and go to state 46
    CASE        shift, and go to state 47
    FOR         shift, and go to state 48
    GOTO        shift, and go to state 49

    BBEGIN      [reduce using rule 98 (repeat_stmt)]
    IDENT_NAME  [reduce using rule 98 (repeat_stmt)]
    INTEGER     [reduce using rule 98 (repeat_stmt)]
    READ        [reduce using rule 98 (repeat_stmt)]
    READLN      [reduce using rule 98 (repeat_stmt)]
    WRITE       [reduce using rule 98 (repeat_stmt)]
    WRITELN     [reduce using rule 98 (repeat_stmt)]
    IF          [reduce using rule 98 (repeat_stmt)]
    REPEAT      [reduce using rule 98 (repeat_stmt)]
    WHILE       [reduce using rule 98 (repeat_stmt)]
    CASE        [reduce using rule 98 (repeat_stmt)]
    FOR         [reduce using rule 98 (repeat_stmt)]
    GOTO        [reduce using rule 98 (repeat_stmt)]
    $default    reduce using rule 98 (repeat_stmt)

    identifier     go to state 50
    compound_stmt  go to state 51
    stmt           go to state 287
    no_label_stmt  go to state 53
    assign_stmt    go to state 54
    goto_stmt      go to state 55
    if_stmt        go to state 56
    repeat_stmt    go to state 57
    while_stmt     go to state 58
    case_stmt      go to state 59
    for_stmt       go to state 60
    proc_stmt      go to state 61


State 284

   59 array_type_decl: ARRAY LB simple_type RB OF type_decl •

    $default  reduce using rule 59 (array_type_decl)


State 285

   23 params_type: VAR name_list COLON simple_type •

    $default  reduce using rule 23 (params_type)


State 286

  105 for_stmt: FOR identifier ASSIGN expression TO expression DO stmt •

    $default  reduce using rule 105 (for_stmt)


State 287

  106 for_stmt: FOR identifier ASSIGN expression DOWNTO expression DO stmt •

    $default  reduce using rule 106 (for_stmt)
