Terminals unused in grammar

    BOOLEAN
    ERROR


State 24 conflicts: 20 shift/reduce, 27 reduce/reduce
State 29 conflicts: 2 shift/reduce
State 56 conflicts: 1 shift/reduce
State 58 conflicts: 1 shift/reduce
State 84 conflicts: 18 shift/reduce
State 102 conflicts: 1 shift/reduce
State 103 conflicts: 19 shift/reduce
State 107 conflicts: 20 shift/reduce
State 156 conflicts: 48 reduce/reduce
State 157 conflicts: 48 reduce/reduce
State 164 conflicts: 19 shift/reduce
State 171 conflicts: 1 shift/reduce
State 180 conflicts: 19 shift/reduce
State 222 conflicts: 1 shift/reduce
State 229 conflicts: 19 shift/reduce
State 304 conflicts: 19 shift/reduce
State 305 conflicts: 19 shift/reduce


Grammar

    0 $accept: program $end

    1 program: PROGRAM IDENT_NAME SEMICOLON routine DOT
    2        | PROGRAM IDENT_NAME SEMICOLON routine
    3        | PROGRAM IDENT_NAME routine DOT
    4        | PROGRAM IDENT_NAME routine

    5 routine: routine_head routine_body

    6 routine_head: const_part type_part var_part routine_part

    7 routine_part: ε
    8             | routine_part fun_decl
    9             | routine_part proc_decl
   10             | fun_decl
   11             | proc_decl

   12 fun_decl: fun_head SEMICOLON routine SEMICOLON
   13         | fun_head SEMICOLON routine
   14         | fun_head routine SEMICOLON
   15         | fun_head routine

   16 fun_head: FUNCTION IDENT_NAME params COLON simple_type

   17 proc_decl: proc_head SEMICOLON routine SEMICOLON
   18          | proc_head routine SEMICOLON
   19          | proc_head SEMICOLON routine
   20          | proc_head routine

   21 proc_head: PROCEDURE IDENT_NAME params

   22 params: ε
   23       | LP params_decl RP

   24 params_decl: params_decl SEMICOLON params_type
   25            | params_type

   26 params_type: VAR name_list COLON simple_type
   27            | name_list COLON simple_type

   28 var_part: ε
   29         | VAR var_decl_list

   30 var_decl_list: var_decl_list var_decl
   31              | var_decl

   32 var_decl: name_list COLON type_decl SEMICOLON
   33         | name_list COLON type_decl

   34 const_part: ε
   35           | CONST const_expr_list

   36 const_expr_list: const_expr_list const_expr
   37                | const_expr

   38 const_expr: identifier EQUAL const_value SEMICOLON
   39           | identifier EQUAL const_value

   40 const_value: INTEGER
   41            | MINUS INTEGER
   42            | CHAR
   43            | STRING
   44            | TRUE
   45            | FALSE
   46            | MAXINT
   47            | MINUS MAXINT

   48 type_part: ε
   49          | TYPE type_decl_list

   50 type_decl_list: type_decl_list type_def
   51               | type_def

   52 type_def: identifier EQUAL type_decl SEMICOLON
   53         | identifier EQUAL type_decl

   54 type_decl: simple_type
   55          | array_type_decl
   56          | record_type_decl

   57 record_type_decl: RECORD field_decl_list END

   58 field_decl_list: field_decl_list field_decl
   59                | field_decl

   60 field_decl: name_list COLON type_decl SEMICOLON
   61           | name_list COLON type_decl

   62 array_type_decl: ARRAY LB simple_type RB OF type_decl

   63 simple_type: identifier
   64            | LP name_list RP
   65            | const_value DOUBLEDOT const_value
   66            | identifier DOUBLEDOT identifier
   67            | INT_TYPE
   68            | UNSIGNED_TYPE
   69            | BOOL_TYPE
   70            | CHAR_TYPE

   71 name_list: name_list COMMA identifier
   72          | identifier

   73 identifier: IDENT_NAME

   74 routine_body: compound_stmt

   75 compound_stmt: BBEGIN stmt_list END
   76              | BBEGIN stmt_list

   77 stmt_list: ε
   78          | stmt_list stmt SEMICOLON
   79          | stmt_list stmt

   80 stmt: INTEGER COLON no_label_stmt
   81     | no_label_stmt

   82 no_label_stmt: assign_stmt
   83              | compound_stmt
   84              | goto_stmt
   85              | if_stmt
   86              | repeat_stmt
   87              | while_stmt
   88              | case_stmt
   89              | for_stmt
   90              | proc_stmt
   91              | BREAK
   92              | CONTINUE

   93 assign_stmt: identifier ASSIGN expression
   94            | identifier LB expression RB ASSIGN expression
   95            | identifier DOT identifier ASSIGN expression

   96 goto_stmt: GOTO INTEGER

   97 if_stmt: IF expression THEN stmt else_clause
   98        | IF expression stmt else_clause

   99 else_clause: ε
  100            | ELSE stmt

  101 repeat_stmt: REPEAT stmt_list UNTIL expression
  102            | ε

  103 while_stmt: WHILE expression DO stmt

  104 case_stmt: CASE expression OF case_expr_list END

  105 case_expr_list: case_expr_list case_expr
  106               | case_expr

  107 case_expr: const_value COLON stmt SEMICOLON
  108          | identifier COLON stmt SEMICOLON
  109          | OTHERWISE stmt SEMICOLON

  110 for_stmt: FOR identifier ASSIGN expression TO expression DO stmt
  111         | FOR identifier ASSIGN expression DOWNTO expression DO stmt

  112 proc_stmt: identifier
  113          | identifier LP args_list RP
  114          | READ LP factor RP
  115          | READLN
  116          | WRITE LP args_list RP
  117          | WRITELN
  118          | WRITELN LP args_list RP
  119          | MEMORYREAD LP args_list RP
  120          | MEMORYWRITE LP args_list RP
  121          | STACKREAD LP args_list RP
  122          | STACKWRITE LP args_list RP

  123 args_list: args_list COMMA expression
  124          | expression

  125 expression: expression GE expr
  126           | expression GT expr
  127           | expression LE expr
  128           | expression LT expr
  129           | expression EQUAL expr
  130           | expression UNEQUAL expr
  131           | expr

  132 expr: expr PLUS term
  133     | expr MINUS term
  134     | expr OR term
  135     | term

  136 term: term MUL factor
  137     | term DIV factor
  138     | term MOD factor
  139     | term AND factor
  140     | factor

  141 factor: identifier
  142       | identifier LP args_list RP
  143       | const_value
  144       | LP expression RP
  145       | NOT factor
  146       | MINUS factor
  147       | identifier LB expression RB
  148       | identifier DOT identifier
  149       | ABS LP args_list RP
  150       | CHR LP args_list RP
  151       | ODD LP args_list RP
  152       | ORD LP args_list RP
  153       | PRED LP args_list RP
  154       | SUCC LP args_list RP


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    PROGRAM <token> (258) 1 2 3 4
    FUNCTION <token> (259) 16
    PROCEDURE <token> (260) 21
    CONST <token> (261) 35
    TYPE <token> (262) 49
    VAR <token> (263) 26 29
    BBEGIN <token> (264) 75 76
    END <token> (265) 57 75 104
    IDENT_NAME <token> (266) 1 2 3 4 16 21 73
    INTEGER <token> (267) 40 41 80 96
    BOOLEAN <token> (268)
    CHAR <token> (269) 42
    STRING <token> (270) 43
    TRUE <token> (271) 44
    FALSE <token> (272) 45
    MAXINT <token> (273) 46 47
    READ <token> (274) 114
    READLN <token> (275) 115
    WRITE <token> (276) 116
    WRITELN <token> (277) 117 118
    MEMORYREAD <token> (278) 119
    MEMORYWRITE <token> (279) 120
    STACKREAD <token> (280) 121
    STACKWRITE <token> (281) 122
    ABS <token> (282) 149
    CHR <token> (283) 150
    ODD <token> (284) 151
    ORD <token> (285) 152
    PRED <token> (286) 153
    SUCC <token> (287) 154
    IF <token> (288) 97 98
    THEN <token> (289) 97
    ELSE <token> (290) 100
    REPEAT <token> (291) 101
    UNTIL <token> (292) 101
    WHILE <token> (293) 103
    DO <token> (294) 103 110 111
    CASE <token> (295) 104
    TO <token> (296) 110
    DOWNTO <token> (297) 111
    FOR <token> (298) 110 111
    EQUAL <token> (299) 38 39 52 53 129
    UNEQUAL <token> (300) 130
    GE <token> (301) 125
    GT <token> (302) 126
    LE <token> (303) 127
    LT <token> (304) 128
    ASSIGN <token> (305) 93 94 95 110 111
    PLUS <token> (306) 132
    MINUS <token> (307) 41 47 133 146
    MUL <token> (308) 136
    DIV <token> (309) 137
    OR <token> (310) 134
    AND <token> (311) 139
    NOT <token> (312) 145
    MOD <token> (313) 138
    LB <token> (314) 62 94 147
    RB <token> (315) 62 94 147
    LP <token> (316) 23 64 113 114 116 118 119 120 121 122 142 144 149 150 151 152 153 154
    RP <token> (317) 23 64 113 114 116 118 119 120 121 122 142 144 149 150 151 152 153 154
    SEMICOLON <token> (318) 1 2 12 13 14 17 18 19 24 32 38 52 60 78 107 108 109
    DOT <token> (319) 1 3 95 148
    DOUBLEDOT <token> (320) 65 66
    COMMA <token> (321) 71 123
    COLON <token> (322) 16 26 27 32 33 60 61 80 107 108
    INT_TYPE <token> (323) 67
    UNSIGNED_TYPE <token> (324) 68
    BOOL_TYPE <token> (325) 69
    CHAR_TYPE <token> (326) 70
    ARRAY <token> (327) 62
    OF <token> (328) 62 104
    RECORD <token> (329) 57
    GOTO <token> (330) 96
    BREAK <token> (331) 91
    CONTINUE <token> (332) 92
    OTHERWISE (333) 109
    ERROR <token> (334)


Nonterminals, with rules where they appear

    $accept (80)
        on left: 0
    program <programNode> (81)
        on left: 1 2 3 4
        on right: 0
    routine <routineNode> (82)
        on left: 5
        on right: 1 2 3 4 12 13 14 15 17 18 19 20
    routine_head <routineHeadNode> (83)
        on left: 6
        on right: 5
    routine_part <routinePartList> (84)
        on left: 7 8 9 10 11
        on right: 6 8 9
    fun_decl <routineDeclarationNode> (85)
        on left: 12 13 14 15
        on right: 8 10
    fun_head <routineDeclarationNode> (86)
        on left: 16
        on right: 12 13 14 15
    proc_decl <routineDeclarationNode> (87)
        on left: 17 18 19 20
        on right: 9 11
    proc_head <routineDeclarationNode> (88)
        on left: 21
        on right: 17 18 19 20
    params <paramsNode> (89)
        on left: 22 23
        on right: 16 21
    params_decl <paramsGroupList> (90)
        on left: 24 25
        on right: 23 24
    params_type <paramsGroupNode> (91)
        on left: 26 27
        on right: 24 25
    var_part <varPartList> (92)
        on left: 28 29
        on right: 6
    var_decl_list <varPartList> (93)
        on left: 30 31
        on right: 29 30
    var_decl <varPartListElement> (94)
        on left: 32 33
        on right: 30 31
    const_part <constPartList> (95)
        on left: 34 35
        on right: 6
    const_expr_list <constPartList> (96)
        on left: 36 37
        on right: 35 36
    const_expr <constPartListElement> (97)
        on left: 38 39
        on right: 36 37
    const_value <constantNode> (98)
        on left: 40 41 42 43 44 45 46 47
        on right: 38 39 65 107 143
    type_part <typePartList> (99)
        on left: 48 49
        on right: 6
    type_decl_list <typePartList> (100)
        on left: 50 51
        on right: 49 50
    type_def <typePartListElement> (101)
        on left: 52 53
        on right: 50 51
    type_decl <typeNode> (102)
        on left: 54 55 56
        on right: 32 33 52 53 60 61 62
    record_type_decl <recordTypeNode> (103)
        on left: 57
        on right: 56
    field_decl_list <fieldDeclList> (104)
        on left: 58 59
        on right: 57 58
    field_decl <fieldDeclListElement> (105)
        on left: 60 61
        on right: 58 59
    array_type_decl <arrayTypeNode> (106)
        on left: 62
        on right: 55
    simple_type <simpleTypeNode> (107)
        on left: 63 64 65 66 67 68 69 70
        on right: 16 26 27 54 62
    name_list <identifierList> (108)
        on left: 71 72
        on right: 26 27 32 33 60 61 64 71
    identifier <identifierNode> (109)
        on left: 73
        on right: 38 39 52 53 63 66 71 72 93 94 95 108 110 111 112 113 141 142 147 148
    routine_body <routineBodyNode> (110)
        on left: 74
        on right: 5
    compound_stmt <compoundStatementNode> (111)
        on left: 75 76
        on right: 74 83
    stmt_list <statementNodeList> (112)
        on left: 77 78 79
        on right: 75 76 78 79 101
    stmt <statementNode> (113)
        on left: 80 81
        on right: 78 79 97 98 100 103 107 108 109 110 111
    no_label_stmt <statementNode> (114)
        on left: 82 83 84 85 86 87 88 89 90 91 92
        on right: 80 81
    assign_stmt <assignNode> (115)
        on left: 93 94 95
        on right: 82
    goto_stmt <gotoNode> (116)
        on left: 96
        on right: 84
    if_stmt <ifNode> (117)
        on left: 97 98
        on right: 85
    else_clause <ifNode> (118)
        on left: 99 100
        on right: 97 98
    repeat_stmt <repeatNode> (119)
        on left: 101 102
        on right: 86
    while_stmt <whileNode> (120)
        on left: 103
        on right: 87
    case_stmt <caseNode> (121)
        on left: 104
        on right: 88
    case_expr_list <caseExprList> (122)
        on left: 105 106
        on right: 104 105
    case_expr <caseExpr> (123)
        on left: 107 108 109
        on right: 105 106
    for_stmt <forNode> (124)
        on left: 110 111
        on right: 89
    proc_stmt <callNode> (125)
        on left: 112 113 114 115 116 117 118 119 120 121 122
        on right: 90
    args_list <argsList> (126)
        on left: 123 124
        on right: 113 116 118 119 120 121 122 123 142 149 150 151 152 153 154
    expression <expressionNode> (127)
        on left: 125 126 127 128 129 130 131
        on right: 93 94 95 97 98 101 103 104 110 111 123 124 125 126 127 128 129 130 144 147
    expr <expressionNode> (128)
        on left: 132 133 134 135
        on right: 125 126 127 128 129 130 131 132 133 134
    term <expressionNode> (129)
        on left: 136 137 138 139 140
        on right: 132 133 134 135 136 137 138 139
    factor <expressionNode> (130)
        on left: 141 142 143 144 145 146 147 148 149 150 151 152 153 154
        on right: 114 136 137 138 139 140 145 146


State 0

    0 $accept: • program $end

    PROGRAM  shift, and go to state 1

    program  go to state 2


State 1

    1 program: PROGRAM • IDENT_NAME SEMICOLON routine DOT
    2        | PROGRAM • IDENT_NAME SEMICOLON routine
    3        | PROGRAM • IDENT_NAME routine DOT
    4        | PROGRAM • IDENT_NAME routine

    IDENT_NAME  shift, and go to state 3


State 2

    0 $accept: program • $end

    $end  shift, and go to state 4


State 3

    1 program: PROGRAM IDENT_NAME • SEMICOLON routine DOT
    2        | PROGRAM IDENT_NAME • SEMICOLON routine
    3        | PROGRAM IDENT_NAME • routine DOT
    4        | PROGRAM IDENT_NAME • routine

    CONST      shift, and go to state 5
    SEMICOLON  shift, and go to state 6

    $default  reduce using rule 34 (const_part)

    routine       go to state 7
    routine_head  go to state 8
    const_part    go to state 9


State 4

    0 $accept: program $end •

    $default  accept


State 5

   35 const_part: CONST • const_expr_list

    IDENT_NAME  shift, and go to state 10

    const_expr_list  go to state 11
    const_expr       go to state 12
    identifier       go to state 13


State 6

    1 program: PROGRAM IDENT_NAME SEMICOLON • routine DOT
    2        | PROGRAM IDENT_NAME SEMICOLON • routine

    CONST  shift, and go to state 5

    $default  reduce using rule 34 (const_part)

    routine       go to state 14
    routine_head  go to state 8
    const_part    go to state 9


State 7

    3 program: PROGRAM IDENT_NAME routine • DOT
    4        | PROGRAM IDENT_NAME routine •

    DOT  shift, and go to state 15

    $default  reduce using rule 4 (program)


State 8

    5 routine: routine_head • routine_body

    BBEGIN  shift, and go to state 16

    routine_body   go to state 17
    compound_stmt  go to state 18


State 9

    6 routine_head: const_part • type_part var_part routine_part

    TYPE  shift, and go to state 19

    $default  reduce using rule 48 (type_part)

    type_part  go to state 20


State 10

   73 identifier: IDENT_NAME •

    $default  reduce using rule 73 (identifier)


State 11

   35 const_part: CONST const_expr_list •
   36 const_expr_list: const_expr_list • const_expr

    IDENT_NAME  shift, and go to state 10

    $default  reduce using rule 35 (const_part)

    const_expr  go to state 21
    identifier  go to state 13


State 12

   37 const_expr_list: const_expr •

    $default  reduce using rule 37 (const_expr_list)


State 13

   38 const_expr: identifier • EQUAL const_value SEMICOLON
   39           | identifier • EQUAL const_value

    EQUAL  shift, and go to state 22


State 14

    1 program: PROGRAM IDENT_NAME SEMICOLON routine • DOT
    2        | PROGRAM IDENT_NAME SEMICOLON routine •

    DOT  shift, and go to state 23

    $default  reduce using rule 2 (program)


State 15

    3 program: PROGRAM IDENT_NAME routine DOT •

    $default  reduce using rule 3 (program)


State 16

   75 compound_stmt: BBEGIN • stmt_list END
   76              | BBEGIN • stmt_list

    $default  reduce using rule 77 (stmt_list)

    stmt_list  go to state 24


State 17

    5 routine: routine_head routine_body •

    $default  reduce using rule 5 (routine)


State 18

   74 routine_body: compound_stmt •

    $default  reduce using rule 74 (routine_body)


State 19

   49 type_part: TYPE • type_decl_list

    IDENT_NAME  shift, and go to state 10

    type_decl_list  go to state 25
    type_def        go to state 26
    identifier      go to state 27


State 20

    6 routine_head: const_part type_part • var_part routine_part

    VAR  shift, and go to state 28

    $default  reduce using rule 28 (var_part)

    var_part  go to state 29


State 21

   36 const_expr_list: const_expr_list const_expr •

    $default  reduce using rule 36 (const_expr_list)


State 22

   38 const_expr: identifier EQUAL • const_value SEMICOLON
   39           | identifier EQUAL • const_value

    INTEGER  shift, and go to state 30
    CHAR     shift, and go to state 31
    STRING   shift, and go to state 32
    TRUE     shift, and go to state 33
    FALSE    shift, and go to state 34
    MAXINT   shift, and go to state 35
    MINUS    shift, and go to state 36

    const_value  go to state 37


State 23

    1 program: PROGRAM IDENT_NAME SEMICOLON routine DOT •

    $default  reduce using rule 1 (program)


State 24

   75 compound_stmt: BBEGIN stmt_list • END
   76              | BBEGIN stmt_list •
   78 stmt_list: stmt_list • stmt SEMICOLON
   79          | stmt_list • stmt

    BBEGIN       shift, and go to state 16
    END          shift, and go to state 38
    IDENT_NAME   shift, and go to state 10
    INTEGER      shift, and go to state 39
    READ         shift, and go to state 40
    READLN       shift, and go to state 41
    WRITE        shift, and go to state 42
    WRITELN      shift, and go to state 43
    MEMORYREAD   shift, and go to state 44
    MEMORYWRITE  shift, and go to state 45
    STACKREAD    shift, and go to state 46
    STACKWRITE   shift, and go to state 47
    IF           shift, and go to state 48
    REPEAT       shift, and go to state 49
    WHILE        shift, and go to state 50
    CASE         shift, and go to state 51
    FOR          shift, and go to state 52
    GOTO         shift, and go to state 53
    BREAK        shift, and go to state 54
    CONTINUE     shift, and go to state 55

    $end         reduce using rule 76 (compound_stmt)
    $end         [reduce using rule 102 (repeat_stmt)]
    FUNCTION     reduce using rule 76 (compound_stmt)
    FUNCTION     [reduce using rule 102 (repeat_stmt)]
    PROCEDURE    reduce using rule 76 (compound_stmt)
    PROCEDURE    [reduce using rule 102 (repeat_stmt)]
    BBEGIN       [reduce using rule 76 (compound_stmt)]
    BBEGIN       [reduce using rule 102 (repeat_stmt)]
    END          [reduce using rule 76 (compound_stmt)]
    END          [reduce using rule 102 (repeat_stmt)]
    IDENT_NAME   [reduce using rule 76 (compound_stmt)]
    IDENT_NAME   [reduce using rule 102 (repeat_stmt)]
    INTEGER      [reduce using rule 76 (compound_stmt)]
    INTEGER      [reduce using rule 102 (repeat_stmt)]
    READ         [reduce using rule 76 (compound_stmt)]
    READ         [reduce using rule 102 (repeat_stmt)]
    READLN       [reduce using rule 76 (compound_stmt)]
    READLN       [reduce using rule 102 (repeat_stmt)]
    WRITE        [reduce using rule 76 (compound_stmt)]
    WRITE        [reduce using rule 102 (repeat_stmt)]
    WRITELN      [reduce using rule 76 (compound_stmt)]
    WRITELN      [reduce using rule 102 (repeat_stmt)]
    MEMORYREAD   [reduce using rule 76 (compound_stmt)]
    MEMORYREAD   [reduce using rule 102 (repeat_stmt)]
    MEMORYWRITE  [reduce using rule 76 (compound_stmt)]
    MEMORYWRITE  [reduce using rule 102 (repeat_stmt)]
    STACKREAD    [reduce using rule 76 (compound_stmt)]
    STACKREAD    [reduce using rule 102 (repeat_stmt)]
    STACKWRITE   [reduce using rule 76 (compound_stmt)]
    STACKWRITE   [reduce using rule 102 (repeat_stmt)]
    IF           [reduce using rule 76 (compound_stmt)]
    IF           [reduce using rule 102 (repeat_stmt)]
    ELSE         reduce using rule 76 (compound_stmt)
    ELSE         [reduce using rule 102 (repeat_stmt)]
    REPEAT       [reduce using rule 76 (compound_stmt)]
    REPEAT       [reduce using rule 102 (repeat_stmt)]
    UNTIL        reduce using rule 76 (compound_stmt)
    UNTIL        [reduce using rule 102 (repeat_stmt)]
    WHILE        [reduce using rule 76 (compound_stmt)]
    WHILE        [reduce using rule 102 (repeat_stmt)]
    CASE         [reduce using rule 76 (compound_stmt)]
    CASE         [reduce using rule 102 (repeat_stmt)]
    FOR          [reduce using rule 76 (compound_stmt)]
    FOR          [reduce using rule 102 (repeat_stmt)]
    SEMICOLON    reduce using rule 76 (compound_stmt)
    SEMICOLON    [reduce using rule 102 (repeat_stmt)]
    DOT          reduce using rule 76 (compound_stmt)
    DOT          [reduce using rule 102 (repeat_stmt)]
    GOTO         [reduce using rule 76 (compound_stmt)]
    GOTO         [reduce using rule 102 (repeat_stmt)]
    BREAK        [reduce using rule 76 (compound_stmt)]
    BREAK        [reduce using rule 102 (repeat_stmt)]
    CONTINUE     [reduce using rule 76 (compound_stmt)]
    CONTINUE     [reduce using rule 102 (repeat_stmt)]
    $default     reduce using rule 76 (compound_stmt)

    identifier     go to state 56
    compound_stmt  go to state 57
    stmt           go to state 58
    no_label_stmt  go to state 59
    assign_stmt    go to state 60
    goto_stmt      go to state 61
    if_stmt        go to state 62
    repeat_stmt    go to state 63
    while_stmt     go to state 64
    case_stmt      go to state 65
    for_stmt       go to state 66
    proc_stmt      go to state 67


State 25

   49 type_part: TYPE type_decl_list •
   50 type_decl_list: type_decl_list • type_def

    IDENT_NAME  shift, and go to state 10

    $default  reduce using rule 49 (type_part)

    type_def    go to state 68
    identifier  go to state 27


State 26

   51 type_decl_list: type_def •

    $default  reduce using rule 51 (type_decl_list)


State 27

   52 type_def: identifier • EQUAL type_decl SEMICOLON
   53         | identifier • EQUAL type_decl

    EQUAL  shift, and go to state 69


State 28

   29 var_part: VAR • var_decl_list

    IDENT_NAME  shift, and go to state 10

    var_decl_list  go to state 70
    var_decl       go to state 71
    name_list      go to state 72
    identifier     go to state 73


State 29

    6 routine_head: const_part type_part var_part • routine_part

    FUNCTION   shift, and go to state 74
    PROCEDURE  shift, and go to state 75

    FUNCTION   [reduce using rule 7 (routine_part)]
    PROCEDURE  [reduce using rule 7 (routine_part)]
    $default   reduce using rule 7 (routine_part)

    routine_part  go to state 76
    fun_decl      go to state 77
    fun_head      go to state 78
    proc_decl     go to state 79
    proc_head     go to state 80


State 30

   40 const_value: INTEGER •

    $default  reduce using rule 40 (const_value)


State 31

   42 const_value: CHAR •

    $default  reduce using rule 42 (const_value)


State 32

   43 const_value: STRING •

    $default  reduce using rule 43 (const_value)


State 33

   44 const_value: TRUE •

    $default  reduce using rule 44 (const_value)


State 34

   45 const_value: FALSE •

    $default  reduce using rule 45 (const_value)


State 35

   46 const_value: MAXINT •

    $default  reduce using rule 46 (const_value)


State 36

   41 const_value: MINUS • INTEGER
   47            | MINUS • MAXINT

    INTEGER  shift, and go to state 81
    MAXINT   shift, and go to state 82


State 37

   38 const_expr: identifier EQUAL const_value • SEMICOLON
   39           | identifier EQUAL const_value •

    SEMICOLON  shift, and go to state 83

    $default  reduce using rule 39 (const_expr)


State 38

   75 compound_stmt: BBEGIN stmt_list END •

    $default  reduce using rule 75 (compound_stmt)


State 39

   80 stmt: INTEGER • COLON no_label_stmt

    COLON  shift, and go to state 84


State 40

  114 proc_stmt: READ • LP factor RP

    LP  shift, and go to state 85


State 41

  115 proc_stmt: READLN •

    $default  reduce using rule 115 (proc_stmt)


State 42

  116 proc_stmt: WRITE • LP args_list RP

    LP  shift, and go to state 86


State 43

  117 proc_stmt: WRITELN •
  118          | WRITELN • LP args_list RP

    LP  shift, and go to state 87

    $default  reduce using rule 117 (proc_stmt)


State 44

  119 proc_stmt: MEMORYREAD • LP args_list RP

    LP  shift, and go to state 88


State 45

  120 proc_stmt: MEMORYWRITE • LP args_list RP

    LP  shift, and go to state 89


State 46

  121 proc_stmt: STACKREAD • LP args_list RP

    LP  shift, and go to state 90


State 47

  122 proc_stmt: STACKWRITE • LP args_list RP

    LP  shift, and go to state 91


State 48

   97 if_stmt: IF • expression THEN stmt else_clause
   98        | IF • expression stmt else_clause

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 92
    CHR         shift, and go to state 93
    ODD         shift, and go to state 94
    ORD         shift, and go to state 95
    PRED        shift, and go to state 96
    SUCC        shift, and go to state 97
    MINUS       shift, and go to state 98
    NOT         shift, and go to state 99
    LP          shift, and go to state 100

    const_value  go to state 101
    identifier   go to state 102
    expression   go to state 103
    expr         go to state 104
    term         go to state 105
    factor       go to state 106


State 49

  101 repeat_stmt: REPEAT • stmt_list UNTIL expression

    $default  reduce using rule 77 (stmt_list)

    stmt_list  go to state 107


State 50

  103 while_stmt: WHILE • expression DO stmt

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 92
    CHR         shift, and go to state 93
    ODD         shift, and go to state 94
    ORD         shift, and go to state 95
    PRED        shift, and go to state 96
    SUCC        shift, and go to state 97
    MINUS       shift, and go to state 98
    NOT         shift, and go to state 99
    LP          shift, and go to state 100

    const_value  go to state 101
    identifier   go to state 102
    expression   go to state 108
    expr         go to state 104
    term         go to state 105
    factor       go to state 106


State 51

  104 case_stmt: CASE • expression OF case_expr_list END

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 92
    CHR         shift, and go to state 93
    ODD         shift, and go to state 94
    ORD         shift, and go to state 95
    PRED        shift, and go to state 96
    SUCC        shift, and go to state 97
    MINUS       shift, and go to state 98
    NOT         shift, and go to state 99
    LP          shift, and go to state 100

    const_value  go to state 101
    identifier   go to state 102
    expression   go to state 109
    expr         go to state 104
    term         go to state 105
    factor       go to state 106


State 52

  110 for_stmt: FOR • identifier ASSIGN expression TO expression DO stmt
  111         | FOR • identifier ASSIGN expression DOWNTO expression DO stmt

    IDENT_NAME  shift, and go to state 10

    identifier  go to state 110


State 53

   96 goto_stmt: GOTO • INTEGER

    INTEGER  shift, and go to state 111


State 54

   91 no_label_stmt: BREAK •

    $default  reduce using rule 91 (no_label_stmt)


State 55

   92 no_label_stmt: CONTINUE •

    $default  reduce using rule 92 (no_label_stmt)


State 56

   93 assign_stmt: identifier • ASSIGN expression
   94            | identifier • LB expression RB ASSIGN expression
   95            | identifier • DOT identifier ASSIGN expression
  112 proc_stmt: identifier •
  113          | identifier • LP args_list RP

    ASSIGN  shift, and go to state 112
    LB      shift, and go to state 113
    LP      shift, and go to state 114
    DOT     shift, and go to state 115

    DOT       [reduce using rule 112 (proc_stmt)]
    $default  reduce using rule 112 (proc_stmt)


State 57

   83 no_label_stmt: compound_stmt •

    $default  reduce using rule 83 (no_label_stmt)


State 58

   78 stmt_list: stmt_list stmt • SEMICOLON
   79          | stmt_list stmt •

    SEMICOLON  shift, and go to state 116

    SEMICOLON  [reduce using rule 79 (stmt_list)]
    $default   reduce using rule 79 (stmt_list)


State 59

   81 stmt: no_label_stmt •

    $default  reduce using rule 81 (stmt)


State 60

   82 no_label_stmt: assign_stmt •

    $default  reduce using rule 82 (no_label_stmt)


State 61

   84 no_label_stmt: goto_stmt •

    $default  reduce using rule 84 (no_label_stmt)


State 62

   85 no_label_stmt: if_stmt •

    $default  reduce using rule 85 (no_label_stmt)


State 63

   86 no_label_stmt: repeat_stmt •

    $default  reduce using rule 86 (no_label_stmt)


State 64

   87 no_label_stmt: while_stmt •

    $default  reduce using rule 87 (no_label_stmt)


State 65

   88 no_label_stmt: case_stmt •

    $default  reduce using rule 88 (no_label_stmt)


State 66

   89 no_label_stmt: for_stmt •

    $default  reduce using rule 89 (no_label_stmt)


State 67

   90 no_label_stmt: proc_stmt •

    $default  reduce using rule 90 (no_label_stmt)


State 68

   50 type_decl_list: type_decl_list type_def •

    $default  reduce using rule 50 (type_decl_list)


State 69

   52 type_def: identifier EQUAL • type_decl SEMICOLON
   53         | identifier EQUAL • type_decl

    IDENT_NAME     shift, and go to state 10
    INTEGER        shift, and go to state 30
    CHAR           shift, and go to state 31
    STRING         shift, and go to state 32
    TRUE           shift, and go to state 33
    FALSE          shift, and go to state 34
    MAXINT         shift, and go to state 35
    MINUS          shift, and go to state 36
    LP             shift, and go to state 117
    INT_TYPE       shift, and go to state 118
    UNSIGNED_TYPE  shift, and go to state 119
    BOOL_TYPE      shift, and go to state 120
    CHAR_TYPE      shift, and go to state 121
    ARRAY          shift, and go to state 122
    RECORD         shift, and go to state 123

    const_value       go to state 124
    type_decl         go to state 125
    record_type_decl  go to state 126
    array_type_decl   go to state 127
    simple_type       go to state 128
    identifier        go to state 129


State 70

   29 var_part: VAR var_decl_list •
   30 var_decl_list: var_decl_list • var_decl

    IDENT_NAME  shift, and go to state 10

    $default  reduce using rule 29 (var_part)

    var_decl    go to state 130
    name_list   go to state 72
    identifier  go to state 73


State 71

   31 var_decl_list: var_decl •

    $default  reduce using rule 31 (var_decl_list)


State 72

   32 var_decl: name_list • COLON type_decl SEMICOLON
   33         | name_list • COLON type_decl
   71 name_list: name_list • COMMA identifier

    COMMA  shift, and go to state 131
    COLON  shift, and go to state 132


State 73

   72 name_list: identifier •

    $default  reduce using rule 72 (name_list)


State 74

   16 fun_head: FUNCTION • IDENT_NAME params COLON simple_type

    IDENT_NAME  shift, and go to state 133


State 75

   21 proc_head: PROCEDURE • IDENT_NAME params

    IDENT_NAME  shift, and go to state 134


State 76

    6 routine_head: const_part type_part var_part routine_part •
    8 routine_part: routine_part • fun_decl
    9             | routine_part • proc_decl

    FUNCTION   shift, and go to state 74
    PROCEDURE  shift, and go to state 75

    $default  reduce using rule 6 (routine_head)

    fun_decl   go to state 135
    fun_head   go to state 78
    proc_decl  go to state 136
    proc_head  go to state 80


State 77

   10 routine_part: fun_decl •

    $default  reduce using rule 10 (routine_part)


State 78

   12 fun_decl: fun_head • SEMICOLON routine SEMICOLON
   13         | fun_head • SEMICOLON routine
   14         | fun_head • routine SEMICOLON
   15         | fun_head • routine

    CONST      shift, and go to state 5
    SEMICOLON  shift, and go to state 137

    $default  reduce using rule 34 (const_part)

    routine       go to state 138
    routine_head  go to state 8
    const_part    go to state 9


State 79

   11 routine_part: proc_decl •

    $default  reduce using rule 11 (routine_part)


State 80

   17 proc_decl: proc_head • SEMICOLON routine SEMICOLON
   18          | proc_head • routine SEMICOLON
   19          | proc_head • SEMICOLON routine
   20          | proc_head • routine

    CONST      shift, and go to state 5
    SEMICOLON  shift, and go to state 139

    $default  reduce using rule 34 (const_part)

    routine       go to state 140
    routine_head  go to state 8
    const_part    go to state 9


State 81

   41 const_value: MINUS INTEGER •

    $default  reduce using rule 41 (const_value)


State 82

   47 const_value: MINUS MAXINT •

    $default  reduce using rule 47 (const_value)


State 83

   38 const_expr: identifier EQUAL const_value SEMICOLON •

    $default  reduce using rule 38 (const_expr)


State 84

   80 stmt: INTEGER COLON • no_label_stmt

    BBEGIN       shift, and go to state 16
    IDENT_NAME   shift, and go to state 10
    READ         shift, and go to state 40
    READLN       shift, and go to state 41
    WRITE        shift, and go to state 42
    WRITELN      shift, and go to state 43
    MEMORYREAD   shift, and go to state 44
    MEMORYWRITE  shift, and go to state 45
    STACKREAD    shift, and go to state 46
    STACKWRITE   shift, and go to state 47
    IF           shift, and go to state 48
    REPEAT       shift, and go to state 49
    WHILE        shift, and go to state 50
    CASE         shift, and go to state 51
    FOR          shift, and go to state 52
    GOTO         shift, and go to state 53
    BREAK        shift, and go to state 54
    CONTINUE     shift, and go to state 55

    BBEGIN       [reduce using rule 102 (repeat_stmt)]
    IDENT_NAME   [reduce using rule 102 (repeat_stmt)]
    READ         [reduce using rule 102 (repeat_stmt)]
    READLN       [reduce using rule 102 (repeat_stmt)]
    WRITE        [reduce using rule 102 (repeat_stmt)]
    WRITELN      [reduce using rule 102 (repeat_stmt)]
    MEMORYREAD   [reduce using rule 102 (repeat_stmt)]
    MEMORYWRITE  [reduce using rule 102 (repeat_stmt)]
    STACKREAD    [reduce using rule 102 (repeat_stmt)]
    STACKWRITE   [reduce using rule 102 (repeat_stmt)]
    IF           [reduce using rule 102 (repeat_stmt)]
    REPEAT       [reduce using rule 102 (repeat_stmt)]
    WHILE        [reduce using rule 102 (repeat_stmt)]
    CASE         [reduce using rule 102 (repeat_stmt)]
    FOR          [reduce using rule 102 (repeat_stmt)]
    GOTO         [reduce using rule 102 (repeat_stmt)]
    BREAK        [reduce using rule 102 (repeat_stmt)]
    CONTINUE     [reduce using rule 102 (repeat_stmt)]
    $default     reduce using rule 102 (repeat_stmt)

    identifier     go to state 56
    compound_stmt  go to state 57
    no_label_stmt  go to state 141
    assign_stmt    go to state 60
    goto_stmt      go to state 61
    if_stmt        go to state 62
    repeat_stmt    go to state 63
    while_stmt     go to state 64
    case_stmt      go to state 65
    for_stmt       go to state 66
    proc_stmt      go to state 67


State 85

  114 proc_stmt: READ LP • factor RP

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 92
    CHR         shift, and go to state 93
    ODD         shift, and go to state 94
    ORD         shift, and go to state 95
    PRED        shift, and go to state 96
    SUCC        shift, and go to state 97
    MINUS       shift, and go to state 98
    NOT         shift, and go to state 99
    LP          shift, and go to state 100

    const_value  go to state 101
    identifier   go to state 102
    factor       go to state 142


State 86

  116 proc_stmt: WRITE LP • args_list RP

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 92
    CHR         shift, and go to state 93
    ODD         shift, and go to state 94
    ORD         shift, and go to state 95
    PRED        shift, and go to state 96
    SUCC        shift, and go to state 97
    MINUS       shift, and go to state 98
    NOT         shift, and go to state 99
    LP          shift, and go to state 100

    const_value  go to state 101
    identifier   go to state 102
    args_list    go to state 143
    expression   go to state 144
    expr         go to state 104
    term         go to state 105
    factor       go to state 106


State 87

  118 proc_stmt: WRITELN LP • args_list RP

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 92
    CHR         shift, and go to state 93
    ODD         shift, and go to state 94
    ORD         shift, and go to state 95
    PRED        shift, and go to state 96
    SUCC        shift, and go to state 97
    MINUS       shift, and go to state 98
    NOT         shift, and go to state 99
    LP          shift, and go to state 100

    const_value  go to state 101
    identifier   go to state 102
    args_list    go to state 145
    expression   go to state 144
    expr         go to state 104
    term         go to state 105
    factor       go to state 106


State 88

  119 proc_stmt: MEMORYREAD LP • args_list RP

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 92
    CHR         shift, and go to state 93
    ODD         shift, and go to state 94
    ORD         shift, and go to state 95
    PRED        shift, and go to state 96
    SUCC        shift, and go to state 97
    MINUS       shift, and go to state 98
    NOT         shift, and go to state 99
    LP          shift, and go to state 100

    const_value  go to state 101
    identifier   go to state 102
    args_list    go to state 146
    expression   go to state 144
    expr         go to state 104
    term         go to state 105
    factor       go to state 106


State 89

  120 proc_stmt: MEMORYWRITE LP • args_list RP

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 92
    CHR         shift, and go to state 93
    ODD         shift, and go to state 94
    ORD         shift, and go to state 95
    PRED        shift, and go to state 96
    SUCC        shift, and go to state 97
    MINUS       shift, and go to state 98
    NOT         shift, and go to state 99
    LP          shift, and go to state 100

    const_value  go to state 101
    identifier   go to state 102
    args_list    go to state 147
    expression   go to state 144
    expr         go to state 104
    term         go to state 105
    factor       go to state 106


State 90

  121 proc_stmt: STACKREAD LP • args_list RP

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 92
    CHR         shift, and go to state 93
    ODD         shift, and go to state 94
    ORD         shift, and go to state 95
    PRED        shift, and go to state 96
    SUCC        shift, and go to state 97
    MINUS       shift, and go to state 98
    NOT         shift, and go to state 99
    LP          shift, and go to state 100

    const_value  go to state 101
    identifier   go to state 102
    args_list    go to state 148
    expression   go to state 144
    expr         go to state 104
    term         go to state 105
    factor       go to state 106


State 91

  122 proc_stmt: STACKWRITE LP • args_list RP

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 92
    CHR         shift, and go to state 93
    ODD         shift, and go to state 94
    ORD         shift, and go to state 95
    PRED        shift, and go to state 96
    SUCC        shift, and go to state 97
    MINUS       shift, and go to state 98
    NOT         shift, and go to state 99
    LP          shift, and go to state 100

    const_value  go to state 101
    identifier   go to state 102
    args_list    go to state 149
    expression   go to state 144
    expr         go to state 104
    term         go to state 105
    factor       go to state 106


State 92

  149 factor: ABS • LP args_list RP

    LP  shift, and go to state 150


State 93

  150 factor: CHR • LP args_list RP

    LP  shift, and go to state 151


State 94

  151 factor: ODD • LP args_list RP

    LP  shift, and go to state 152


State 95

  152 factor: ORD • LP args_list RP

    LP  shift, and go to state 153


State 96

  153 factor: PRED • LP args_list RP

    LP  shift, and go to state 154


State 97

  154 factor: SUCC • LP args_list RP

    LP  shift, and go to state 155


State 98

   41 const_value: MINUS • INTEGER
   47            | MINUS • MAXINT
  146 factor: MINUS • factor

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 156
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 157
    ABS         shift, and go to state 92
    CHR         shift, and go to state 93
    ODD         shift, and go to state 94
    ORD         shift, and go to state 95
    PRED        shift, and go to state 96
    SUCC        shift, and go to state 97
    MINUS       shift, and go to state 98
    NOT         shift, and go to state 99
    LP          shift, and go to state 100

    const_value  go to state 101
    identifier   go to state 102
    factor       go to state 158


State 99

  145 factor: NOT • factor

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 92
    CHR         shift, and go to state 93
    ODD         shift, and go to state 94
    ORD         shift, and go to state 95
    PRED        shift, and go to state 96
    SUCC        shift, and go to state 97
    MINUS       shift, and go to state 98
    NOT         shift, and go to state 99
    LP          shift, and go to state 100

    const_value  go to state 101
    identifier   go to state 102
    factor       go to state 159


State 100

  144 factor: LP • expression RP

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 92
    CHR         shift, and go to state 93
    ODD         shift, and go to state 94
    ORD         shift, and go to state 95
    PRED        shift, and go to state 96
    SUCC        shift, and go to state 97
    MINUS       shift, and go to state 98
    NOT         shift, and go to state 99
    LP          shift, and go to state 100

    const_value  go to state 101
    identifier   go to state 102
    expression   go to state 160
    expr         go to state 104
    term         go to state 105
    factor       go to state 106


State 101

  143 factor: const_value •

    $default  reduce using rule 143 (factor)


State 102

  141 factor: identifier •
  142       | identifier • LP args_list RP
  147       | identifier • LB expression RB
  148       | identifier • DOT identifier

    LB   shift, and go to state 161
    LP   shift, and go to state 162
    DOT  shift, and go to state 163

    DOT       [reduce using rule 141 (factor)]
    $default  reduce using rule 141 (factor)


State 103

   97 if_stmt: IF expression • THEN stmt else_clause
   98        | IF expression • stmt else_clause
  125 expression: expression • GE expr
  126           | expression • GT expr
  127           | expression • LE expr
  128           | expression • LT expr
  129           | expression • EQUAL expr
  130           | expression • UNEQUAL expr

    BBEGIN       shift, and go to state 16
    IDENT_NAME   shift, and go to state 10
    INTEGER      shift, and go to state 39
    READ         shift, and go to state 40
    READLN       shift, and go to state 41
    WRITE        shift, and go to state 42
    WRITELN      shift, and go to state 43
    MEMORYREAD   shift, and go to state 44
    MEMORYWRITE  shift, and go to state 45
    STACKREAD    shift, and go to state 46
    STACKWRITE   shift, and go to state 47
    IF           shift, and go to state 48
    THEN         shift, and go to state 164
    REPEAT       shift, and go to state 49
    WHILE        shift, and go to state 50
    CASE         shift, and go to state 51
    FOR          shift, and go to state 52
    EQUAL        shift, and go to state 165
    UNEQUAL      shift, and go to state 166
    GE           shift, and go to state 167
    GT           shift, and go to state 168
    LE           shift, and go to state 169
    LT           shift, and go to state 170
    GOTO         shift, and go to state 53
    BREAK        shift, and go to state 54
    CONTINUE     shift, and go to state 55

    BBEGIN       [reduce using rule 102 (repeat_stmt)]
    IDENT_NAME   [reduce using rule 102 (repeat_stmt)]
    INTEGER      [reduce using rule 102 (repeat_stmt)]
    READ         [reduce using rule 102 (repeat_stmt)]
    READLN       [reduce using rule 102 (repeat_stmt)]
    WRITE        [reduce using rule 102 (repeat_stmt)]
    WRITELN      [reduce using rule 102 (repeat_stmt)]
    MEMORYREAD   [reduce using rule 102 (repeat_stmt)]
    MEMORYWRITE  [reduce using rule 102 (repeat_stmt)]
    STACKREAD    [reduce using rule 102 (repeat_stmt)]
    STACKWRITE   [reduce using rule 102 (repeat_stmt)]
    IF           [reduce using rule 102 (repeat_stmt)]
    REPEAT       [reduce using rule 102 (repeat_stmt)]
    WHILE        [reduce using rule 102 (repeat_stmt)]
    CASE         [reduce using rule 102 (repeat_stmt)]
    FOR          [reduce using rule 102 (repeat_stmt)]
    GOTO         [reduce using rule 102 (repeat_stmt)]
    BREAK        [reduce using rule 102 (repeat_stmt)]
    CONTINUE     [reduce using rule 102 (repeat_stmt)]
    $default     reduce using rule 102 (repeat_stmt)

    identifier     go to state 56
    compound_stmt  go to state 57
    stmt           go to state 171
    no_label_stmt  go to state 59
    assign_stmt    go to state 60
    goto_stmt      go to state 61
    if_stmt        go to state 62
    repeat_stmt    go to state 63
    while_stmt     go to state 64
    case_stmt      go to state 65
    for_stmt       go to state 66
    proc_stmt      go to state 67


State 104

  131 expression: expr •
  132 expr: expr • PLUS term
  133     | expr • MINUS term
  134     | expr • OR term

    PLUS   shift, and go to state 172
    MINUS  shift, and go to state 173
    OR     shift, and go to state 174

    $default  reduce using rule 131 (expression)


State 105

  135 expr: term •
  136 term: term • MUL factor
  137     | term • DIV factor
  138     | term • MOD factor
  139     | term • AND factor

    MUL  shift, and go to state 175
    DIV  shift, and go to state 176
    AND  shift, and go to state 177
    MOD  shift, and go to state 178

    $default  reduce using rule 135 (expr)


State 106

  140 term: factor •

    $default  reduce using rule 140 (term)


State 107

   78 stmt_list: stmt_list • stmt SEMICOLON
   79          | stmt_list • stmt
  101 repeat_stmt: REPEAT stmt_list • UNTIL expression

    BBEGIN       shift, and go to state 16
    IDENT_NAME   shift, and go to state 10
    INTEGER      shift, and go to state 39
    READ         shift, and go to state 40
    READLN       shift, and go to state 41
    WRITE        shift, and go to state 42
    WRITELN      shift, and go to state 43
    MEMORYREAD   shift, and go to state 44
    MEMORYWRITE  shift, and go to state 45
    STACKREAD    shift, and go to state 46
    STACKWRITE   shift, and go to state 47
    IF           shift, and go to state 48
    REPEAT       shift, and go to state 49
    UNTIL        shift, and go to state 179
    WHILE        shift, and go to state 50
    CASE         shift, and go to state 51
    FOR          shift, and go to state 52
    GOTO         shift, and go to state 53
    BREAK        shift, and go to state 54
    CONTINUE     shift, and go to state 55

    BBEGIN       [reduce using rule 102 (repeat_stmt)]
    IDENT_NAME   [reduce using rule 102 (repeat_stmt)]
    INTEGER      [reduce using rule 102 (repeat_stmt)]
    READ         [reduce using rule 102 (repeat_stmt)]
    READLN       [reduce using rule 102 (repeat_stmt)]
    WRITE        [reduce using rule 102 (repeat_stmt)]
    WRITELN      [reduce using rule 102 (repeat_stmt)]
    MEMORYREAD   [reduce using rule 102 (repeat_stmt)]
    MEMORYWRITE  [reduce using rule 102 (repeat_stmt)]
    STACKREAD    [reduce using rule 102 (repeat_stmt)]
    STACKWRITE   [reduce using rule 102 (repeat_stmt)]
    IF           [reduce using rule 102 (repeat_stmt)]
    REPEAT       [reduce using rule 102 (repeat_stmt)]
    UNTIL        [reduce using rule 102 (repeat_stmt)]
    WHILE        [reduce using rule 102 (repeat_stmt)]
    CASE         [reduce using rule 102 (repeat_stmt)]
    FOR          [reduce using rule 102 (repeat_stmt)]
    GOTO         [reduce using rule 102 (repeat_stmt)]
    BREAK        [reduce using rule 102 (repeat_stmt)]
    CONTINUE     [reduce using rule 102 (repeat_stmt)]
    $default     reduce using rule 102 (repeat_stmt)

    identifier     go to state 56
    compound_stmt  go to state 57
    stmt           go to state 58
    no_label_stmt  go to state 59
    assign_stmt    go to state 60
    goto_stmt      go to state 61
    if_stmt        go to state 62
    repeat_stmt    go to state 63
    while_stmt     go to state 64
    case_stmt      go to state 65
    for_stmt       go to state 66
    proc_stmt      go to state 67


State 108

  103 while_stmt: WHILE expression • DO stmt
  125 expression: expression • GE expr
  126           | expression • GT expr
  127           | expression • LE expr
  128           | expression • LT expr
  129           | expression • EQUAL expr
  130           | expression • UNEQUAL expr

    DO       shift, and go to state 180
    EQUAL    shift, and go to state 165
    UNEQUAL  shift, and go to state 166
    GE       shift, and go to state 167
    GT       shift, and go to state 168
    LE       shift, and go to state 169
    LT       shift, and go to state 170


State 109

  104 case_stmt: CASE expression • OF case_expr_list END
  125 expression: expression • GE expr
  126           | expression • GT expr
  127           | expression • LE expr
  128           | expression • LT expr
  129           | expression • EQUAL expr
  130           | expression • UNEQUAL expr

    EQUAL    shift, and go to state 165
    UNEQUAL  shift, and go to state 166
    GE       shift, and go to state 167
    GT       shift, and go to state 168
    LE       shift, and go to state 169
    LT       shift, and go to state 170
    OF       shift, and go to state 181


State 110

  110 for_stmt: FOR identifier • ASSIGN expression TO expression DO stmt
  111         | FOR identifier • ASSIGN expression DOWNTO expression DO stmt

    ASSIGN  shift, and go to state 182


State 111

   96 goto_stmt: GOTO INTEGER •

    $default  reduce using rule 96 (goto_stmt)


State 112

   93 assign_stmt: identifier ASSIGN • expression

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 92
    CHR         shift, and go to state 93
    ODD         shift, and go to state 94
    ORD         shift, and go to state 95
    PRED        shift, and go to state 96
    SUCC        shift, and go to state 97
    MINUS       shift, and go to state 98
    NOT         shift, and go to state 99
    LP          shift, and go to state 100

    const_value  go to state 101
    identifier   go to state 102
    expression   go to state 183
    expr         go to state 104
    term         go to state 105
    factor       go to state 106


State 113

   94 assign_stmt: identifier LB • expression RB ASSIGN expression

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 92
    CHR         shift, and go to state 93
    ODD         shift, and go to state 94
    ORD         shift, and go to state 95
    PRED        shift, and go to state 96
    SUCC        shift, and go to state 97
    MINUS       shift, and go to state 98
    NOT         shift, and go to state 99
    LP          shift, and go to state 100

    const_value  go to state 101
    identifier   go to state 102
    expression   go to state 184
    expr         go to state 104
    term         go to state 105
    factor       go to state 106


State 114

  113 proc_stmt: identifier LP • args_list RP

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 92
    CHR         shift, and go to state 93
    ODD         shift, and go to state 94
    ORD         shift, and go to state 95
    PRED        shift, and go to state 96
    SUCC        shift, and go to state 97
    MINUS       shift, and go to state 98
    NOT         shift, and go to state 99
    LP          shift, and go to state 100

    const_value  go to state 101
    identifier   go to state 102
    args_list    go to state 185
    expression   go to state 144
    expr         go to state 104
    term         go to state 105
    factor       go to state 106


State 115

   95 assign_stmt: identifier DOT • identifier ASSIGN expression

    IDENT_NAME  shift, and go to state 10

    identifier  go to state 186


State 116

   78 stmt_list: stmt_list stmt SEMICOLON •

    $default  reduce using rule 78 (stmt_list)


State 117

   64 simple_type: LP • name_list RP

    IDENT_NAME  shift, and go to state 10

    name_list   go to state 187
    identifier  go to state 73


State 118

   67 simple_type: INT_TYPE •

    $default  reduce using rule 67 (simple_type)


State 119

   68 simple_type: UNSIGNED_TYPE •

    $default  reduce using rule 68 (simple_type)


State 120

   69 simple_type: BOOL_TYPE •

    $default  reduce using rule 69 (simple_type)


State 121

   70 simple_type: CHAR_TYPE •

    $default  reduce using rule 70 (simple_type)


State 122

   62 array_type_decl: ARRAY • LB simple_type RB OF type_decl

    LB  shift, and go to state 188


State 123

   57 record_type_decl: RECORD • field_decl_list END

    IDENT_NAME  shift, and go to state 10

    field_decl_list  go to state 189
    field_decl       go to state 190
    name_list        go to state 191
    identifier       go to state 73


State 124

   65 simple_type: const_value • DOUBLEDOT const_value

    DOUBLEDOT  shift, and go to state 192


State 125

   52 type_def: identifier EQUAL type_decl • SEMICOLON
   53         | identifier EQUAL type_decl •

    SEMICOLON  shift, and go to state 193

    $default  reduce using rule 53 (type_def)


State 126

   56 type_decl: record_type_decl •

    $default  reduce using rule 56 (type_decl)


State 127

   55 type_decl: array_type_decl •

    $default  reduce using rule 55 (type_decl)


State 128

   54 type_decl: simple_type •

    $default  reduce using rule 54 (type_decl)


State 129

   63 simple_type: identifier •
   66            | identifier • DOUBLEDOT identifier

    DOUBLEDOT  shift, and go to state 194

    $default  reduce using rule 63 (simple_type)


State 130

   30 var_decl_list: var_decl_list var_decl •

    $default  reduce using rule 30 (var_decl_list)


State 131

   71 name_list: name_list COMMA • identifier

    IDENT_NAME  shift, and go to state 10

    identifier  go to state 195


State 132

   32 var_decl: name_list COLON • type_decl SEMICOLON
   33         | name_list COLON • type_decl

    IDENT_NAME     shift, and go to state 10
    INTEGER        shift, and go to state 30
    CHAR           shift, and go to state 31
    STRING         shift, and go to state 32
    TRUE           shift, and go to state 33
    FALSE          shift, and go to state 34
    MAXINT         shift, and go to state 35
    MINUS          shift, and go to state 36
    LP             shift, and go to state 117
    INT_TYPE       shift, and go to state 118
    UNSIGNED_TYPE  shift, and go to state 119
    BOOL_TYPE      shift, and go to state 120
    CHAR_TYPE      shift, and go to state 121
    ARRAY          shift, and go to state 122
    RECORD         shift, and go to state 123

    const_value       go to state 124
    type_decl         go to state 196
    record_type_decl  go to state 126
    array_type_decl   go to state 127
    simple_type       go to state 128
    identifier        go to state 129


State 133

   16 fun_head: FUNCTION IDENT_NAME • params COLON simple_type

    LP  shift, and go to state 197

    $default  reduce using rule 22 (params)

    params  go to state 198


State 134

   21 proc_head: PROCEDURE IDENT_NAME • params

    LP  shift, and go to state 197

    $default  reduce using rule 22 (params)

    params  go to state 199


State 135

    8 routine_part: routine_part fun_decl •

    $default  reduce using rule 8 (routine_part)


State 136

    9 routine_part: routine_part proc_decl •

    $default  reduce using rule 9 (routine_part)


State 137

   12 fun_decl: fun_head SEMICOLON • routine SEMICOLON
   13         | fun_head SEMICOLON • routine

    CONST  shift, and go to state 5

    $default  reduce using rule 34 (const_part)

    routine       go to state 200
    routine_head  go to state 8
    const_part    go to state 9


State 138

   14 fun_decl: fun_head routine • SEMICOLON
   15         | fun_head routine •

    SEMICOLON  shift, and go to state 201

    $default  reduce using rule 15 (fun_decl)


State 139

   17 proc_decl: proc_head SEMICOLON • routine SEMICOLON
   19          | proc_head SEMICOLON • routine

    CONST  shift, and go to state 5

    $default  reduce using rule 34 (const_part)

    routine       go to state 202
    routine_head  go to state 8
    const_part    go to state 9


State 140

   18 proc_decl: proc_head routine • SEMICOLON
   20          | proc_head routine •

    SEMICOLON  shift, and go to state 203

    $default  reduce using rule 20 (proc_decl)


State 141

   80 stmt: INTEGER COLON no_label_stmt •

    $default  reduce using rule 80 (stmt)


State 142

  114 proc_stmt: READ LP factor • RP

    RP  shift, and go to state 204


State 143

  116 proc_stmt: WRITE LP args_list • RP
  123 args_list: args_list • COMMA expression

    RP     shift, and go to state 205
    COMMA  shift, and go to state 206


State 144

  124 args_list: expression •
  125 expression: expression • GE expr
  126           | expression • GT expr
  127           | expression • LE expr
  128           | expression • LT expr
  129           | expression • EQUAL expr
  130           | expression • UNEQUAL expr

    EQUAL    shift, and go to state 165
    UNEQUAL  shift, and go to state 166
    GE       shift, and go to state 167
    GT       shift, and go to state 168
    LE       shift, and go to state 169
    LT       shift, and go to state 170

    $default  reduce using rule 124 (args_list)


State 145

  118 proc_stmt: WRITELN LP args_list • RP
  123 args_list: args_list • COMMA expression

    RP     shift, and go to state 207
    COMMA  shift, and go to state 206


State 146

  119 proc_stmt: MEMORYREAD LP args_list • RP
  123 args_list: args_list • COMMA expression

    RP     shift, and go to state 208
    COMMA  shift, and go to state 206


State 147

  120 proc_stmt: MEMORYWRITE LP args_list • RP
  123 args_list: args_list • COMMA expression

    RP     shift, and go to state 209
    COMMA  shift, and go to state 206


State 148

  121 proc_stmt: STACKREAD LP args_list • RP
  123 args_list: args_list • COMMA expression

    RP     shift, and go to state 210
    COMMA  shift, and go to state 206


State 149

  122 proc_stmt: STACKWRITE LP args_list • RP
  123 args_list: args_list • COMMA expression

    RP     shift, and go to state 211
    COMMA  shift, and go to state 206


State 150

  149 factor: ABS LP • args_list RP

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 92
    CHR         shift, and go to state 93
    ODD         shift, and go to state 94
    ORD         shift, and go to state 95
    PRED        shift, and go to state 96
    SUCC        shift, and go to state 97
    MINUS       shift, and go to state 98
    NOT         shift, and go to state 99
    LP          shift, and go to state 100

    const_value  go to state 101
    identifier   go to state 102
    args_list    go to state 212
    expression   go to state 144
    expr         go to state 104
    term         go to state 105
    factor       go to state 106


State 151

  150 factor: CHR LP • args_list RP

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 92
    CHR         shift, and go to state 93
    ODD         shift, and go to state 94
    ORD         shift, and go to state 95
    PRED        shift, and go to state 96
    SUCC        shift, and go to state 97
    MINUS       shift, and go to state 98
    NOT         shift, and go to state 99
    LP          shift, and go to state 100

    const_value  go to state 101
    identifier   go to state 102
    args_list    go to state 213
    expression   go to state 144
    expr         go to state 104
    term         go to state 105
    factor       go to state 106


State 152

  151 factor: ODD LP • args_list RP

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 92
    CHR         shift, and go to state 93
    ODD         shift, and go to state 94
    ORD         shift, and go to state 95
    PRED        shift, and go to state 96
    SUCC        shift, and go to state 97
    MINUS       shift, and go to state 98
    NOT         shift, and go to state 99
    LP          shift, and go to state 100

    const_value  go to state 101
    identifier   go to state 102
    args_list    go to state 214
    expression   go to state 144
    expr         go to state 104
    term         go to state 105
    factor       go to state 106


State 153

  152 factor: ORD LP • args_list RP

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 92
    CHR         shift, and go to state 93
    ODD         shift, and go to state 94
    ORD         shift, and go to state 95
    PRED        shift, and go to state 96
    SUCC        shift, and go to state 97
    MINUS       shift, and go to state 98
    NOT         shift, and go to state 99
    LP          shift, and go to state 100

    const_value  go to state 101
    identifier   go to state 102
    args_list    go to state 215
    expression   go to state 144
    expr         go to state 104
    term         go to state 105
    factor       go to state 106


State 154

  153 factor: PRED LP • args_list RP

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 92
    CHR         shift, and go to state 93
    ODD         shift, and go to state 94
    ORD         shift, and go to state 95
    PRED        shift, and go to state 96
    SUCC        shift, and go to state 97
    MINUS       shift, and go to state 98
    NOT         shift, and go to state 99
    LP          shift, and go to state 100

    const_value  go to state 101
    identifier   go to state 102
    args_list    go to state 216
    expression   go to state 144
    expr         go to state 104
    term         go to state 105
    factor       go to state 106


State 155

  154 factor: SUCC LP • args_list RP

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 92
    CHR         shift, and go to state 93
    ODD         shift, and go to state 94
    ORD         shift, and go to state 95
    PRED        shift, and go to state 96
    SUCC        shift, and go to state 97
    MINUS       shift, and go to state 98
    NOT         shift, and go to state 99
    LP          shift, and go to state 100

    const_value  go to state 101
    identifier   go to state 102
    args_list    go to state 217
    expression   go to state 144
    expr         go to state 104
    term         go to state 105
    factor       go to state 106


State 156

   40 const_value: INTEGER •
   41            | MINUS INTEGER •

    $end         reduce using rule 40 (const_value)
    $end         [reduce using rule 41 (const_value)]
    FUNCTION     reduce using rule 40 (const_value)
    FUNCTION     [reduce using rule 41 (const_value)]
    PROCEDURE    reduce using rule 40 (const_value)
    PROCEDURE    [reduce using rule 41 (const_value)]
    BBEGIN       reduce using rule 40 (const_value)
    BBEGIN       [reduce using rule 41 (const_value)]
    END          reduce using rule 40 (const_value)
    END          [reduce using rule 41 (const_value)]
    IDENT_NAME   reduce using rule 40 (const_value)
    IDENT_NAME   [reduce using rule 41 (const_value)]
    INTEGER      reduce using rule 40 (const_value)
    INTEGER      [reduce using rule 41 (const_value)]
    READ         reduce using rule 40 (const_value)
    READ         [reduce using rule 41 (const_value)]
    READLN       reduce using rule 40 (const_value)
    READLN       [reduce using rule 41 (const_value)]
    WRITE        reduce using rule 40 (const_value)
    WRITE        [reduce using rule 41 (const_value)]
    WRITELN      reduce using rule 40 (const_value)
    WRITELN      [reduce using rule 41 (const_value)]
    MEMORYREAD   reduce using rule 40 (const_value)
    MEMORYREAD   [reduce using rule 41 (const_value)]
    MEMORYWRITE  reduce using rule 40 (const_value)
    MEMORYWRITE  [reduce using rule 41 (const_value)]
    STACKREAD    reduce using rule 40 (const_value)
    STACKREAD    [reduce using rule 41 (const_value)]
    STACKWRITE   reduce using rule 40 (const_value)
    STACKWRITE   [reduce using rule 41 (const_value)]
    IF           reduce using rule 40 (const_value)
    IF           [reduce using rule 41 (const_value)]
    THEN         reduce using rule 40 (const_value)
    THEN         [reduce using rule 41 (const_value)]
    ELSE         reduce using rule 40 (const_value)
    ELSE         [reduce using rule 41 (const_value)]
    REPEAT       reduce using rule 40 (const_value)
    REPEAT       [reduce using rule 41 (const_value)]
    UNTIL        reduce using rule 40 (const_value)
    UNTIL        [reduce using rule 41 (const_value)]
    WHILE        reduce using rule 40 (const_value)
    WHILE        [reduce using rule 41 (const_value)]
    DO           reduce using rule 40 (const_value)
    DO           [reduce using rule 41 (const_value)]
    CASE         reduce using rule 40 (const_value)
    CASE         [reduce using rule 41 (const_value)]
    TO           reduce using rule 40 (const_value)
    TO           [reduce using rule 41 (const_value)]
    DOWNTO       reduce using rule 40 (const_value)
    DOWNTO       [reduce using rule 41 (const_value)]
    FOR          reduce using rule 40 (const_value)
    FOR          [reduce using rule 41 (const_value)]
    EQUAL        reduce using rule 40 (const_value)
    EQUAL        [reduce using rule 41 (const_value)]
    UNEQUAL      reduce using rule 40 (const_value)
    UNEQUAL      [reduce using rule 41 (const_value)]
    GE           reduce using rule 40 (const_value)
    GE           [reduce using rule 41 (const_value)]
    GT           reduce using rule 40 (const_value)
    GT           [reduce using rule 41 (const_value)]
    LE           reduce using rule 40 (const_value)
    LE           [reduce using rule 41 (const_value)]
    LT           reduce using rule 40 (const_value)
    LT           [reduce using rule 41 (const_value)]
    PLUS         reduce using rule 40 (const_value)
    PLUS         [reduce using rule 41 (const_value)]
    MINUS        reduce using rule 40 (const_value)
    MINUS        [reduce using rule 41 (const_value)]
    MUL          reduce using rule 40 (const_value)
    MUL          [reduce using rule 41 (const_value)]
    DIV          reduce using rule 40 (const_value)
    DIV          [reduce using rule 41 (const_value)]
    OR           reduce using rule 40 (const_value)
    OR           [reduce using rule 41 (const_value)]
    AND          reduce using rule 40 (const_value)
    AND          [reduce using rule 41 (const_value)]
    MOD          reduce using rule 40 (const_value)
    MOD          [reduce using rule 41 (const_value)]
    RB           reduce using rule 40 (const_value)
    RB           [reduce using rule 41 (const_value)]
    RP           reduce using rule 40 (const_value)
    RP           [reduce using rule 41 (const_value)]
    SEMICOLON    reduce using rule 40 (const_value)
    SEMICOLON    [reduce using rule 41 (const_value)]
    DOT          reduce using rule 40 (const_value)
    DOT          [reduce using rule 41 (const_value)]
    COMMA        reduce using rule 40 (const_value)
    COMMA        [reduce using rule 41 (const_value)]
    OF           reduce using rule 40 (const_value)
    OF           [reduce using rule 41 (const_value)]
    GOTO         reduce using rule 40 (const_value)
    GOTO         [reduce using rule 41 (const_value)]
    BREAK        reduce using rule 40 (const_value)
    BREAK        [reduce using rule 41 (const_value)]
    CONTINUE     reduce using rule 40 (const_value)
    CONTINUE     [reduce using rule 41 (const_value)]
    $default     reduce using rule 40 (const_value)


State 157

   46 const_value: MAXINT •
   47            | MINUS MAXINT •

    $end         reduce using rule 46 (const_value)
    $end         [reduce using rule 47 (const_value)]
    FUNCTION     reduce using rule 46 (const_value)
    FUNCTION     [reduce using rule 47 (const_value)]
    PROCEDURE    reduce using rule 46 (const_value)
    PROCEDURE    [reduce using rule 47 (const_value)]
    BBEGIN       reduce using rule 46 (const_value)
    BBEGIN       [reduce using rule 47 (const_value)]
    END          reduce using rule 46 (const_value)
    END          [reduce using rule 47 (const_value)]
    IDENT_NAME   reduce using rule 46 (const_value)
    IDENT_NAME   [reduce using rule 47 (const_value)]
    INTEGER      reduce using rule 46 (const_value)
    INTEGER      [reduce using rule 47 (const_value)]
    READ         reduce using rule 46 (const_value)
    READ         [reduce using rule 47 (const_value)]
    READLN       reduce using rule 46 (const_value)
    READLN       [reduce using rule 47 (const_value)]
    WRITE        reduce using rule 46 (const_value)
    WRITE        [reduce using rule 47 (const_value)]
    WRITELN      reduce using rule 46 (const_value)
    WRITELN      [reduce using rule 47 (const_value)]
    MEMORYREAD   reduce using rule 46 (const_value)
    MEMORYREAD   [reduce using rule 47 (const_value)]
    MEMORYWRITE  reduce using rule 46 (const_value)
    MEMORYWRITE  [reduce using rule 47 (const_value)]
    STACKREAD    reduce using rule 46 (const_value)
    STACKREAD    [reduce using rule 47 (const_value)]
    STACKWRITE   reduce using rule 46 (const_value)
    STACKWRITE   [reduce using rule 47 (const_value)]
    IF           reduce using rule 46 (const_value)
    IF           [reduce using rule 47 (const_value)]
    THEN         reduce using rule 46 (const_value)
    THEN         [reduce using rule 47 (const_value)]
    ELSE         reduce using rule 46 (const_value)
    ELSE         [reduce using rule 47 (const_value)]
    REPEAT       reduce using rule 46 (const_value)
    REPEAT       [reduce using rule 47 (const_value)]
    UNTIL        reduce using rule 46 (const_value)
    UNTIL        [reduce using rule 47 (const_value)]
    WHILE        reduce using rule 46 (const_value)
    WHILE        [reduce using rule 47 (const_value)]
    DO           reduce using rule 46 (const_value)
    DO           [reduce using rule 47 (const_value)]
    CASE         reduce using rule 46 (const_value)
    CASE         [reduce using rule 47 (const_value)]
    TO           reduce using rule 46 (const_value)
    TO           [reduce using rule 47 (const_value)]
    DOWNTO       reduce using rule 46 (const_value)
    DOWNTO       [reduce using rule 47 (const_value)]
    FOR          reduce using rule 46 (const_value)
    FOR          [reduce using rule 47 (const_value)]
    EQUAL        reduce using rule 46 (const_value)
    EQUAL        [reduce using rule 47 (const_value)]
    UNEQUAL      reduce using rule 46 (const_value)
    UNEQUAL      [reduce using rule 47 (const_value)]
    GE           reduce using rule 46 (const_value)
    GE           [reduce using rule 47 (const_value)]
    GT           reduce using rule 46 (const_value)
    GT           [reduce using rule 47 (const_value)]
    LE           reduce using rule 46 (const_value)
    LE           [reduce using rule 47 (const_value)]
    LT           reduce using rule 46 (const_value)
    LT           [reduce using rule 47 (const_value)]
    PLUS         reduce using rule 46 (const_value)
    PLUS         [reduce using rule 47 (const_value)]
    MINUS        reduce using rule 46 (const_value)
    MINUS        [reduce using rule 47 (const_value)]
    MUL          reduce using rule 46 (const_value)
    MUL          [reduce using rule 47 (const_value)]
    DIV          reduce using rule 46 (const_value)
    DIV          [reduce using rule 47 (const_value)]
    OR           reduce using rule 46 (const_value)
    OR           [reduce using rule 47 (const_value)]
    AND          reduce using rule 46 (const_value)
    AND          [reduce using rule 47 (const_value)]
    MOD          reduce using rule 46 (const_value)
    MOD          [reduce using rule 47 (const_value)]
    RB           reduce using rule 46 (const_value)
    RB           [reduce using rule 47 (const_value)]
    RP           reduce using rule 46 (const_value)
    RP           [reduce using rule 47 (const_value)]
    SEMICOLON    reduce using rule 46 (const_value)
    SEMICOLON    [reduce using rule 47 (const_value)]
    DOT          reduce using rule 46 (const_value)
    DOT          [reduce using rule 47 (const_value)]
    COMMA        reduce using rule 46 (const_value)
    COMMA        [reduce using rule 47 (const_value)]
    OF           reduce using rule 46 (const_value)
    OF           [reduce using rule 47 (const_value)]
    GOTO         reduce using rule 46 (const_value)
    GOTO         [reduce using rule 47 (const_value)]
    BREAK        reduce using rule 46 (const_value)
    BREAK        [reduce using rule 47 (const_value)]
    CONTINUE     reduce using rule 46 (const_value)
    CONTINUE     [reduce using rule 47 (const_value)]
    $default     reduce using rule 46 (const_value)


State 158

  146 factor: MINUS factor •

    $default  reduce using rule 146 (factor)


State 159

  145 factor: NOT factor •

    $default  reduce using rule 145 (factor)


State 160

  125 expression: expression • GE expr
  126           | expression • GT expr
  127           | expression • LE expr
  128           | expression • LT expr
  129           | expression • EQUAL expr
  130           | expression • UNEQUAL expr
  144 factor: LP expression • RP

    EQUAL    shift, and go to state 165
    UNEQUAL  shift, and go to state 166
    GE       shift, and go to state 167
    GT       shift, and go to state 168
    LE       shift, and go to state 169
    LT       shift, and go to state 170
    RP       shift, and go to state 218


State 161

  147 factor: identifier LB • expression RB

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 92
    CHR         shift, and go to state 93
    ODD         shift, and go to state 94
    ORD         shift, and go to state 95
    PRED        shift, and go to state 96
    SUCC        shift, and go to state 97
    MINUS       shift, and go to state 98
    NOT         shift, and go to state 99
    LP          shift, and go to state 100

    const_value  go to state 101
    identifier   go to state 102
    expression   go to state 219
    expr         go to state 104
    term         go to state 105
    factor       go to state 106


State 162

  142 factor: identifier LP • args_list RP

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 92
    CHR         shift, and go to state 93
    ODD         shift, and go to state 94
    ORD         shift, and go to state 95
    PRED        shift, and go to state 96
    SUCC        shift, and go to state 97
    MINUS       shift, and go to state 98
    NOT         shift, and go to state 99
    LP          shift, and go to state 100

    const_value  go to state 101
    identifier   go to state 102
    args_list    go to state 220
    expression   go to state 144
    expr         go to state 104
    term         go to state 105
    factor       go to state 106


State 163

  148 factor: identifier DOT • identifier

    IDENT_NAME  shift, and go to state 10

    identifier  go to state 221


State 164

   97 if_stmt: IF expression THEN • stmt else_clause

    BBEGIN       shift, and go to state 16
    IDENT_NAME   shift, and go to state 10
    INTEGER      shift, and go to state 39
    READ         shift, and go to state 40
    READLN       shift, and go to state 41
    WRITE        shift, and go to state 42
    WRITELN      shift, and go to state 43
    MEMORYREAD   shift, and go to state 44
    MEMORYWRITE  shift, and go to state 45
    STACKREAD    shift, and go to state 46
    STACKWRITE   shift, and go to state 47
    IF           shift, and go to state 48
    REPEAT       shift, and go to state 49
    WHILE        shift, and go to state 50
    CASE         shift, and go to state 51
    FOR          shift, and go to state 52
    GOTO         shift, and go to state 53
    BREAK        shift, and go to state 54
    CONTINUE     shift, and go to state 55

    BBEGIN       [reduce using rule 102 (repeat_stmt)]
    IDENT_NAME   [reduce using rule 102 (repeat_stmt)]
    INTEGER      [reduce using rule 102 (repeat_stmt)]
    READ         [reduce using rule 102 (repeat_stmt)]
    READLN       [reduce using rule 102 (repeat_stmt)]
    WRITE        [reduce using rule 102 (repeat_stmt)]
    WRITELN      [reduce using rule 102 (repeat_stmt)]
    MEMORYREAD   [reduce using rule 102 (repeat_stmt)]
    MEMORYWRITE  [reduce using rule 102 (repeat_stmt)]
    STACKREAD    [reduce using rule 102 (repeat_stmt)]
    STACKWRITE   [reduce using rule 102 (repeat_stmt)]
    IF           [reduce using rule 102 (repeat_stmt)]
    REPEAT       [reduce using rule 102 (repeat_stmt)]
    WHILE        [reduce using rule 102 (repeat_stmt)]
    CASE         [reduce using rule 102 (repeat_stmt)]
    FOR          [reduce using rule 102 (repeat_stmt)]
    GOTO         [reduce using rule 102 (repeat_stmt)]
    BREAK        [reduce using rule 102 (repeat_stmt)]
    CONTINUE     [reduce using rule 102 (repeat_stmt)]
    $default     reduce using rule 102 (repeat_stmt)

    identifier     go to state 56
    compound_stmt  go to state 57
    stmt           go to state 222
    no_label_stmt  go to state 59
    assign_stmt    go to state 60
    goto_stmt      go to state 61
    if_stmt        go to state 62
    repeat_stmt    go to state 63
    while_stmt     go to state 64
    case_stmt      go to state 65
    for_stmt       go to state 66
    proc_stmt      go to state 67


State 165

  129 expression: expression EQUAL • expr

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 92
    CHR         shift, and go to state 93
    ODD         shift, and go to state 94
    ORD         shift, and go to state 95
    PRED        shift, and go to state 96
    SUCC        shift, and go to state 97
    MINUS       shift, and go to state 98
    NOT         shift, and go to state 99
    LP          shift, and go to state 100

    const_value  go to state 101
    identifier   go to state 102
    expr         go to state 223
    term         go to state 105
    factor       go to state 106


State 166

  130 expression: expression UNEQUAL • expr

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 92
    CHR         shift, and go to state 93
    ODD         shift, and go to state 94
    ORD         shift, and go to state 95
    PRED        shift, and go to state 96
    SUCC        shift, and go to state 97
    MINUS       shift, and go to state 98
    NOT         shift, and go to state 99
    LP          shift, and go to state 100

    const_value  go to state 101
    identifier   go to state 102
    expr         go to state 224
    term         go to state 105
    factor       go to state 106


State 167

  125 expression: expression GE • expr

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 92
    CHR         shift, and go to state 93
    ODD         shift, and go to state 94
    ORD         shift, and go to state 95
    PRED        shift, and go to state 96
    SUCC        shift, and go to state 97
    MINUS       shift, and go to state 98
    NOT         shift, and go to state 99
    LP          shift, and go to state 100

    const_value  go to state 101
    identifier   go to state 102
    expr         go to state 225
    term         go to state 105
    factor       go to state 106


State 168

  126 expression: expression GT • expr

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 92
    CHR         shift, and go to state 93
    ODD         shift, and go to state 94
    ORD         shift, and go to state 95
    PRED        shift, and go to state 96
    SUCC        shift, and go to state 97
    MINUS       shift, and go to state 98
    NOT         shift, and go to state 99
    LP          shift, and go to state 100

    const_value  go to state 101
    identifier   go to state 102
    expr         go to state 226
    term         go to state 105
    factor       go to state 106


State 169

  127 expression: expression LE • expr

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 92
    CHR         shift, and go to state 93
    ODD         shift, and go to state 94
    ORD         shift, and go to state 95
    PRED        shift, and go to state 96
    SUCC        shift, and go to state 97
    MINUS       shift, and go to state 98
    NOT         shift, and go to state 99
    LP          shift, and go to state 100

    const_value  go to state 101
    identifier   go to state 102
    expr         go to state 227
    term         go to state 105
    factor       go to state 106


State 170

  128 expression: expression LT • expr

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 92
    CHR         shift, and go to state 93
    ODD         shift, and go to state 94
    ORD         shift, and go to state 95
    PRED        shift, and go to state 96
    SUCC        shift, and go to state 97
    MINUS       shift, and go to state 98
    NOT         shift, and go to state 99
    LP          shift, and go to state 100

    const_value  go to state 101
    identifier   go to state 102
    expr         go to state 228
    term         go to state 105
    factor       go to state 106


State 171

   98 if_stmt: IF expression stmt • else_clause

    ELSE  shift, and go to state 229

    ELSE      [reduce using rule 99 (else_clause)]
    $default  reduce using rule 99 (else_clause)

    else_clause  go to state 230


State 172

  132 expr: expr PLUS • term

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 92
    CHR         shift, and go to state 93
    ODD         shift, and go to state 94
    ORD         shift, and go to state 95
    PRED        shift, and go to state 96
    SUCC        shift, and go to state 97
    MINUS       shift, and go to state 98
    NOT         shift, and go to state 99
    LP          shift, and go to state 100

    const_value  go to state 101
    identifier   go to state 102
    term         go to state 231
    factor       go to state 106


State 173

  133 expr: expr MINUS • term

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 92
    CHR         shift, and go to state 93
    ODD         shift, and go to state 94
    ORD         shift, and go to state 95
    PRED        shift, and go to state 96
    SUCC        shift, and go to state 97
    MINUS       shift, and go to state 98
    NOT         shift, and go to state 99
    LP          shift, and go to state 100

    const_value  go to state 101
    identifier   go to state 102
    term         go to state 232
    factor       go to state 106


State 174

  134 expr: expr OR • term

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 92
    CHR         shift, and go to state 93
    ODD         shift, and go to state 94
    ORD         shift, and go to state 95
    PRED        shift, and go to state 96
    SUCC        shift, and go to state 97
    MINUS       shift, and go to state 98
    NOT         shift, and go to state 99
    LP          shift, and go to state 100

    const_value  go to state 101
    identifier   go to state 102
    term         go to state 233
    factor       go to state 106


State 175

  136 term: term MUL • factor

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 92
    CHR         shift, and go to state 93
    ODD         shift, and go to state 94
    ORD         shift, and go to state 95
    PRED        shift, and go to state 96
    SUCC        shift, and go to state 97
    MINUS       shift, and go to state 98
    NOT         shift, and go to state 99
    LP          shift, and go to state 100

    const_value  go to state 101
    identifier   go to state 102
    factor       go to state 234


State 176

  137 term: term DIV • factor

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 92
    CHR         shift, and go to state 93
    ODD         shift, and go to state 94
    ORD         shift, and go to state 95
    PRED        shift, and go to state 96
    SUCC        shift, and go to state 97
    MINUS       shift, and go to state 98
    NOT         shift, and go to state 99
    LP          shift, and go to state 100

    const_value  go to state 101
    identifier   go to state 102
    factor       go to state 235


State 177

  139 term: term AND • factor

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 92
    CHR         shift, and go to state 93
    ODD         shift, and go to state 94
    ORD         shift, and go to state 95
    PRED        shift, and go to state 96
    SUCC        shift, and go to state 97
    MINUS       shift, and go to state 98
    NOT         shift, and go to state 99
    LP          shift, and go to state 100

    const_value  go to state 101
    identifier   go to state 102
    factor       go to state 236


State 178

  138 term: term MOD • factor

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 92
    CHR         shift, and go to state 93
    ODD         shift, and go to state 94
    ORD         shift, and go to state 95
    PRED        shift, and go to state 96
    SUCC        shift, and go to state 97
    MINUS       shift, and go to state 98
    NOT         shift, and go to state 99
    LP          shift, and go to state 100

    const_value  go to state 101
    identifier   go to state 102
    factor       go to state 237


State 179

  101 repeat_stmt: REPEAT stmt_list UNTIL • expression

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 92
    CHR         shift, and go to state 93
    ODD         shift, and go to state 94
    ORD         shift, and go to state 95
    PRED        shift, and go to state 96
    SUCC        shift, and go to state 97
    MINUS       shift, and go to state 98
    NOT         shift, and go to state 99
    LP          shift, and go to state 100

    const_value  go to state 101
    identifier   go to state 102
    expression   go to state 238
    expr         go to state 104
    term         go to state 105
    factor       go to state 106


State 180

  103 while_stmt: WHILE expression DO • stmt

    BBEGIN       shift, and go to state 16
    IDENT_NAME   shift, and go to state 10
    INTEGER      shift, and go to state 39
    READ         shift, and go to state 40
    READLN       shift, and go to state 41
    WRITE        shift, and go to state 42
    WRITELN      shift, and go to state 43
    MEMORYREAD   shift, and go to state 44
    MEMORYWRITE  shift, and go to state 45
    STACKREAD    shift, and go to state 46
    STACKWRITE   shift, and go to state 47
    IF           shift, and go to state 48
    REPEAT       shift, and go to state 49
    WHILE        shift, and go to state 50
    CASE         shift, and go to state 51
    FOR          shift, and go to state 52
    GOTO         shift, and go to state 53
    BREAK        shift, and go to state 54
    CONTINUE     shift, and go to state 55

    BBEGIN       [reduce using rule 102 (repeat_stmt)]
    IDENT_NAME   [reduce using rule 102 (repeat_stmt)]
    INTEGER      [reduce using rule 102 (repeat_stmt)]
    READ         [reduce using rule 102 (repeat_stmt)]
    READLN       [reduce using rule 102 (repeat_stmt)]
    WRITE        [reduce using rule 102 (repeat_stmt)]
    WRITELN      [reduce using rule 102 (repeat_stmt)]
    MEMORYREAD   [reduce using rule 102 (repeat_stmt)]
    MEMORYWRITE  [reduce using rule 102 (repeat_stmt)]
    STACKREAD    [reduce using rule 102 (repeat_stmt)]
    STACKWRITE   [reduce using rule 102 (repeat_stmt)]
    IF           [reduce using rule 102 (repeat_stmt)]
    REPEAT       [reduce using rule 102 (repeat_stmt)]
    WHILE        [reduce using rule 102 (repeat_stmt)]
    CASE         [reduce using rule 102 (repeat_stmt)]
    FOR          [reduce using rule 102 (repeat_stmt)]
    GOTO         [reduce using rule 102 (repeat_stmt)]
    BREAK        [reduce using rule 102 (repeat_stmt)]
    CONTINUE     [reduce using rule 102 (repeat_stmt)]
    $default     reduce using rule 102 (repeat_stmt)

    identifier     go to state 56
    compound_stmt  go to state 57
    stmt           go to state 239
    no_label_stmt  go to state 59
    assign_stmt    go to state 60
    goto_stmt      go to state 61
    if_stmt        go to state 62
    repeat_stmt    go to state 63
    while_stmt     go to state 64
    case_stmt      go to state 65
    for_stmt       go to state 66
    proc_stmt      go to state 67


State 181

  104 case_stmt: CASE expression OF • case_expr_list END

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    MINUS       shift, and go to state 36
    OTHERWISE   shift, and go to state 240

    const_value     go to state 241
    identifier      go to state 242
    case_expr_list  go to state 243
    case_expr       go to state 244


State 182

  110 for_stmt: FOR identifier ASSIGN • expression TO expression DO stmt
  111         | FOR identifier ASSIGN • expression DOWNTO expression DO stmt

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 92
    CHR         shift, and go to state 93
    ODD         shift, and go to state 94
    ORD         shift, and go to state 95
    PRED        shift, and go to state 96
    SUCC        shift, and go to state 97
    MINUS       shift, and go to state 98
    NOT         shift, and go to state 99
    LP          shift, and go to state 100

    const_value  go to state 101
    identifier   go to state 102
    expression   go to state 245
    expr         go to state 104
    term         go to state 105
    factor       go to state 106


State 183

   93 assign_stmt: identifier ASSIGN expression •
  125 expression: expression • GE expr
  126           | expression • GT expr
  127           | expression • LE expr
  128           | expression • LT expr
  129           | expression • EQUAL expr
  130           | expression • UNEQUAL expr

    EQUAL    shift, and go to state 165
    UNEQUAL  shift, and go to state 166
    GE       shift, and go to state 167
    GT       shift, and go to state 168
    LE       shift, and go to state 169
    LT       shift, and go to state 170

    $default  reduce using rule 93 (assign_stmt)


State 184

   94 assign_stmt: identifier LB expression • RB ASSIGN expression
  125 expression: expression • GE expr
  126           | expression • GT expr
  127           | expression • LE expr
  128           | expression • LT expr
  129           | expression • EQUAL expr
  130           | expression • UNEQUAL expr

    EQUAL    shift, and go to state 165
    UNEQUAL  shift, and go to state 166
    GE       shift, and go to state 167
    GT       shift, and go to state 168
    LE       shift, and go to state 169
    LT       shift, and go to state 170
    RB       shift, and go to state 246


State 185

  113 proc_stmt: identifier LP args_list • RP
  123 args_list: args_list • COMMA expression

    RP     shift, and go to state 247
    COMMA  shift, and go to state 206


State 186

   95 assign_stmt: identifier DOT identifier • ASSIGN expression

    ASSIGN  shift, and go to state 248


State 187

   64 simple_type: LP name_list • RP
   71 name_list: name_list • COMMA identifier

    RP     shift, and go to state 249
    COMMA  shift, and go to state 131


State 188

   62 array_type_decl: ARRAY LB • simple_type RB OF type_decl

    IDENT_NAME     shift, and go to state 10
    INTEGER        shift, and go to state 30
    CHAR           shift, and go to state 31
    STRING         shift, and go to state 32
    TRUE           shift, and go to state 33
    FALSE          shift, and go to state 34
    MAXINT         shift, and go to state 35
    MINUS          shift, and go to state 36
    LP             shift, and go to state 117
    INT_TYPE       shift, and go to state 118
    UNSIGNED_TYPE  shift, and go to state 119
    BOOL_TYPE      shift, and go to state 120
    CHAR_TYPE      shift, and go to state 121

    const_value  go to state 124
    simple_type  go to state 250
    identifier   go to state 129


State 189

   57 record_type_decl: RECORD field_decl_list • END
   58 field_decl_list: field_decl_list • field_decl

    END         shift, and go to state 251
    IDENT_NAME  shift, and go to state 10

    field_decl  go to state 252
    name_list   go to state 191
    identifier  go to state 73


State 190

   59 field_decl_list: field_decl •

    $default  reduce using rule 59 (field_decl_list)


State 191

   60 field_decl: name_list • COLON type_decl SEMICOLON
   61           | name_list • COLON type_decl
   71 name_list: name_list • COMMA identifier

    COMMA  shift, and go to state 131
    COLON  shift, and go to state 253


State 192

   65 simple_type: const_value DOUBLEDOT • const_value

    INTEGER  shift, and go to state 30
    CHAR     shift, and go to state 31
    STRING   shift, and go to state 32
    TRUE     shift, and go to state 33
    FALSE    shift, and go to state 34
    MAXINT   shift, and go to state 35
    MINUS    shift, and go to state 36

    const_value  go to state 254


State 193

   52 type_def: identifier EQUAL type_decl SEMICOLON •

    $default  reduce using rule 52 (type_def)


State 194

   66 simple_type: identifier DOUBLEDOT • identifier

    IDENT_NAME  shift, and go to state 10

    identifier  go to state 255


State 195

   71 name_list: name_list COMMA identifier •

    $default  reduce using rule 71 (name_list)


State 196

   32 var_decl: name_list COLON type_decl • SEMICOLON
   33         | name_list COLON type_decl •

    SEMICOLON  shift, and go to state 256

    $default  reduce using rule 33 (var_decl)


State 197

   23 params: LP • params_decl RP

    VAR         shift, and go to state 257
    IDENT_NAME  shift, and go to state 10

    params_decl  go to state 258
    params_type  go to state 259
    name_list    go to state 260
    identifier   go to state 73


State 198

   16 fun_head: FUNCTION IDENT_NAME params • COLON simple_type

    COLON  shift, and go to state 261


State 199

   21 proc_head: PROCEDURE IDENT_NAME params •

    $default  reduce using rule 21 (proc_head)


State 200

   12 fun_decl: fun_head SEMICOLON routine • SEMICOLON
   13         | fun_head SEMICOLON routine •

    SEMICOLON  shift, and go to state 262

    $default  reduce using rule 13 (fun_decl)


State 201

   14 fun_decl: fun_head routine SEMICOLON •

    $default  reduce using rule 14 (fun_decl)


State 202

   17 proc_decl: proc_head SEMICOLON routine • SEMICOLON
   19          | proc_head SEMICOLON routine •

    SEMICOLON  shift, and go to state 263

    $default  reduce using rule 19 (proc_decl)


State 203

   18 proc_decl: proc_head routine SEMICOLON •

    $default  reduce using rule 18 (proc_decl)


State 204

  114 proc_stmt: READ LP factor RP •

    $default  reduce using rule 114 (proc_stmt)


State 205

  116 proc_stmt: WRITE LP args_list RP •

    $default  reduce using rule 116 (proc_stmt)


State 206

  123 args_list: args_list COMMA • expression

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 92
    CHR         shift, and go to state 93
    ODD         shift, and go to state 94
    ORD         shift, and go to state 95
    PRED        shift, and go to state 96
    SUCC        shift, and go to state 97
    MINUS       shift, and go to state 98
    NOT         shift, and go to state 99
    LP          shift, and go to state 100

    const_value  go to state 101
    identifier   go to state 102
    expression   go to state 264
    expr         go to state 104
    term         go to state 105
    factor       go to state 106


State 207

  118 proc_stmt: WRITELN LP args_list RP •

    $default  reduce using rule 118 (proc_stmt)


State 208

  119 proc_stmt: MEMORYREAD LP args_list RP •

    $default  reduce using rule 119 (proc_stmt)


State 209

  120 proc_stmt: MEMORYWRITE LP args_list RP •

    $default  reduce using rule 120 (proc_stmt)


State 210

  121 proc_stmt: STACKREAD LP args_list RP •

    $default  reduce using rule 121 (proc_stmt)


State 211

  122 proc_stmt: STACKWRITE LP args_list RP •

    $default  reduce using rule 122 (proc_stmt)


State 212

  123 args_list: args_list • COMMA expression
  149 factor: ABS LP args_list • RP

    RP     shift, and go to state 265
    COMMA  shift, and go to state 206


State 213

  123 args_list: args_list • COMMA expression
  150 factor: CHR LP args_list • RP

    RP     shift, and go to state 266
    COMMA  shift, and go to state 206


State 214

  123 args_list: args_list • COMMA expression
  151 factor: ODD LP args_list • RP

    RP     shift, and go to state 267
    COMMA  shift, and go to state 206


State 215

  123 args_list: args_list • COMMA expression
  152 factor: ORD LP args_list • RP

    RP     shift, and go to state 268
    COMMA  shift, and go to state 206


State 216

  123 args_list: args_list • COMMA expression
  153 factor: PRED LP args_list • RP

    RP     shift, and go to state 269
    COMMA  shift, and go to state 206


State 217

  123 args_list: args_list • COMMA expression
  154 factor: SUCC LP args_list • RP

    RP     shift, and go to state 270
    COMMA  shift, and go to state 206


State 218

  144 factor: LP expression RP •

    $default  reduce using rule 144 (factor)


State 219

  125 expression: expression • GE expr
  126           | expression • GT expr
  127           | expression • LE expr
  128           | expression • LT expr
  129           | expression • EQUAL expr
  130           | expression • UNEQUAL expr
  147 factor: identifier LB expression • RB

    EQUAL    shift, and go to state 165
    UNEQUAL  shift, and go to state 166
    GE       shift, and go to state 167
    GT       shift, and go to state 168
    LE       shift, and go to state 169
    LT       shift, and go to state 170
    RB       shift, and go to state 271


State 220

  123 args_list: args_list • COMMA expression
  142 factor: identifier LP args_list • RP

    RP     shift, and go to state 272
    COMMA  shift, and go to state 206


State 221

  148 factor: identifier DOT identifier •

    $default  reduce using rule 148 (factor)


State 222

   97 if_stmt: IF expression THEN stmt • else_clause

    ELSE  shift, and go to state 229

    ELSE      [reduce using rule 99 (else_clause)]
    $default  reduce using rule 99 (else_clause)

    else_clause  go to state 273


State 223

  129 expression: expression EQUAL expr •
  132 expr: expr • PLUS term
  133     | expr • MINUS term
  134     | expr • OR term

    PLUS   shift, and go to state 172
    MINUS  shift, and go to state 173
    OR     shift, and go to state 174

    $default  reduce using rule 129 (expression)


State 224

  130 expression: expression UNEQUAL expr •
  132 expr: expr • PLUS term
  133     | expr • MINUS term
  134     | expr • OR term

    PLUS   shift, and go to state 172
    MINUS  shift, and go to state 173
    OR     shift, and go to state 174

    $default  reduce using rule 130 (expression)


State 225

  125 expression: expression GE expr •
  132 expr: expr • PLUS term
  133     | expr • MINUS term
  134     | expr • OR term

    PLUS   shift, and go to state 172
    MINUS  shift, and go to state 173
    OR     shift, and go to state 174

    $default  reduce using rule 125 (expression)


State 226

  126 expression: expression GT expr •
  132 expr: expr • PLUS term
  133     | expr • MINUS term
  134     | expr • OR term

    PLUS   shift, and go to state 172
    MINUS  shift, and go to state 173
    OR     shift, and go to state 174

    $default  reduce using rule 126 (expression)


State 227

  127 expression: expression LE expr •
  132 expr: expr • PLUS term
  133     | expr • MINUS term
  134     | expr • OR term

    PLUS   shift, and go to state 172
    MINUS  shift, and go to state 173
    OR     shift, and go to state 174

    $default  reduce using rule 127 (expression)


State 228

  128 expression: expression LT expr •
  132 expr: expr • PLUS term
  133     | expr • MINUS term
  134     | expr • OR term

    PLUS   shift, and go to state 172
    MINUS  shift, and go to state 173
    OR     shift, and go to state 174

    $default  reduce using rule 128 (expression)


State 229

  100 else_clause: ELSE • stmt

    BBEGIN       shift, and go to state 16
    IDENT_NAME   shift, and go to state 10
    INTEGER      shift, and go to state 39
    READ         shift, and go to state 40
    READLN       shift, and go to state 41
    WRITE        shift, and go to state 42
    WRITELN      shift, and go to state 43
    MEMORYREAD   shift, and go to state 44
    MEMORYWRITE  shift, and go to state 45
    STACKREAD    shift, and go to state 46
    STACKWRITE   shift, and go to state 47
    IF           shift, and go to state 48
    REPEAT       shift, and go to state 49
    WHILE        shift, and go to state 50
    CASE         shift, and go to state 51
    FOR          shift, and go to state 52
    GOTO         shift, and go to state 53
    BREAK        shift, and go to state 54
    CONTINUE     shift, and go to state 55

    BBEGIN       [reduce using rule 102 (repeat_stmt)]
    IDENT_NAME   [reduce using rule 102 (repeat_stmt)]
    INTEGER      [reduce using rule 102 (repeat_stmt)]
    READ         [reduce using rule 102 (repeat_stmt)]
    READLN       [reduce using rule 102 (repeat_stmt)]
    WRITE        [reduce using rule 102 (repeat_stmt)]
    WRITELN      [reduce using rule 102 (repeat_stmt)]
    MEMORYREAD   [reduce using rule 102 (repeat_stmt)]
    MEMORYWRITE  [reduce using rule 102 (repeat_stmt)]
    STACKREAD    [reduce using rule 102 (repeat_stmt)]
    STACKWRITE   [reduce using rule 102 (repeat_stmt)]
    IF           [reduce using rule 102 (repeat_stmt)]
    REPEAT       [reduce using rule 102 (repeat_stmt)]
    WHILE        [reduce using rule 102 (repeat_stmt)]
    CASE         [reduce using rule 102 (repeat_stmt)]
    FOR          [reduce using rule 102 (repeat_stmt)]
    GOTO         [reduce using rule 102 (repeat_stmt)]
    BREAK        [reduce using rule 102 (repeat_stmt)]
    CONTINUE     [reduce using rule 102 (repeat_stmt)]
    $default     reduce using rule 102 (repeat_stmt)

    identifier     go to state 56
    compound_stmt  go to state 57
    stmt           go to state 274
    no_label_stmt  go to state 59
    assign_stmt    go to state 60
    goto_stmt      go to state 61
    if_stmt        go to state 62
    repeat_stmt    go to state 63
    while_stmt     go to state 64
    case_stmt      go to state 65
    for_stmt       go to state 66
    proc_stmt      go to state 67


State 230

   98 if_stmt: IF expression stmt else_clause •

    $default  reduce using rule 98 (if_stmt)


State 231

  132 expr: expr PLUS term •
  136 term: term • MUL factor
  137     | term • DIV factor
  138     | term • MOD factor
  139     | term • AND factor

    MUL  shift, and go to state 175
    DIV  shift, and go to state 176
    AND  shift, and go to state 177
    MOD  shift, and go to state 178

    $default  reduce using rule 132 (expr)


State 232

  133 expr: expr MINUS term •
  136 term: term • MUL factor
  137     | term • DIV factor
  138     | term • MOD factor
  139     | term • AND factor

    MUL  shift, and go to state 175
    DIV  shift, and go to state 176
    AND  shift, and go to state 177
    MOD  shift, and go to state 178

    $default  reduce using rule 133 (expr)


State 233

  134 expr: expr OR term •
  136 term: term • MUL factor
  137     | term • DIV factor
  138     | term • MOD factor
  139     | term • AND factor

    MUL  shift, and go to state 175
    DIV  shift, and go to state 176
    AND  shift, and go to state 177
    MOD  shift, and go to state 178

    $default  reduce using rule 134 (expr)


State 234

  136 term: term MUL factor •

    $default  reduce using rule 136 (term)


State 235

  137 term: term DIV factor •

    $default  reduce using rule 137 (term)


State 236

  139 term: term AND factor •

    $default  reduce using rule 139 (term)


State 237

  138 term: term MOD factor •

    $default  reduce using rule 138 (term)


State 238

  101 repeat_stmt: REPEAT stmt_list UNTIL expression •
  125 expression: expression • GE expr
  126           | expression • GT expr
  127           | expression • LE expr
  128           | expression • LT expr
  129           | expression • EQUAL expr
  130           | expression • UNEQUAL expr

    EQUAL    shift, and go to state 165
    UNEQUAL  shift, and go to state 166
    GE       shift, and go to state 167
    GT       shift, and go to state 168
    LE       shift, and go to state 169
    LT       shift, and go to state 170

    $default  reduce using rule 101 (repeat_stmt)


State 239

  103 while_stmt: WHILE expression DO stmt •

    $default  reduce using rule 103 (while_stmt)


State 240

  109 case_expr: OTHERWISE • stmt SEMICOLON

    BBEGIN       shift, and go to state 16
    IDENT_NAME   shift, and go to state 10
    INTEGER      shift, and go to state 39
    READ         shift, and go to state 40
    READLN       shift, and go to state 41
    WRITE        shift, and go to state 42
    WRITELN      shift, and go to state 43
    MEMORYREAD   shift, and go to state 44
    MEMORYWRITE  shift, and go to state 45
    STACKREAD    shift, and go to state 46
    STACKWRITE   shift, and go to state 47
    IF           shift, and go to state 48
    REPEAT       shift, and go to state 49
    WHILE        shift, and go to state 50
    CASE         shift, and go to state 51
    FOR          shift, and go to state 52
    GOTO         shift, and go to state 53
    BREAK        shift, and go to state 54
    CONTINUE     shift, and go to state 55

    $default  reduce using rule 102 (repeat_stmt)

    identifier     go to state 56
    compound_stmt  go to state 57
    stmt           go to state 275
    no_label_stmt  go to state 59
    assign_stmt    go to state 60
    goto_stmt      go to state 61
    if_stmt        go to state 62
    repeat_stmt    go to state 63
    while_stmt     go to state 64
    case_stmt      go to state 65
    for_stmt       go to state 66
    proc_stmt      go to state 67


State 241

  107 case_expr: const_value • COLON stmt SEMICOLON

    COLON  shift, and go to state 276


State 242

  108 case_expr: identifier • COLON stmt SEMICOLON

    COLON  shift, and go to state 277


State 243

  104 case_stmt: CASE expression OF case_expr_list • END
  105 case_expr_list: case_expr_list • case_expr

    END         shift, and go to state 278
    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    MINUS       shift, and go to state 36
    OTHERWISE   shift, and go to state 240

    const_value  go to state 241
    identifier   go to state 242
    case_expr    go to state 279


State 244

  106 case_expr_list: case_expr •

    $default  reduce using rule 106 (case_expr_list)


State 245

  110 for_stmt: FOR identifier ASSIGN expression • TO expression DO stmt
  111         | FOR identifier ASSIGN expression • DOWNTO expression DO stmt
  125 expression: expression • GE expr
  126           | expression • GT expr
  127           | expression • LE expr
  128           | expression • LT expr
  129           | expression • EQUAL expr
  130           | expression • UNEQUAL expr

    TO       shift, and go to state 280
    DOWNTO   shift, and go to state 281
    EQUAL    shift, and go to state 165
    UNEQUAL  shift, and go to state 166
    GE       shift, and go to state 167
    GT       shift, and go to state 168
    LE       shift, and go to state 169
    LT       shift, and go to state 170


State 246

   94 assign_stmt: identifier LB expression RB • ASSIGN expression

    ASSIGN  shift, and go to state 282


State 247

  113 proc_stmt: identifier LP args_list RP •

    $default  reduce using rule 113 (proc_stmt)


State 248

   95 assign_stmt: identifier DOT identifier ASSIGN • expression

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 92
    CHR         shift, and go to state 93
    ODD         shift, and go to state 94
    ORD         shift, and go to state 95
    PRED        shift, and go to state 96
    SUCC        shift, and go to state 97
    MINUS       shift, and go to state 98
    NOT         shift, and go to state 99
    LP          shift, and go to state 100

    const_value  go to state 101
    identifier   go to state 102
    expression   go to state 283
    expr         go to state 104
    term         go to state 105
    factor       go to state 106


State 249

   64 simple_type: LP name_list RP •

    $default  reduce using rule 64 (simple_type)


State 250

   62 array_type_decl: ARRAY LB simple_type • RB OF type_decl

    RB  shift, and go to state 284


State 251

   57 record_type_decl: RECORD field_decl_list END •

    $default  reduce using rule 57 (record_type_decl)


State 252

   58 field_decl_list: field_decl_list field_decl •

    $default  reduce using rule 58 (field_decl_list)


State 253

   60 field_decl: name_list COLON • type_decl SEMICOLON
   61           | name_list COLON • type_decl

    IDENT_NAME     shift, and go to state 10
    INTEGER        shift, and go to state 30
    CHAR           shift, and go to state 31
    STRING         shift, and go to state 32
    TRUE           shift, and go to state 33
    FALSE          shift, and go to state 34
    MAXINT         shift, and go to state 35
    MINUS          shift, and go to state 36
    LP             shift, and go to state 117
    INT_TYPE       shift, and go to state 118
    UNSIGNED_TYPE  shift, and go to state 119
    BOOL_TYPE      shift, and go to state 120
    CHAR_TYPE      shift, and go to state 121
    ARRAY          shift, and go to state 122
    RECORD         shift, and go to state 123

    const_value       go to state 124
    type_decl         go to state 285
    record_type_decl  go to state 126
    array_type_decl   go to state 127
    simple_type       go to state 128
    identifier        go to state 129


State 254

   65 simple_type: const_value DOUBLEDOT const_value •

    $default  reduce using rule 65 (simple_type)


State 255

   66 simple_type: identifier DOUBLEDOT identifier •

    $default  reduce using rule 66 (simple_type)


State 256

   32 var_decl: name_list COLON type_decl SEMICOLON •

    $default  reduce using rule 32 (var_decl)


State 257

   26 params_type: VAR • name_list COLON simple_type

    IDENT_NAME  shift, and go to state 10

    name_list   go to state 286
    identifier  go to state 73


State 258

   23 params: LP params_decl • RP
   24 params_decl: params_decl • SEMICOLON params_type

    RP         shift, and go to state 287
    SEMICOLON  shift, and go to state 288


State 259

   25 params_decl: params_type •

    $default  reduce using rule 25 (params_decl)


State 260

   27 params_type: name_list • COLON simple_type
   71 name_list: name_list • COMMA identifier

    COMMA  shift, and go to state 131
    COLON  shift, and go to state 289


State 261

   16 fun_head: FUNCTION IDENT_NAME params COLON • simple_type

    IDENT_NAME     shift, and go to state 10
    INTEGER        shift, and go to state 30
    CHAR           shift, and go to state 31
    STRING         shift, and go to state 32
    TRUE           shift, and go to state 33
    FALSE          shift, and go to state 34
    MAXINT         shift, and go to state 35
    MINUS          shift, and go to state 36
    LP             shift, and go to state 117
    INT_TYPE       shift, and go to state 118
    UNSIGNED_TYPE  shift, and go to state 119
    BOOL_TYPE      shift, and go to state 120
    CHAR_TYPE      shift, and go to state 121

    const_value  go to state 124
    simple_type  go to state 290
    identifier   go to state 129


State 262

   12 fun_decl: fun_head SEMICOLON routine SEMICOLON •

    $default  reduce using rule 12 (fun_decl)


State 263

   17 proc_decl: proc_head SEMICOLON routine SEMICOLON •

    $default  reduce using rule 17 (proc_decl)


State 264

  123 args_list: args_list COMMA expression •
  125 expression: expression • GE expr
  126           | expression • GT expr
  127           | expression • LE expr
  128           | expression • LT expr
  129           | expression • EQUAL expr
  130           | expression • UNEQUAL expr

    EQUAL    shift, and go to state 165
    UNEQUAL  shift, and go to state 166
    GE       shift, and go to state 167
    GT       shift, and go to state 168
    LE       shift, and go to state 169
    LT       shift, and go to state 170

    $default  reduce using rule 123 (args_list)


State 265

  149 factor: ABS LP args_list RP •

    $default  reduce using rule 149 (factor)


State 266

  150 factor: CHR LP args_list RP •

    $default  reduce using rule 150 (factor)


State 267

  151 factor: ODD LP args_list RP •

    $default  reduce using rule 151 (factor)


State 268

  152 factor: ORD LP args_list RP •

    $default  reduce using rule 152 (factor)


State 269

  153 factor: PRED LP args_list RP •

    $default  reduce using rule 153 (factor)


State 270

  154 factor: SUCC LP args_list RP •

    $default  reduce using rule 154 (factor)


State 271

  147 factor: identifier LB expression RB •

    $default  reduce using rule 147 (factor)


State 272

  142 factor: identifier LP args_list RP •

    $default  reduce using rule 142 (factor)


State 273

   97 if_stmt: IF expression THEN stmt else_clause •

    $default  reduce using rule 97 (if_stmt)


State 274

  100 else_clause: ELSE stmt •

    $default  reduce using rule 100 (else_clause)


State 275

  109 case_expr: OTHERWISE stmt • SEMICOLON

    SEMICOLON  shift, and go to state 291


State 276

  107 case_expr: const_value COLON • stmt SEMICOLON

    BBEGIN       shift, and go to state 16
    IDENT_NAME   shift, and go to state 10
    INTEGER      shift, and go to state 39
    READ         shift, and go to state 40
    READLN       shift, and go to state 41
    WRITE        shift, and go to state 42
    WRITELN      shift, and go to state 43
    MEMORYREAD   shift, and go to state 44
    MEMORYWRITE  shift, and go to state 45
    STACKREAD    shift, and go to state 46
    STACKWRITE   shift, and go to state 47
    IF           shift, and go to state 48
    REPEAT       shift, and go to state 49
    WHILE        shift, and go to state 50
    CASE         shift, and go to state 51
    FOR          shift, and go to state 52
    GOTO         shift, and go to state 53
    BREAK        shift, and go to state 54
    CONTINUE     shift, and go to state 55

    $default  reduce using rule 102 (repeat_stmt)

    identifier     go to state 56
    compound_stmt  go to state 57
    stmt           go to state 292
    no_label_stmt  go to state 59
    assign_stmt    go to state 60
    goto_stmt      go to state 61
    if_stmt        go to state 62
    repeat_stmt    go to state 63
    while_stmt     go to state 64
    case_stmt      go to state 65
    for_stmt       go to state 66
    proc_stmt      go to state 67


State 277

  108 case_expr: identifier COLON • stmt SEMICOLON

    BBEGIN       shift, and go to state 16
    IDENT_NAME   shift, and go to state 10
    INTEGER      shift, and go to state 39
    READ         shift, and go to state 40
    READLN       shift, and go to state 41
    WRITE        shift, and go to state 42
    WRITELN      shift, and go to state 43
    MEMORYREAD   shift, and go to state 44
    MEMORYWRITE  shift, and go to state 45
    STACKREAD    shift, and go to state 46
    STACKWRITE   shift, and go to state 47
    IF           shift, and go to state 48
    REPEAT       shift, and go to state 49
    WHILE        shift, and go to state 50
    CASE         shift, and go to state 51
    FOR          shift, and go to state 52
    GOTO         shift, and go to state 53
    BREAK        shift, and go to state 54
    CONTINUE     shift, and go to state 55

    $default  reduce using rule 102 (repeat_stmt)

    identifier     go to state 56
    compound_stmt  go to state 57
    stmt           go to state 293
    no_label_stmt  go to state 59
    assign_stmt    go to state 60
    goto_stmt      go to state 61
    if_stmt        go to state 62
    repeat_stmt    go to state 63
    while_stmt     go to state 64
    case_stmt      go to state 65
    for_stmt       go to state 66
    proc_stmt      go to state 67


State 278

  104 case_stmt: CASE expression OF case_expr_list END •

    $default  reduce using rule 104 (case_stmt)


State 279

  105 case_expr_list: case_expr_list case_expr •

    $default  reduce using rule 105 (case_expr_list)


State 280

  110 for_stmt: FOR identifier ASSIGN expression TO • expression DO stmt

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 92
    CHR         shift, and go to state 93
    ODD         shift, and go to state 94
    ORD         shift, and go to state 95
    PRED        shift, and go to state 96
    SUCC        shift, and go to state 97
    MINUS       shift, and go to state 98
    NOT         shift, and go to state 99
    LP          shift, and go to state 100

    const_value  go to state 101
    identifier   go to state 102
    expression   go to state 294
    expr         go to state 104
    term         go to state 105
    factor       go to state 106


State 281

  111 for_stmt: FOR identifier ASSIGN expression DOWNTO • expression DO stmt

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 92
    CHR         shift, and go to state 93
    ODD         shift, and go to state 94
    ORD         shift, and go to state 95
    PRED        shift, and go to state 96
    SUCC        shift, and go to state 97
    MINUS       shift, and go to state 98
    NOT         shift, and go to state 99
    LP          shift, and go to state 100

    const_value  go to state 101
    identifier   go to state 102
    expression   go to state 295
    expr         go to state 104
    term         go to state 105
    factor       go to state 106


State 282

   94 assign_stmt: identifier LB expression RB ASSIGN • expression

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 92
    CHR         shift, and go to state 93
    ODD         shift, and go to state 94
    ORD         shift, and go to state 95
    PRED        shift, and go to state 96
    SUCC        shift, and go to state 97
    MINUS       shift, and go to state 98
    NOT         shift, and go to state 99
    LP          shift, and go to state 100

    const_value  go to state 101
    identifier   go to state 102
    expression   go to state 296
    expr         go to state 104
    term         go to state 105
    factor       go to state 106


State 283

   95 assign_stmt: identifier DOT identifier ASSIGN expression •
  125 expression: expression • GE expr
  126           | expression • GT expr
  127           | expression • LE expr
  128           | expression • LT expr
  129           | expression • EQUAL expr
  130           | expression • UNEQUAL expr

    EQUAL    shift, and go to state 165
    UNEQUAL  shift, and go to state 166
    GE       shift, and go to state 167
    GT       shift, and go to state 168
    LE       shift, and go to state 169
    LT       shift, and go to state 170

    $default  reduce using rule 95 (assign_stmt)


State 284

   62 array_type_decl: ARRAY LB simple_type RB • OF type_decl

    OF  shift, and go to state 297


State 285

   60 field_decl: name_list COLON type_decl • SEMICOLON
   61           | name_list COLON type_decl •

    SEMICOLON  shift, and go to state 298

    $default  reduce using rule 61 (field_decl)


State 286

   26 params_type: VAR name_list • COLON simple_type
   71 name_list: name_list • COMMA identifier

    COMMA  shift, and go to state 131
    COLON  shift, and go to state 299


State 287

   23 params: LP params_decl RP •

    $default  reduce using rule 23 (params)


State 288

   24 params_decl: params_decl SEMICOLON • params_type

    VAR         shift, and go to state 257
    IDENT_NAME  shift, and go to state 10

    params_type  go to state 300
    name_list    go to state 260
    identifier   go to state 73


State 289

   27 params_type: name_list COLON • simple_type

    IDENT_NAME     shift, and go to state 10
    INTEGER        shift, and go to state 30
    CHAR           shift, and go to state 31
    STRING         shift, and go to state 32
    TRUE           shift, and go to state 33
    FALSE          shift, and go to state 34
    MAXINT         shift, and go to state 35
    MINUS          shift, and go to state 36
    LP             shift, and go to state 117
    INT_TYPE       shift, and go to state 118
    UNSIGNED_TYPE  shift, and go to state 119
    BOOL_TYPE      shift, and go to state 120
    CHAR_TYPE      shift, and go to state 121

    const_value  go to state 124
    simple_type  go to state 301
    identifier   go to state 129


State 290

   16 fun_head: FUNCTION IDENT_NAME params COLON simple_type •

    $default  reduce using rule 16 (fun_head)


State 291

  109 case_expr: OTHERWISE stmt SEMICOLON •

    $default  reduce using rule 109 (case_expr)


State 292

  107 case_expr: const_value COLON stmt • SEMICOLON

    SEMICOLON  shift, and go to state 302


State 293

  108 case_expr: identifier COLON stmt • SEMICOLON

    SEMICOLON  shift, and go to state 303


State 294

  110 for_stmt: FOR identifier ASSIGN expression TO expression • DO stmt
  125 expression: expression • GE expr
  126           | expression • GT expr
  127           | expression • LE expr
  128           | expression • LT expr
  129           | expression • EQUAL expr
  130           | expression • UNEQUAL expr

    DO       shift, and go to state 304
    EQUAL    shift, and go to state 165
    UNEQUAL  shift, and go to state 166
    GE       shift, and go to state 167
    GT       shift, and go to state 168
    LE       shift, and go to state 169
    LT       shift, and go to state 170


State 295

  111 for_stmt: FOR identifier ASSIGN expression DOWNTO expression • DO stmt
  125 expression: expression • GE expr
  126           | expression • GT expr
  127           | expression • LE expr
  128           | expression • LT expr
  129           | expression • EQUAL expr
  130           | expression • UNEQUAL expr

    DO       shift, and go to state 305
    EQUAL    shift, and go to state 165
    UNEQUAL  shift, and go to state 166
    GE       shift, and go to state 167
    GT       shift, and go to state 168
    LE       shift, and go to state 169
    LT       shift, and go to state 170


State 296

   94 assign_stmt: identifier LB expression RB ASSIGN expression •
  125 expression: expression • GE expr
  126           | expression • GT expr
  127           | expression • LE expr
  128           | expression • LT expr
  129           | expression • EQUAL expr
  130           | expression • UNEQUAL expr

    EQUAL    shift, and go to state 165
    UNEQUAL  shift, and go to state 166
    GE       shift, and go to state 167
    GT       shift, and go to state 168
    LE       shift, and go to state 169
    LT       shift, and go to state 170

    $default  reduce using rule 94 (assign_stmt)


State 297

   62 array_type_decl: ARRAY LB simple_type RB OF • type_decl

    IDENT_NAME     shift, and go to state 10
    INTEGER        shift, and go to state 30
    CHAR           shift, and go to state 31
    STRING         shift, and go to state 32
    TRUE           shift, and go to state 33
    FALSE          shift, and go to state 34
    MAXINT         shift, and go to state 35
    MINUS          shift, and go to state 36
    LP             shift, and go to state 117
    INT_TYPE       shift, and go to state 118
    UNSIGNED_TYPE  shift, and go to state 119
    BOOL_TYPE      shift, and go to state 120
    CHAR_TYPE      shift, and go to state 121
    ARRAY          shift, and go to state 122
    RECORD         shift, and go to state 123

    const_value       go to state 124
    type_decl         go to state 306
    record_type_decl  go to state 126
    array_type_decl   go to state 127
    simple_type       go to state 128
    identifier        go to state 129


State 298

   60 field_decl: name_list COLON type_decl SEMICOLON •

    $default  reduce using rule 60 (field_decl)


State 299

   26 params_type: VAR name_list COLON • simple_type

    IDENT_NAME     shift, and go to state 10
    INTEGER        shift, and go to state 30
    CHAR           shift, and go to state 31
    STRING         shift, and go to state 32
    TRUE           shift, and go to state 33
    FALSE          shift, and go to state 34
    MAXINT         shift, and go to state 35
    MINUS          shift, and go to state 36
    LP             shift, and go to state 117
    INT_TYPE       shift, and go to state 118
    UNSIGNED_TYPE  shift, and go to state 119
    BOOL_TYPE      shift, and go to state 120
    CHAR_TYPE      shift, and go to state 121

    const_value  go to state 124
    simple_type  go to state 307
    identifier   go to state 129


State 300

   24 params_decl: params_decl SEMICOLON params_type •

    $default  reduce using rule 24 (params_decl)


State 301

   27 params_type: name_list COLON simple_type •

    $default  reduce using rule 27 (params_type)


State 302

  107 case_expr: const_value COLON stmt SEMICOLON •

    $default  reduce using rule 107 (case_expr)


State 303

  108 case_expr: identifier COLON stmt SEMICOLON •

    $default  reduce using rule 108 (case_expr)


State 304

  110 for_stmt: FOR identifier ASSIGN expression TO expression DO • stmt

    BBEGIN       shift, and go to state 16
    IDENT_NAME   shift, and go to state 10
    INTEGER      shift, and go to state 39
    READ         shift, and go to state 40
    READLN       shift, and go to state 41
    WRITE        shift, and go to state 42
    WRITELN      shift, and go to state 43
    MEMORYREAD   shift, and go to state 44
    MEMORYWRITE  shift, and go to state 45
    STACKREAD    shift, and go to state 46
    STACKWRITE   shift, and go to state 47
    IF           shift, and go to state 48
    REPEAT       shift, and go to state 49
    WHILE        shift, and go to state 50
    CASE         shift, and go to state 51
    FOR          shift, and go to state 52
    GOTO         shift, and go to state 53
    BREAK        shift, and go to state 54
    CONTINUE     shift, and go to state 55

    BBEGIN       [reduce using rule 102 (repeat_stmt)]
    IDENT_NAME   [reduce using rule 102 (repeat_stmt)]
    INTEGER      [reduce using rule 102 (repeat_stmt)]
    READ         [reduce using rule 102 (repeat_stmt)]
    READLN       [reduce using rule 102 (repeat_stmt)]
    WRITE        [reduce using rule 102 (repeat_stmt)]
    WRITELN      [reduce using rule 102 (repeat_stmt)]
    MEMORYREAD   [reduce using rule 102 (repeat_stmt)]
    MEMORYWRITE  [reduce using rule 102 (repeat_stmt)]
    STACKREAD    [reduce using rule 102 (repeat_stmt)]
    STACKWRITE   [reduce using rule 102 (repeat_stmt)]
    IF           [reduce using rule 102 (repeat_stmt)]
    REPEAT       [reduce using rule 102 (repeat_stmt)]
    WHILE        [reduce using rule 102 (repeat_stmt)]
    CASE         [reduce using rule 102 (repeat_stmt)]
    FOR          [reduce using rule 102 (repeat_stmt)]
    GOTO         [reduce using rule 102 (repeat_stmt)]
    BREAK        [reduce using rule 102 (repeat_stmt)]
    CONTINUE     [reduce using rule 102 (repeat_stmt)]
    $default     reduce using rule 102 (repeat_stmt)

    identifier     go to state 56
    compound_stmt  go to state 57
    stmt           go to state 308
    no_label_stmt  go to state 59
    assign_stmt    go to state 60
    goto_stmt      go to state 61
    if_stmt        go to state 62
    repeat_stmt    go to state 63
    while_stmt     go to state 64
    case_stmt      go to state 65
    for_stmt       go to state 66
    proc_stmt      go to state 67


State 305

  111 for_stmt: FOR identifier ASSIGN expression DOWNTO expression DO • stmt

    BBEGIN       shift, and go to state 16
    IDENT_NAME   shift, and go to state 10
    INTEGER      shift, and go to state 39
    READ         shift, and go to state 40
    READLN       shift, and go to state 41
    WRITE        shift, and go to state 42
    WRITELN      shift, and go to state 43
    MEMORYREAD   shift, and go to state 44
    MEMORYWRITE  shift, and go to state 45
    STACKREAD    shift, and go to state 46
    STACKWRITE   shift, and go to state 47
    IF           shift, and go to state 48
    REPEAT       shift, and go to state 49
    WHILE        shift, and go to state 50
    CASE         shift, and go to state 51
    FOR          shift, and go to state 52
    GOTO         shift, and go to state 53
    BREAK        shift, and go to state 54
    CONTINUE     shift, and go to state 55

    BBEGIN       [reduce using rule 102 (repeat_stmt)]
    IDENT_NAME   [reduce using rule 102 (repeat_stmt)]
    INTEGER      [reduce using rule 102 (repeat_stmt)]
    READ         [reduce using rule 102 (repeat_stmt)]
    READLN       [reduce using rule 102 (repeat_stmt)]
    WRITE        [reduce using rule 102 (repeat_stmt)]
    WRITELN      [reduce using rule 102 (repeat_stmt)]
    MEMORYREAD   [reduce using rule 102 (repeat_stmt)]
    MEMORYWRITE  [reduce using rule 102 (repeat_stmt)]
    STACKREAD    [reduce using rule 102 (repeat_stmt)]
    STACKWRITE   [reduce using rule 102 (repeat_stmt)]
    IF           [reduce using rule 102 (repeat_stmt)]
    REPEAT       [reduce using rule 102 (repeat_stmt)]
    WHILE        [reduce using rule 102 (repeat_stmt)]
    CASE         [reduce using rule 102 (repeat_stmt)]
    FOR          [reduce using rule 102 (repeat_stmt)]
    GOTO         [reduce using rule 102 (repeat_stmt)]
    BREAK        [reduce using rule 102 (repeat_stmt)]
    CONTINUE     [reduce using rule 102 (repeat_stmt)]
    $default     reduce using rule 102 (repeat_stmt)

    identifier     go to state 56
    compound_stmt  go to state 57
    stmt           go to state 309
    no_label_stmt  go to state 59
    assign_stmt    go to state 60
    goto_stmt      go to state 61
    if_stmt        go to state 62
    repeat_stmt    go to state 63
    while_stmt     go to state 64
    case_stmt      go to state 65
    for_stmt       go to state 66
    proc_stmt      go to state 67


State 306

   62 array_type_decl: ARRAY LB simple_type RB OF type_decl •

    $default  reduce using rule 62 (array_type_decl)


State 307

   26 params_type: VAR name_list COLON simple_type •

    $default  reduce using rule 26 (params_type)


State 308

  110 for_stmt: FOR identifier ASSIGN expression TO expression DO stmt •

    $default  reduce using rule 110 (for_stmt)


State 309

  111 for_stmt: FOR identifier ASSIGN expression DOWNTO expression DO stmt •

    $default  reduce using rule 111 (for_stmt)
