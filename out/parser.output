Terminals unused in grammar

    BOOLEAN
    ERROR


State 24 conflicts: 20 shift/reduce, 27 reduce/reduce
State 29 conflicts: 2 shift/reduce
State 56 conflicts: 1 shift/reduce
State 58 conflicts: 1 shift/reduce
State 84 conflicts: 18 shift/reduce
State 102 conflicts: 1 shift/reduce
State 103 conflicts: 19 shift/reduce
State 107 conflicts: 20 shift/reduce
State 155 conflicts: 48 reduce/reduce
State 156 conflicts: 48 reduce/reduce
State 163 conflicts: 19 shift/reduce
State 170 conflicts: 1 shift/reduce
State 179 conflicts: 19 shift/reduce
State 220 conflicts: 1 shift/reduce
State 227 conflicts: 19 shift/reduce
State 302 conflicts: 19 shift/reduce
State 303 conflicts: 19 shift/reduce


Grammar

    0 $accept: program $end

    1 program: PROGRAM IDENT_NAME SEMICOLON routine DOT
    2        | PROGRAM IDENT_NAME SEMICOLON routine
    3        | PROGRAM IDENT_NAME routine DOT
    4        | PROGRAM IDENT_NAME routine

    5 routine: routine_head routine_body

    6 routine_head: const_part type_part var_part routine_part

    7 routine_part: ε
    8             | routine_part fun_decl
    9             | routine_part proc_decl
   10             | fun_decl
   11             | proc_decl

   12 fun_decl: fun_head SEMICOLON routine SEMICOLON
   13         | fun_head SEMICOLON routine
   14         | fun_head routine SEMICOLON
   15         | fun_head routine

   16 fun_head: FUNCTION IDENT_NAME params COLON simple_type

   17 proc_decl: proc_head SEMICOLON routine SEMICOLON

   18 proc_head: PROCEDURE IDENT_NAME params

   19 params: ε
   20       | LP params_decl RP

   21 params_decl: params_decl SEMICOLON params_type
   22            | params_type

   23 params_type: VAR name_list COLON simple_type
   24            | name_list COLON simple_type

   25 var_part: ε
   26         | VAR var_decl_list

   27 var_decl_list: var_decl_list var_decl
   28              | var_decl

   29 var_decl: name_list COLON type_decl SEMICOLON
   30         | name_list COLON type_decl

   31 const_part: ε
   32           | CONST const_expr_list

   33 const_expr_list: const_expr_list const_expr
   34                | const_expr

   35 const_expr: identifier EQUAL const_value SEMICOLON
   36           | identifier EQUAL const_value

   37 const_value: INTEGER
   38            | MINUS INTEGER
   39            | CHAR
   40            | STRING
   41            | TRUE
   42            | FALSE
   43            | MAXINT
   44            | MINUS MAXINT

   45 type_part: ε
   46          | TYPE type_decl_list

   47 type_decl_list: type_decl_list type_def
   48               | type_def

   49 type_def: identifier EQUAL type_decl SEMICOLON
   50         | identifier EQUAL type_decl

   51 type_decl: simple_type
   52          | array_type_decl
   53          | record_type_decl

   54 record_type_decl: RECORD field_decl_list END

   55 field_decl_list: field_decl_list field_decl
   56                | field_decl

   57 field_decl: name_list COLON type_decl SEMICOLON
   58           | name_list COLON type_decl

   59 array_type_decl: ARRAY LB simple_type RB OF type_decl

   60 simple_type: identifier
   61            | LP name_list RP
   62            | const_value DOUBLEDOT const_value
   63            | identifier DOUBLEDOT identifier
   64            | INT_TYPE
   65            | UNSIGNED_TYPE
   66            | BOOL_TYPE
   67            | CHAR_TYPE

   68 name_list: name_list COMMA identifier
   69          | identifier

   70 identifier: IDENT_NAME

   71 routine_body: compound_stmt

   72 compound_stmt: BBEGIN stmt_list END
   73              | BBEGIN stmt_list

   74 stmt_list: ε
   75          | stmt_list stmt SEMICOLON
   76          | stmt_list stmt

   77 stmt: INTEGER COLON no_label_stmt
   78     | no_label_stmt

   79 no_label_stmt: assign_stmt
   80              | compound_stmt
   81              | goto_stmt
   82              | if_stmt
   83              | repeat_stmt
   84              | while_stmt
   85              | case_stmt
   86              | for_stmt
   87              | proc_stmt
   88              | BREAK
   89              | CONTINUE

   90 assign_stmt: identifier ASSIGN expression
   91            | identifier LB expression RB ASSIGN expression
   92            | identifier DOT identifier ASSIGN expression

   93 goto_stmt: GOTO INTEGER

   94 if_stmt: IF expression THEN stmt else_clause
   95        | IF expression stmt else_clause

   96 else_clause: ε
   97            | ELSE stmt

   98 repeat_stmt: REPEAT stmt_list UNTIL expression
   99            | ε

  100 while_stmt: WHILE expression DO stmt

  101 case_stmt: CASE expression OF case_expr_list END

  102 case_expr_list: case_expr_list case_expr
  103               | case_expr

  104 case_expr: const_value COLON stmt SEMICOLON
  105          | identifier COLON stmt SEMICOLON
  106          | OTHERWISE stmt SEMICOLON

  107 for_stmt: FOR identifier ASSIGN expression TO expression DO stmt
  108         | FOR identifier ASSIGN expression DOWNTO expression DO stmt

  109 proc_stmt: identifier
  110          | identifier LP args_list RP
  111          | READ LP factor RP
  112          | READLN
  113          | WRITE LP args_list RP
  114          | WRITELN
  115          | WRITELN LP args_list RP
  116          | MEMORYREAD LP args_list RP
  117          | MEMORYWRITE LP args_list RP
  118          | STACKREAD LP args_list RP
  119          | STACKWRITE LP args_list RP

  120 args_list: args_list COMMA expression
  121          | expression

  122 expression: expression GE expr
  123           | expression GT expr
  124           | expression LE expr
  125           | expression LT expr
  126           | expression EQUAL expr
  127           | expression UNEQUAL expr
  128           | expr

  129 expr: expr PLUS term
  130     | expr MINUS term
  131     | expr OR term
  132     | term

  133 term: term MUL factor
  134     | term DIV factor
  135     | term MOD factor
  136     | term AND factor
  137     | factor

  138 factor: identifier
  139       | identifier LP args_list RP
  140       | const_value
  141       | LP expression RP
  142       | NOT factor
  143       | MINUS factor
  144       | identifier LB expression RB
  145       | identifier DOT identifier
  146       | ABS LP args_list RP
  147       | CHR LP args_list RP
  148       | ODD LP args_list RP
  149       | ORD LP args_list RP
  150       | PRED LP args_list RP
  151       | SUCC LP args_list RP


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    PROGRAM <token> (258) 1 2 3 4
    FUNCTION <token> (259) 16
    PROCEDURE <token> (260) 18
    CONST <token> (261) 32
    TYPE <token> (262) 46
    VAR <token> (263) 23 26
    BBEGIN <token> (264) 72 73
    END <token> (265) 54 72 101
    IDENT_NAME <token> (266) 1 2 3 4 16 18 70
    INTEGER <token> (267) 37 38 77 93
    BOOLEAN <token> (268)
    CHAR <token> (269) 39
    STRING <token> (270) 40
    TRUE <token> (271) 41
    FALSE <token> (272) 42
    MAXINT <token> (273) 43 44
    READ <token> (274) 111
    READLN <token> (275) 112
    WRITE <token> (276) 113
    WRITELN <token> (277) 114 115
    MEMORYREAD <token> (278) 116
    MEMORYWRITE <token> (279) 117
    STACKREAD <token> (280) 118
    STACKWRITE <token> (281) 119
    ABS <token> (282) 146
    CHR <token> (283) 147
    ODD <token> (284) 148
    ORD <token> (285) 149
    PRED <token> (286) 150
    SUCC <token> (287) 151
    IF <token> (288) 94 95
    THEN <token> (289) 94
    ELSE <token> (290) 97
    REPEAT <token> (291) 98
    UNTIL <token> (292) 98
    WHILE <token> (293) 100
    DO <token> (294) 100 107 108
    CASE <token> (295) 101
    TO <token> (296) 107
    DOWNTO <token> (297) 108
    FOR <token> (298) 107 108
    EQUAL <token> (299) 35 36 49 50 126
    UNEQUAL <token> (300) 127
    GE <token> (301) 122
    GT <token> (302) 123
    LE <token> (303) 124
    LT <token> (304) 125
    ASSIGN <token> (305) 90 91 92 107 108
    PLUS <token> (306) 129
    MINUS <token> (307) 38 44 130 143
    MUL <token> (308) 133
    DIV <token> (309) 134
    OR <token> (310) 131
    AND <token> (311) 136
    NOT <token> (312) 142
    MOD <token> (313) 135
    LB <token> (314) 59 91 144
    RB <token> (315) 59 91 144
    LP <token> (316) 20 61 110 111 113 115 116 117 118 119 139 141 146 147 148 149 150 151
    RP <token> (317) 20 61 110 111 113 115 116 117 118 119 139 141 146 147 148 149 150 151
    SEMICOLON <token> (318) 1 2 12 13 14 17 21 29 35 49 57 75 104 105 106
    DOT <token> (319) 1 3 92 145
    DOUBLEDOT <token> (320) 62 63
    COMMA <token> (321) 68 120
    COLON <token> (322) 16 23 24 29 30 57 58 77 104 105
    INT_TYPE <token> (323) 64
    UNSIGNED_TYPE <token> (324) 65
    BOOL_TYPE <token> (325) 66
    CHAR_TYPE <token> (326) 67
    ARRAY <token> (327) 59
    OF <token> (328) 59 101
    RECORD <token> (329) 54
    GOTO <token> (330) 93
    BREAK <token> (331) 88
    CONTINUE <token> (332) 89
    OTHERWISE (333) 106
    ERROR <token> (334)


Nonterminals, with rules where they appear

    $accept (80)
        on left: 0
    program <programNode> (81)
        on left: 1 2 3 4
        on right: 0
    routine <routineNode> (82)
        on left: 5
        on right: 1 2 3 4 12 13 14 15 17
    routine_head <routineHeadNode> (83)
        on left: 6
        on right: 5
    routine_part <routinePartList> (84)
        on left: 7 8 9 10 11
        on right: 6 8 9
    fun_decl <routineDeclarationNode> (85)
        on left: 12 13 14 15
        on right: 8 10
    fun_head <routineDeclarationNode> (86)
        on left: 16
        on right: 12 13 14 15
    proc_decl <routineDeclarationNode> (87)
        on left: 17
        on right: 9 11
    proc_head <routineDeclarationNode> (88)
        on left: 18
        on right: 17
    params <paramsNode> (89)
        on left: 19 20
        on right: 16 18
    params_decl <paramsGroupList> (90)
        on left: 21 22
        on right: 20 21
    params_type <paramsGroupNode> (91)
        on left: 23 24
        on right: 21 22
    var_part <varPartList> (92)
        on left: 25 26
        on right: 6
    var_decl_list <varPartList> (93)
        on left: 27 28
        on right: 26 27
    var_decl <varPartListElement> (94)
        on left: 29 30
        on right: 27 28
    const_part <constPartList> (95)
        on left: 31 32
        on right: 6
    const_expr_list <constPartList> (96)
        on left: 33 34
        on right: 32 33
    const_expr <constPartListElement> (97)
        on left: 35 36
        on right: 33 34
    const_value <constantNode> (98)
        on left: 37 38 39 40 41 42 43 44
        on right: 35 36 62 104 140
    type_part <typePartList> (99)
        on left: 45 46
        on right: 6
    type_decl_list <typePartList> (100)
        on left: 47 48
        on right: 46 47
    type_def <typePartListElement> (101)
        on left: 49 50
        on right: 47 48
    type_decl <typeNode> (102)
        on left: 51 52 53
        on right: 29 30 49 50 57 58 59
    record_type_decl <recordTypeNode> (103)
        on left: 54
        on right: 53
    field_decl_list <fieldDeclList> (104)
        on left: 55 56
        on right: 54 55
    field_decl <fieldDeclListElement> (105)
        on left: 57 58
        on right: 55 56
    array_type_decl <arrayTypeNode> (106)
        on left: 59
        on right: 52
    simple_type <simpleTypeNode> (107)
        on left: 60 61 62 63 64 65 66 67
        on right: 16 23 24 51 59
    name_list <identifierList> (108)
        on left: 68 69
        on right: 23 24 29 30 57 58 61 68
    identifier <identifierNode> (109)
        on left: 70
        on right: 35 36 49 50 60 63 68 69 90 91 92 105 107 108 109 110 138 139 144 145
    routine_body <routineBodyNode> (110)
        on left: 71
        on right: 5
    compound_stmt <compoundStatementNode> (111)
        on left: 72 73
        on right: 71 80
    stmt_list <statementNodeList> (112)
        on left: 74 75 76
        on right: 72 73 75 76 98
    stmt <statementNode> (113)
        on left: 77 78
        on right: 75 76 94 95 97 100 104 105 106 107 108
    no_label_stmt <statementNode> (114)
        on left: 79 80 81 82 83 84 85 86 87 88 89
        on right: 77 78
    assign_stmt <assignNode> (115)
        on left: 90 91 92
        on right: 79
    goto_stmt <gotoNode> (116)
        on left: 93
        on right: 81
    if_stmt <ifNode> (117)
        on left: 94 95
        on right: 82
    else_clause <ifNode> (118)
        on left: 96 97
        on right: 94 95
    repeat_stmt <repeatNode> (119)
        on left: 98 99
        on right: 83
    while_stmt <whileNode> (120)
        on left: 100
        on right: 84
    case_stmt <caseNode> (121)
        on left: 101
        on right: 85
    case_expr_list <caseExprList> (122)
        on left: 102 103
        on right: 101 102
    case_expr <caseExpr> (123)
        on left: 104 105 106
        on right: 102 103
    for_stmt <forNode> (124)
        on left: 107 108
        on right: 86
    proc_stmt <callNode> (125)
        on left: 109 110 111 112 113 114 115 116 117 118 119
        on right: 87
    args_list <argsList> (126)
        on left: 120 121
        on right: 110 113 115 116 117 118 119 120 139 146 147 148 149 150 151
    expression <expressionNode> (127)
        on left: 122 123 124 125 126 127 128
        on right: 90 91 92 94 95 98 100 101 107 108 120 121 122 123 124 125 126 127 141 144
    expr <expressionNode> (128)
        on left: 129 130 131 132
        on right: 122 123 124 125 126 127 128 129 130 131
    term <expressionNode> (129)
        on left: 133 134 135 136 137
        on right: 129 130 131 132 133 134 135 136
    factor <expressionNode> (130)
        on left: 138 139 140 141 142 143 144 145 146 147 148 149 150 151
        on right: 111 133 134 135 136 137 142 143


State 0

    0 $accept: • program $end

    PROGRAM  shift, and go to state 1

    program  go to state 2


State 1

    1 program: PROGRAM • IDENT_NAME SEMICOLON routine DOT
    2        | PROGRAM • IDENT_NAME SEMICOLON routine
    3        | PROGRAM • IDENT_NAME routine DOT
    4        | PROGRAM • IDENT_NAME routine

    IDENT_NAME  shift, and go to state 3


State 2

    0 $accept: program • $end

    $end  shift, and go to state 4


State 3

    1 program: PROGRAM IDENT_NAME • SEMICOLON routine DOT
    2        | PROGRAM IDENT_NAME • SEMICOLON routine
    3        | PROGRAM IDENT_NAME • routine DOT
    4        | PROGRAM IDENT_NAME • routine

    CONST      shift, and go to state 5
    SEMICOLON  shift, and go to state 6

    $default  reduce using rule 31 (const_part)

    routine       go to state 7
    routine_head  go to state 8
    const_part    go to state 9


State 4

    0 $accept: program $end •

    $default  accept


State 5

   32 const_part: CONST • const_expr_list

    IDENT_NAME  shift, and go to state 10

    const_expr_list  go to state 11
    const_expr       go to state 12
    identifier       go to state 13


State 6

    1 program: PROGRAM IDENT_NAME SEMICOLON • routine DOT
    2        | PROGRAM IDENT_NAME SEMICOLON • routine

    CONST  shift, and go to state 5

    $default  reduce using rule 31 (const_part)

    routine       go to state 14
    routine_head  go to state 8
    const_part    go to state 9


State 7

    3 program: PROGRAM IDENT_NAME routine • DOT
    4        | PROGRAM IDENT_NAME routine •

    DOT  shift, and go to state 15

    $default  reduce using rule 4 (program)


State 8

    5 routine: routine_head • routine_body

    BBEGIN  shift, and go to state 16

    routine_body   go to state 17
    compound_stmt  go to state 18


State 9

    6 routine_head: const_part • type_part var_part routine_part

    TYPE  shift, and go to state 19

    $default  reduce using rule 45 (type_part)

    type_part  go to state 20


State 10

   70 identifier: IDENT_NAME •

    $default  reduce using rule 70 (identifier)


State 11

   32 const_part: CONST const_expr_list •
   33 const_expr_list: const_expr_list • const_expr

    IDENT_NAME  shift, and go to state 10

    $default  reduce using rule 32 (const_part)

    const_expr  go to state 21
    identifier  go to state 13


State 12

   34 const_expr_list: const_expr •

    $default  reduce using rule 34 (const_expr_list)


State 13

   35 const_expr: identifier • EQUAL const_value SEMICOLON
   36           | identifier • EQUAL const_value

    EQUAL  shift, and go to state 22


State 14

    1 program: PROGRAM IDENT_NAME SEMICOLON routine • DOT
    2        | PROGRAM IDENT_NAME SEMICOLON routine •

    DOT  shift, and go to state 23

    $default  reduce using rule 2 (program)


State 15

    3 program: PROGRAM IDENT_NAME routine DOT •

    $default  reduce using rule 3 (program)


State 16

   72 compound_stmt: BBEGIN • stmt_list END
   73              | BBEGIN • stmt_list

    $default  reduce using rule 74 (stmt_list)

    stmt_list  go to state 24


State 17

    5 routine: routine_head routine_body •

    $default  reduce using rule 5 (routine)


State 18

   71 routine_body: compound_stmt •

    $default  reduce using rule 71 (routine_body)


State 19

   46 type_part: TYPE • type_decl_list

    IDENT_NAME  shift, and go to state 10

    type_decl_list  go to state 25
    type_def        go to state 26
    identifier      go to state 27


State 20

    6 routine_head: const_part type_part • var_part routine_part

    VAR  shift, and go to state 28

    $default  reduce using rule 25 (var_part)

    var_part  go to state 29


State 21

   33 const_expr_list: const_expr_list const_expr •

    $default  reduce using rule 33 (const_expr_list)


State 22

   35 const_expr: identifier EQUAL • const_value SEMICOLON
   36           | identifier EQUAL • const_value

    INTEGER  shift, and go to state 30
    CHAR     shift, and go to state 31
    STRING   shift, and go to state 32
    TRUE     shift, and go to state 33
    FALSE    shift, and go to state 34
    MAXINT   shift, and go to state 35
    MINUS    shift, and go to state 36

    const_value  go to state 37


State 23

    1 program: PROGRAM IDENT_NAME SEMICOLON routine DOT •

    $default  reduce using rule 1 (program)


State 24

   72 compound_stmt: BBEGIN stmt_list • END
   73              | BBEGIN stmt_list •
   75 stmt_list: stmt_list • stmt SEMICOLON
   76          | stmt_list • stmt

    BBEGIN       shift, and go to state 16
    END          shift, and go to state 38
    IDENT_NAME   shift, and go to state 10
    INTEGER      shift, and go to state 39
    READ         shift, and go to state 40
    READLN       shift, and go to state 41
    WRITE        shift, and go to state 42
    WRITELN      shift, and go to state 43
    MEMORYREAD   shift, and go to state 44
    MEMORYWRITE  shift, and go to state 45
    STACKREAD    shift, and go to state 46
    STACKWRITE   shift, and go to state 47
    IF           shift, and go to state 48
    REPEAT       shift, and go to state 49
    WHILE        shift, and go to state 50
    CASE         shift, and go to state 51
    FOR          shift, and go to state 52
    GOTO         shift, and go to state 53
    BREAK        shift, and go to state 54
    CONTINUE     shift, and go to state 55

    $end         reduce using rule 73 (compound_stmt)
    $end         [reduce using rule 99 (repeat_stmt)]
    FUNCTION     reduce using rule 73 (compound_stmt)
    FUNCTION     [reduce using rule 99 (repeat_stmt)]
    PROCEDURE    reduce using rule 73 (compound_stmt)
    PROCEDURE    [reduce using rule 99 (repeat_stmt)]
    BBEGIN       [reduce using rule 73 (compound_stmt)]
    BBEGIN       [reduce using rule 99 (repeat_stmt)]
    END          [reduce using rule 73 (compound_stmt)]
    END          [reduce using rule 99 (repeat_stmt)]
    IDENT_NAME   [reduce using rule 73 (compound_stmt)]
    IDENT_NAME   [reduce using rule 99 (repeat_stmt)]
    INTEGER      [reduce using rule 73 (compound_stmt)]
    INTEGER      [reduce using rule 99 (repeat_stmt)]
    READ         [reduce using rule 73 (compound_stmt)]
    READ         [reduce using rule 99 (repeat_stmt)]
    READLN       [reduce using rule 73 (compound_stmt)]
    READLN       [reduce using rule 99 (repeat_stmt)]
    WRITE        [reduce using rule 73 (compound_stmt)]
    WRITE        [reduce using rule 99 (repeat_stmt)]
    WRITELN      [reduce using rule 73 (compound_stmt)]
    WRITELN      [reduce using rule 99 (repeat_stmt)]
    MEMORYREAD   [reduce using rule 73 (compound_stmt)]
    MEMORYREAD   [reduce using rule 99 (repeat_stmt)]
    MEMORYWRITE  [reduce using rule 73 (compound_stmt)]
    MEMORYWRITE  [reduce using rule 99 (repeat_stmt)]
    STACKREAD    [reduce using rule 73 (compound_stmt)]
    STACKREAD    [reduce using rule 99 (repeat_stmt)]
    STACKWRITE   [reduce using rule 73 (compound_stmt)]
    STACKWRITE   [reduce using rule 99 (repeat_stmt)]
    IF           [reduce using rule 73 (compound_stmt)]
    IF           [reduce using rule 99 (repeat_stmt)]
    ELSE         reduce using rule 73 (compound_stmt)
    ELSE         [reduce using rule 99 (repeat_stmt)]
    REPEAT       [reduce using rule 73 (compound_stmt)]
    REPEAT       [reduce using rule 99 (repeat_stmt)]
    UNTIL        reduce using rule 73 (compound_stmt)
    UNTIL        [reduce using rule 99 (repeat_stmt)]
    WHILE        [reduce using rule 73 (compound_stmt)]
    WHILE        [reduce using rule 99 (repeat_stmt)]
    CASE         [reduce using rule 73 (compound_stmt)]
    CASE         [reduce using rule 99 (repeat_stmt)]
    FOR          [reduce using rule 73 (compound_stmt)]
    FOR          [reduce using rule 99 (repeat_stmt)]
    SEMICOLON    reduce using rule 73 (compound_stmt)
    SEMICOLON    [reduce using rule 99 (repeat_stmt)]
    DOT          reduce using rule 73 (compound_stmt)
    DOT          [reduce using rule 99 (repeat_stmt)]
    GOTO         [reduce using rule 73 (compound_stmt)]
    GOTO         [reduce using rule 99 (repeat_stmt)]
    BREAK        [reduce using rule 73 (compound_stmt)]
    BREAK        [reduce using rule 99 (repeat_stmt)]
    CONTINUE     [reduce using rule 73 (compound_stmt)]
    CONTINUE     [reduce using rule 99 (repeat_stmt)]
    $default     reduce using rule 73 (compound_stmt)

    identifier     go to state 56
    compound_stmt  go to state 57
    stmt           go to state 58
    no_label_stmt  go to state 59
    assign_stmt    go to state 60
    goto_stmt      go to state 61
    if_stmt        go to state 62
    repeat_stmt    go to state 63
    while_stmt     go to state 64
    case_stmt      go to state 65
    for_stmt       go to state 66
    proc_stmt      go to state 67


State 25

   46 type_part: TYPE type_decl_list •
   47 type_decl_list: type_decl_list • type_def

    IDENT_NAME  shift, and go to state 10

    $default  reduce using rule 46 (type_part)

    type_def    go to state 68
    identifier  go to state 27


State 26

   48 type_decl_list: type_def •

    $default  reduce using rule 48 (type_decl_list)


State 27

   49 type_def: identifier • EQUAL type_decl SEMICOLON
   50         | identifier • EQUAL type_decl

    EQUAL  shift, and go to state 69


State 28

   26 var_part: VAR • var_decl_list

    IDENT_NAME  shift, and go to state 10

    var_decl_list  go to state 70
    var_decl       go to state 71
    name_list      go to state 72
    identifier     go to state 73


State 29

    6 routine_head: const_part type_part var_part • routine_part

    FUNCTION   shift, and go to state 74
    PROCEDURE  shift, and go to state 75

    FUNCTION   [reduce using rule 7 (routine_part)]
    PROCEDURE  [reduce using rule 7 (routine_part)]
    $default   reduce using rule 7 (routine_part)

    routine_part  go to state 76
    fun_decl      go to state 77
    fun_head      go to state 78
    proc_decl     go to state 79
    proc_head     go to state 80


State 30

   37 const_value: INTEGER •

    $default  reduce using rule 37 (const_value)


State 31

   39 const_value: CHAR •

    $default  reduce using rule 39 (const_value)


State 32

   40 const_value: STRING •

    $default  reduce using rule 40 (const_value)


State 33

   41 const_value: TRUE •

    $default  reduce using rule 41 (const_value)


State 34

   42 const_value: FALSE •

    $default  reduce using rule 42 (const_value)


State 35

   43 const_value: MAXINT •

    $default  reduce using rule 43 (const_value)


State 36

   38 const_value: MINUS • INTEGER
   44            | MINUS • MAXINT

    INTEGER  shift, and go to state 81
    MAXINT   shift, and go to state 82


State 37

   35 const_expr: identifier EQUAL const_value • SEMICOLON
   36           | identifier EQUAL const_value •

    SEMICOLON  shift, and go to state 83

    $default  reduce using rule 36 (const_expr)


State 38

   72 compound_stmt: BBEGIN stmt_list END •

    $default  reduce using rule 72 (compound_stmt)


State 39

   77 stmt: INTEGER • COLON no_label_stmt

    COLON  shift, and go to state 84


State 40

  111 proc_stmt: READ • LP factor RP

    LP  shift, and go to state 85


State 41

  112 proc_stmt: READLN •

    $default  reduce using rule 112 (proc_stmt)


State 42

  113 proc_stmt: WRITE • LP args_list RP

    LP  shift, and go to state 86


State 43

  114 proc_stmt: WRITELN •
  115          | WRITELN • LP args_list RP

    LP  shift, and go to state 87

    $default  reduce using rule 114 (proc_stmt)


State 44

  116 proc_stmt: MEMORYREAD • LP args_list RP

    LP  shift, and go to state 88


State 45

  117 proc_stmt: MEMORYWRITE • LP args_list RP

    LP  shift, and go to state 89


State 46

  118 proc_stmt: STACKREAD • LP args_list RP

    LP  shift, and go to state 90


State 47

  119 proc_stmt: STACKWRITE • LP args_list RP

    LP  shift, and go to state 91


State 48

   94 if_stmt: IF • expression THEN stmt else_clause
   95        | IF • expression stmt else_clause

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 92
    CHR         shift, and go to state 93
    ODD         shift, and go to state 94
    ORD         shift, and go to state 95
    PRED        shift, and go to state 96
    SUCC        shift, and go to state 97
    MINUS       shift, and go to state 98
    NOT         shift, and go to state 99
    LP          shift, and go to state 100

    const_value  go to state 101
    identifier   go to state 102
    expression   go to state 103
    expr         go to state 104
    term         go to state 105
    factor       go to state 106


State 49

   98 repeat_stmt: REPEAT • stmt_list UNTIL expression

    $default  reduce using rule 74 (stmt_list)

    stmt_list  go to state 107


State 50

  100 while_stmt: WHILE • expression DO stmt

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 92
    CHR         shift, and go to state 93
    ODD         shift, and go to state 94
    ORD         shift, and go to state 95
    PRED        shift, and go to state 96
    SUCC        shift, and go to state 97
    MINUS       shift, and go to state 98
    NOT         shift, and go to state 99
    LP          shift, and go to state 100

    const_value  go to state 101
    identifier   go to state 102
    expression   go to state 108
    expr         go to state 104
    term         go to state 105
    factor       go to state 106


State 51

  101 case_stmt: CASE • expression OF case_expr_list END

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 92
    CHR         shift, and go to state 93
    ODD         shift, and go to state 94
    ORD         shift, and go to state 95
    PRED        shift, and go to state 96
    SUCC        shift, and go to state 97
    MINUS       shift, and go to state 98
    NOT         shift, and go to state 99
    LP          shift, and go to state 100

    const_value  go to state 101
    identifier   go to state 102
    expression   go to state 109
    expr         go to state 104
    term         go to state 105
    factor       go to state 106


State 52

  107 for_stmt: FOR • identifier ASSIGN expression TO expression DO stmt
  108         | FOR • identifier ASSIGN expression DOWNTO expression DO stmt

    IDENT_NAME  shift, and go to state 10

    identifier  go to state 110


State 53

   93 goto_stmt: GOTO • INTEGER

    INTEGER  shift, and go to state 111


State 54

   88 no_label_stmt: BREAK •

    $default  reduce using rule 88 (no_label_stmt)


State 55

   89 no_label_stmt: CONTINUE •

    $default  reduce using rule 89 (no_label_stmt)


State 56

   90 assign_stmt: identifier • ASSIGN expression
   91            | identifier • LB expression RB ASSIGN expression
   92            | identifier • DOT identifier ASSIGN expression
  109 proc_stmt: identifier •
  110          | identifier • LP args_list RP

    ASSIGN  shift, and go to state 112
    LB      shift, and go to state 113
    LP      shift, and go to state 114
    DOT     shift, and go to state 115

    DOT       [reduce using rule 109 (proc_stmt)]
    $default  reduce using rule 109 (proc_stmt)


State 57

   80 no_label_stmt: compound_stmt •

    $default  reduce using rule 80 (no_label_stmt)


State 58

   75 stmt_list: stmt_list stmt • SEMICOLON
   76          | stmt_list stmt •

    SEMICOLON  shift, and go to state 116

    SEMICOLON  [reduce using rule 76 (stmt_list)]
    $default   reduce using rule 76 (stmt_list)


State 59

   78 stmt: no_label_stmt •

    $default  reduce using rule 78 (stmt)


State 60

   79 no_label_stmt: assign_stmt •

    $default  reduce using rule 79 (no_label_stmt)


State 61

   81 no_label_stmt: goto_stmt •

    $default  reduce using rule 81 (no_label_stmt)


State 62

   82 no_label_stmt: if_stmt •

    $default  reduce using rule 82 (no_label_stmt)


State 63

   83 no_label_stmt: repeat_stmt •

    $default  reduce using rule 83 (no_label_stmt)


State 64

   84 no_label_stmt: while_stmt •

    $default  reduce using rule 84 (no_label_stmt)


State 65

   85 no_label_stmt: case_stmt •

    $default  reduce using rule 85 (no_label_stmt)


State 66

   86 no_label_stmt: for_stmt •

    $default  reduce using rule 86 (no_label_stmt)


State 67

   87 no_label_stmt: proc_stmt •

    $default  reduce using rule 87 (no_label_stmt)


State 68

   47 type_decl_list: type_decl_list type_def •

    $default  reduce using rule 47 (type_decl_list)


State 69

   49 type_def: identifier EQUAL • type_decl SEMICOLON
   50         | identifier EQUAL • type_decl

    IDENT_NAME     shift, and go to state 10
    INTEGER        shift, and go to state 30
    CHAR           shift, and go to state 31
    STRING         shift, and go to state 32
    TRUE           shift, and go to state 33
    FALSE          shift, and go to state 34
    MAXINT         shift, and go to state 35
    MINUS          shift, and go to state 36
    LP             shift, and go to state 117
    INT_TYPE       shift, and go to state 118
    UNSIGNED_TYPE  shift, and go to state 119
    BOOL_TYPE      shift, and go to state 120
    CHAR_TYPE      shift, and go to state 121
    ARRAY          shift, and go to state 122
    RECORD         shift, and go to state 123

    const_value       go to state 124
    type_decl         go to state 125
    record_type_decl  go to state 126
    array_type_decl   go to state 127
    simple_type       go to state 128
    identifier        go to state 129


State 70

   26 var_part: VAR var_decl_list •
   27 var_decl_list: var_decl_list • var_decl

    IDENT_NAME  shift, and go to state 10

    $default  reduce using rule 26 (var_part)

    var_decl    go to state 130
    name_list   go to state 72
    identifier  go to state 73


State 71

   28 var_decl_list: var_decl •

    $default  reduce using rule 28 (var_decl_list)


State 72

   29 var_decl: name_list • COLON type_decl SEMICOLON
   30         | name_list • COLON type_decl
   68 name_list: name_list • COMMA identifier

    COMMA  shift, and go to state 131
    COLON  shift, and go to state 132


State 73

   69 name_list: identifier •

    $default  reduce using rule 69 (name_list)


State 74

   16 fun_head: FUNCTION • IDENT_NAME params COLON simple_type

    IDENT_NAME  shift, and go to state 133


State 75

   18 proc_head: PROCEDURE • IDENT_NAME params

    IDENT_NAME  shift, and go to state 134


State 76

    6 routine_head: const_part type_part var_part routine_part •
    8 routine_part: routine_part • fun_decl
    9             | routine_part • proc_decl

    FUNCTION   shift, and go to state 74
    PROCEDURE  shift, and go to state 75

    $default  reduce using rule 6 (routine_head)

    fun_decl   go to state 135
    fun_head   go to state 78
    proc_decl  go to state 136
    proc_head  go to state 80


State 77

   10 routine_part: fun_decl •

    $default  reduce using rule 10 (routine_part)


State 78

   12 fun_decl: fun_head • SEMICOLON routine SEMICOLON
   13         | fun_head • SEMICOLON routine
   14         | fun_head • routine SEMICOLON
   15         | fun_head • routine

    CONST      shift, and go to state 5
    SEMICOLON  shift, and go to state 137

    $default  reduce using rule 31 (const_part)

    routine       go to state 138
    routine_head  go to state 8
    const_part    go to state 9


State 79

   11 routine_part: proc_decl •

    $default  reduce using rule 11 (routine_part)


State 80

   17 proc_decl: proc_head • SEMICOLON routine SEMICOLON

    SEMICOLON  shift, and go to state 139


State 81

   38 const_value: MINUS INTEGER •

    $default  reduce using rule 38 (const_value)


State 82

   44 const_value: MINUS MAXINT •

    $default  reduce using rule 44 (const_value)


State 83

   35 const_expr: identifier EQUAL const_value SEMICOLON •

    $default  reduce using rule 35 (const_expr)


State 84

   77 stmt: INTEGER COLON • no_label_stmt

    BBEGIN       shift, and go to state 16
    IDENT_NAME   shift, and go to state 10
    READ         shift, and go to state 40
    READLN       shift, and go to state 41
    WRITE        shift, and go to state 42
    WRITELN      shift, and go to state 43
    MEMORYREAD   shift, and go to state 44
    MEMORYWRITE  shift, and go to state 45
    STACKREAD    shift, and go to state 46
    STACKWRITE   shift, and go to state 47
    IF           shift, and go to state 48
    REPEAT       shift, and go to state 49
    WHILE        shift, and go to state 50
    CASE         shift, and go to state 51
    FOR          shift, and go to state 52
    GOTO         shift, and go to state 53
    BREAK        shift, and go to state 54
    CONTINUE     shift, and go to state 55

    BBEGIN       [reduce using rule 99 (repeat_stmt)]
    IDENT_NAME   [reduce using rule 99 (repeat_stmt)]
    READ         [reduce using rule 99 (repeat_stmt)]
    READLN       [reduce using rule 99 (repeat_stmt)]
    WRITE        [reduce using rule 99 (repeat_stmt)]
    WRITELN      [reduce using rule 99 (repeat_stmt)]
    MEMORYREAD   [reduce using rule 99 (repeat_stmt)]
    MEMORYWRITE  [reduce using rule 99 (repeat_stmt)]
    STACKREAD    [reduce using rule 99 (repeat_stmt)]
    STACKWRITE   [reduce using rule 99 (repeat_stmt)]
    IF           [reduce using rule 99 (repeat_stmt)]
    REPEAT       [reduce using rule 99 (repeat_stmt)]
    WHILE        [reduce using rule 99 (repeat_stmt)]
    CASE         [reduce using rule 99 (repeat_stmt)]
    FOR          [reduce using rule 99 (repeat_stmt)]
    GOTO         [reduce using rule 99 (repeat_stmt)]
    BREAK        [reduce using rule 99 (repeat_stmt)]
    CONTINUE     [reduce using rule 99 (repeat_stmt)]
    $default     reduce using rule 99 (repeat_stmt)

    identifier     go to state 56
    compound_stmt  go to state 57
    no_label_stmt  go to state 140
    assign_stmt    go to state 60
    goto_stmt      go to state 61
    if_stmt        go to state 62
    repeat_stmt    go to state 63
    while_stmt     go to state 64
    case_stmt      go to state 65
    for_stmt       go to state 66
    proc_stmt      go to state 67


State 85

  111 proc_stmt: READ LP • factor RP

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 92
    CHR         shift, and go to state 93
    ODD         shift, and go to state 94
    ORD         shift, and go to state 95
    PRED        shift, and go to state 96
    SUCC        shift, and go to state 97
    MINUS       shift, and go to state 98
    NOT         shift, and go to state 99
    LP          shift, and go to state 100

    const_value  go to state 101
    identifier   go to state 102
    factor       go to state 141


State 86

  113 proc_stmt: WRITE LP • args_list RP

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 92
    CHR         shift, and go to state 93
    ODD         shift, and go to state 94
    ORD         shift, and go to state 95
    PRED        shift, and go to state 96
    SUCC        shift, and go to state 97
    MINUS       shift, and go to state 98
    NOT         shift, and go to state 99
    LP          shift, and go to state 100

    const_value  go to state 101
    identifier   go to state 102
    args_list    go to state 142
    expression   go to state 143
    expr         go to state 104
    term         go to state 105
    factor       go to state 106


State 87

  115 proc_stmt: WRITELN LP • args_list RP

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 92
    CHR         shift, and go to state 93
    ODD         shift, and go to state 94
    ORD         shift, and go to state 95
    PRED        shift, and go to state 96
    SUCC        shift, and go to state 97
    MINUS       shift, and go to state 98
    NOT         shift, and go to state 99
    LP          shift, and go to state 100

    const_value  go to state 101
    identifier   go to state 102
    args_list    go to state 144
    expression   go to state 143
    expr         go to state 104
    term         go to state 105
    factor       go to state 106


State 88

  116 proc_stmt: MEMORYREAD LP • args_list RP

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 92
    CHR         shift, and go to state 93
    ODD         shift, and go to state 94
    ORD         shift, and go to state 95
    PRED        shift, and go to state 96
    SUCC        shift, and go to state 97
    MINUS       shift, and go to state 98
    NOT         shift, and go to state 99
    LP          shift, and go to state 100

    const_value  go to state 101
    identifier   go to state 102
    args_list    go to state 145
    expression   go to state 143
    expr         go to state 104
    term         go to state 105
    factor       go to state 106


State 89

  117 proc_stmt: MEMORYWRITE LP • args_list RP

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 92
    CHR         shift, and go to state 93
    ODD         shift, and go to state 94
    ORD         shift, and go to state 95
    PRED        shift, and go to state 96
    SUCC        shift, and go to state 97
    MINUS       shift, and go to state 98
    NOT         shift, and go to state 99
    LP          shift, and go to state 100

    const_value  go to state 101
    identifier   go to state 102
    args_list    go to state 146
    expression   go to state 143
    expr         go to state 104
    term         go to state 105
    factor       go to state 106


State 90

  118 proc_stmt: STACKREAD LP • args_list RP

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 92
    CHR         shift, and go to state 93
    ODD         shift, and go to state 94
    ORD         shift, and go to state 95
    PRED        shift, and go to state 96
    SUCC        shift, and go to state 97
    MINUS       shift, and go to state 98
    NOT         shift, and go to state 99
    LP          shift, and go to state 100

    const_value  go to state 101
    identifier   go to state 102
    args_list    go to state 147
    expression   go to state 143
    expr         go to state 104
    term         go to state 105
    factor       go to state 106


State 91

  119 proc_stmt: STACKWRITE LP • args_list RP

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 92
    CHR         shift, and go to state 93
    ODD         shift, and go to state 94
    ORD         shift, and go to state 95
    PRED        shift, and go to state 96
    SUCC        shift, and go to state 97
    MINUS       shift, and go to state 98
    NOT         shift, and go to state 99
    LP          shift, and go to state 100

    const_value  go to state 101
    identifier   go to state 102
    args_list    go to state 148
    expression   go to state 143
    expr         go to state 104
    term         go to state 105
    factor       go to state 106


State 92

  146 factor: ABS • LP args_list RP

    LP  shift, and go to state 149


State 93

  147 factor: CHR • LP args_list RP

    LP  shift, and go to state 150


State 94

  148 factor: ODD • LP args_list RP

    LP  shift, and go to state 151


State 95

  149 factor: ORD • LP args_list RP

    LP  shift, and go to state 152


State 96

  150 factor: PRED • LP args_list RP

    LP  shift, and go to state 153


State 97

  151 factor: SUCC • LP args_list RP

    LP  shift, and go to state 154


State 98

   38 const_value: MINUS • INTEGER
   44            | MINUS • MAXINT
  143 factor: MINUS • factor

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 155
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 156
    ABS         shift, and go to state 92
    CHR         shift, and go to state 93
    ODD         shift, and go to state 94
    ORD         shift, and go to state 95
    PRED        shift, and go to state 96
    SUCC        shift, and go to state 97
    MINUS       shift, and go to state 98
    NOT         shift, and go to state 99
    LP          shift, and go to state 100

    const_value  go to state 101
    identifier   go to state 102
    factor       go to state 157


State 99

  142 factor: NOT • factor

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 92
    CHR         shift, and go to state 93
    ODD         shift, and go to state 94
    ORD         shift, and go to state 95
    PRED        shift, and go to state 96
    SUCC        shift, and go to state 97
    MINUS       shift, and go to state 98
    NOT         shift, and go to state 99
    LP          shift, and go to state 100

    const_value  go to state 101
    identifier   go to state 102
    factor       go to state 158


State 100

  141 factor: LP • expression RP

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 92
    CHR         shift, and go to state 93
    ODD         shift, and go to state 94
    ORD         shift, and go to state 95
    PRED        shift, and go to state 96
    SUCC        shift, and go to state 97
    MINUS       shift, and go to state 98
    NOT         shift, and go to state 99
    LP          shift, and go to state 100

    const_value  go to state 101
    identifier   go to state 102
    expression   go to state 159
    expr         go to state 104
    term         go to state 105
    factor       go to state 106


State 101

  140 factor: const_value •

    $default  reduce using rule 140 (factor)


State 102

  138 factor: identifier •
  139       | identifier • LP args_list RP
  144       | identifier • LB expression RB
  145       | identifier • DOT identifier

    LB   shift, and go to state 160
    LP   shift, and go to state 161
    DOT  shift, and go to state 162

    DOT       [reduce using rule 138 (factor)]
    $default  reduce using rule 138 (factor)


State 103

   94 if_stmt: IF expression • THEN stmt else_clause
   95        | IF expression • stmt else_clause
  122 expression: expression • GE expr
  123           | expression • GT expr
  124           | expression • LE expr
  125           | expression • LT expr
  126           | expression • EQUAL expr
  127           | expression • UNEQUAL expr

    BBEGIN       shift, and go to state 16
    IDENT_NAME   shift, and go to state 10
    INTEGER      shift, and go to state 39
    READ         shift, and go to state 40
    READLN       shift, and go to state 41
    WRITE        shift, and go to state 42
    WRITELN      shift, and go to state 43
    MEMORYREAD   shift, and go to state 44
    MEMORYWRITE  shift, and go to state 45
    STACKREAD    shift, and go to state 46
    STACKWRITE   shift, and go to state 47
    IF           shift, and go to state 48
    THEN         shift, and go to state 163
    REPEAT       shift, and go to state 49
    WHILE        shift, and go to state 50
    CASE         shift, and go to state 51
    FOR          shift, and go to state 52
    EQUAL        shift, and go to state 164
    UNEQUAL      shift, and go to state 165
    GE           shift, and go to state 166
    GT           shift, and go to state 167
    LE           shift, and go to state 168
    LT           shift, and go to state 169
    GOTO         shift, and go to state 53
    BREAK        shift, and go to state 54
    CONTINUE     shift, and go to state 55

    BBEGIN       [reduce using rule 99 (repeat_stmt)]
    IDENT_NAME   [reduce using rule 99 (repeat_stmt)]
    INTEGER      [reduce using rule 99 (repeat_stmt)]
    READ         [reduce using rule 99 (repeat_stmt)]
    READLN       [reduce using rule 99 (repeat_stmt)]
    WRITE        [reduce using rule 99 (repeat_stmt)]
    WRITELN      [reduce using rule 99 (repeat_stmt)]
    MEMORYREAD   [reduce using rule 99 (repeat_stmt)]
    MEMORYWRITE  [reduce using rule 99 (repeat_stmt)]
    STACKREAD    [reduce using rule 99 (repeat_stmt)]
    STACKWRITE   [reduce using rule 99 (repeat_stmt)]
    IF           [reduce using rule 99 (repeat_stmt)]
    REPEAT       [reduce using rule 99 (repeat_stmt)]
    WHILE        [reduce using rule 99 (repeat_stmt)]
    CASE         [reduce using rule 99 (repeat_stmt)]
    FOR          [reduce using rule 99 (repeat_stmt)]
    GOTO         [reduce using rule 99 (repeat_stmt)]
    BREAK        [reduce using rule 99 (repeat_stmt)]
    CONTINUE     [reduce using rule 99 (repeat_stmt)]
    $default     reduce using rule 99 (repeat_stmt)

    identifier     go to state 56
    compound_stmt  go to state 57
    stmt           go to state 170
    no_label_stmt  go to state 59
    assign_stmt    go to state 60
    goto_stmt      go to state 61
    if_stmt        go to state 62
    repeat_stmt    go to state 63
    while_stmt     go to state 64
    case_stmt      go to state 65
    for_stmt       go to state 66
    proc_stmt      go to state 67


State 104

  128 expression: expr •
  129 expr: expr • PLUS term
  130     | expr • MINUS term
  131     | expr • OR term

    PLUS   shift, and go to state 171
    MINUS  shift, and go to state 172
    OR     shift, and go to state 173

    $default  reduce using rule 128 (expression)


State 105

  132 expr: term •
  133 term: term • MUL factor
  134     | term • DIV factor
  135     | term • MOD factor
  136     | term • AND factor

    MUL  shift, and go to state 174
    DIV  shift, and go to state 175
    AND  shift, and go to state 176
    MOD  shift, and go to state 177

    $default  reduce using rule 132 (expr)


State 106

  137 term: factor •

    $default  reduce using rule 137 (term)


State 107

   75 stmt_list: stmt_list • stmt SEMICOLON
   76          | stmt_list • stmt
   98 repeat_stmt: REPEAT stmt_list • UNTIL expression

    BBEGIN       shift, and go to state 16
    IDENT_NAME   shift, and go to state 10
    INTEGER      shift, and go to state 39
    READ         shift, and go to state 40
    READLN       shift, and go to state 41
    WRITE        shift, and go to state 42
    WRITELN      shift, and go to state 43
    MEMORYREAD   shift, and go to state 44
    MEMORYWRITE  shift, and go to state 45
    STACKREAD    shift, and go to state 46
    STACKWRITE   shift, and go to state 47
    IF           shift, and go to state 48
    REPEAT       shift, and go to state 49
    UNTIL        shift, and go to state 178
    WHILE        shift, and go to state 50
    CASE         shift, and go to state 51
    FOR          shift, and go to state 52
    GOTO         shift, and go to state 53
    BREAK        shift, and go to state 54
    CONTINUE     shift, and go to state 55

    BBEGIN       [reduce using rule 99 (repeat_stmt)]
    IDENT_NAME   [reduce using rule 99 (repeat_stmt)]
    INTEGER      [reduce using rule 99 (repeat_stmt)]
    READ         [reduce using rule 99 (repeat_stmt)]
    READLN       [reduce using rule 99 (repeat_stmt)]
    WRITE        [reduce using rule 99 (repeat_stmt)]
    WRITELN      [reduce using rule 99 (repeat_stmt)]
    MEMORYREAD   [reduce using rule 99 (repeat_stmt)]
    MEMORYWRITE  [reduce using rule 99 (repeat_stmt)]
    STACKREAD    [reduce using rule 99 (repeat_stmt)]
    STACKWRITE   [reduce using rule 99 (repeat_stmt)]
    IF           [reduce using rule 99 (repeat_stmt)]
    REPEAT       [reduce using rule 99 (repeat_stmt)]
    UNTIL        [reduce using rule 99 (repeat_stmt)]
    WHILE        [reduce using rule 99 (repeat_stmt)]
    CASE         [reduce using rule 99 (repeat_stmt)]
    FOR          [reduce using rule 99 (repeat_stmt)]
    GOTO         [reduce using rule 99 (repeat_stmt)]
    BREAK        [reduce using rule 99 (repeat_stmt)]
    CONTINUE     [reduce using rule 99 (repeat_stmt)]
    $default     reduce using rule 99 (repeat_stmt)

    identifier     go to state 56
    compound_stmt  go to state 57
    stmt           go to state 58
    no_label_stmt  go to state 59
    assign_stmt    go to state 60
    goto_stmt      go to state 61
    if_stmt        go to state 62
    repeat_stmt    go to state 63
    while_stmt     go to state 64
    case_stmt      go to state 65
    for_stmt       go to state 66
    proc_stmt      go to state 67


State 108

  100 while_stmt: WHILE expression • DO stmt
  122 expression: expression • GE expr
  123           | expression • GT expr
  124           | expression • LE expr
  125           | expression • LT expr
  126           | expression • EQUAL expr
  127           | expression • UNEQUAL expr

    DO       shift, and go to state 179
    EQUAL    shift, and go to state 164
    UNEQUAL  shift, and go to state 165
    GE       shift, and go to state 166
    GT       shift, and go to state 167
    LE       shift, and go to state 168
    LT       shift, and go to state 169


State 109

  101 case_stmt: CASE expression • OF case_expr_list END
  122 expression: expression • GE expr
  123           | expression • GT expr
  124           | expression • LE expr
  125           | expression • LT expr
  126           | expression • EQUAL expr
  127           | expression • UNEQUAL expr

    EQUAL    shift, and go to state 164
    UNEQUAL  shift, and go to state 165
    GE       shift, and go to state 166
    GT       shift, and go to state 167
    LE       shift, and go to state 168
    LT       shift, and go to state 169
    OF       shift, and go to state 180


State 110

  107 for_stmt: FOR identifier • ASSIGN expression TO expression DO stmt
  108         | FOR identifier • ASSIGN expression DOWNTO expression DO stmt

    ASSIGN  shift, and go to state 181


State 111

   93 goto_stmt: GOTO INTEGER •

    $default  reduce using rule 93 (goto_stmt)


State 112

   90 assign_stmt: identifier ASSIGN • expression

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 92
    CHR         shift, and go to state 93
    ODD         shift, and go to state 94
    ORD         shift, and go to state 95
    PRED        shift, and go to state 96
    SUCC        shift, and go to state 97
    MINUS       shift, and go to state 98
    NOT         shift, and go to state 99
    LP          shift, and go to state 100

    const_value  go to state 101
    identifier   go to state 102
    expression   go to state 182
    expr         go to state 104
    term         go to state 105
    factor       go to state 106


State 113

   91 assign_stmt: identifier LB • expression RB ASSIGN expression

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 92
    CHR         shift, and go to state 93
    ODD         shift, and go to state 94
    ORD         shift, and go to state 95
    PRED        shift, and go to state 96
    SUCC        shift, and go to state 97
    MINUS       shift, and go to state 98
    NOT         shift, and go to state 99
    LP          shift, and go to state 100

    const_value  go to state 101
    identifier   go to state 102
    expression   go to state 183
    expr         go to state 104
    term         go to state 105
    factor       go to state 106


State 114

  110 proc_stmt: identifier LP • args_list RP

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 92
    CHR         shift, and go to state 93
    ODD         shift, and go to state 94
    ORD         shift, and go to state 95
    PRED        shift, and go to state 96
    SUCC        shift, and go to state 97
    MINUS       shift, and go to state 98
    NOT         shift, and go to state 99
    LP          shift, and go to state 100

    const_value  go to state 101
    identifier   go to state 102
    args_list    go to state 184
    expression   go to state 143
    expr         go to state 104
    term         go to state 105
    factor       go to state 106


State 115

   92 assign_stmt: identifier DOT • identifier ASSIGN expression

    IDENT_NAME  shift, and go to state 10

    identifier  go to state 185


State 116

   75 stmt_list: stmt_list stmt SEMICOLON •

    $default  reduce using rule 75 (stmt_list)


State 117

   61 simple_type: LP • name_list RP

    IDENT_NAME  shift, and go to state 10

    name_list   go to state 186
    identifier  go to state 73


State 118

   64 simple_type: INT_TYPE •

    $default  reduce using rule 64 (simple_type)


State 119

   65 simple_type: UNSIGNED_TYPE •

    $default  reduce using rule 65 (simple_type)


State 120

   66 simple_type: BOOL_TYPE •

    $default  reduce using rule 66 (simple_type)


State 121

   67 simple_type: CHAR_TYPE •

    $default  reduce using rule 67 (simple_type)


State 122

   59 array_type_decl: ARRAY • LB simple_type RB OF type_decl

    LB  shift, and go to state 187


State 123

   54 record_type_decl: RECORD • field_decl_list END

    IDENT_NAME  shift, and go to state 10

    field_decl_list  go to state 188
    field_decl       go to state 189
    name_list        go to state 190
    identifier       go to state 73


State 124

   62 simple_type: const_value • DOUBLEDOT const_value

    DOUBLEDOT  shift, and go to state 191


State 125

   49 type_def: identifier EQUAL type_decl • SEMICOLON
   50         | identifier EQUAL type_decl •

    SEMICOLON  shift, and go to state 192

    $default  reduce using rule 50 (type_def)


State 126

   53 type_decl: record_type_decl •

    $default  reduce using rule 53 (type_decl)


State 127

   52 type_decl: array_type_decl •

    $default  reduce using rule 52 (type_decl)


State 128

   51 type_decl: simple_type •

    $default  reduce using rule 51 (type_decl)


State 129

   60 simple_type: identifier •
   63            | identifier • DOUBLEDOT identifier

    DOUBLEDOT  shift, and go to state 193

    $default  reduce using rule 60 (simple_type)


State 130

   27 var_decl_list: var_decl_list var_decl •

    $default  reduce using rule 27 (var_decl_list)


State 131

   68 name_list: name_list COMMA • identifier

    IDENT_NAME  shift, and go to state 10

    identifier  go to state 194


State 132

   29 var_decl: name_list COLON • type_decl SEMICOLON
   30         | name_list COLON • type_decl

    IDENT_NAME     shift, and go to state 10
    INTEGER        shift, and go to state 30
    CHAR           shift, and go to state 31
    STRING         shift, and go to state 32
    TRUE           shift, and go to state 33
    FALSE          shift, and go to state 34
    MAXINT         shift, and go to state 35
    MINUS          shift, and go to state 36
    LP             shift, and go to state 117
    INT_TYPE       shift, and go to state 118
    UNSIGNED_TYPE  shift, and go to state 119
    BOOL_TYPE      shift, and go to state 120
    CHAR_TYPE      shift, and go to state 121
    ARRAY          shift, and go to state 122
    RECORD         shift, and go to state 123

    const_value       go to state 124
    type_decl         go to state 195
    record_type_decl  go to state 126
    array_type_decl   go to state 127
    simple_type       go to state 128
    identifier        go to state 129


State 133

   16 fun_head: FUNCTION IDENT_NAME • params COLON simple_type

    LP  shift, and go to state 196

    $default  reduce using rule 19 (params)

    params  go to state 197


State 134

   18 proc_head: PROCEDURE IDENT_NAME • params

    LP  shift, and go to state 196

    $default  reduce using rule 19 (params)

    params  go to state 198


State 135

    8 routine_part: routine_part fun_decl •

    $default  reduce using rule 8 (routine_part)


State 136

    9 routine_part: routine_part proc_decl •

    $default  reduce using rule 9 (routine_part)


State 137

   12 fun_decl: fun_head SEMICOLON • routine SEMICOLON
   13         | fun_head SEMICOLON • routine

    CONST  shift, and go to state 5

    $default  reduce using rule 31 (const_part)

    routine       go to state 199
    routine_head  go to state 8
    const_part    go to state 9


State 138

   14 fun_decl: fun_head routine • SEMICOLON
   15         | fun_head routine •

    SEMICOLON  shift, and go to state 200

    $default  reduce using rule 15 (fun_decl)


State 139

   17 proc_decl: proc_head SEMICOLON • routine SEMICOLON

    CONST  shift, and go to state 5

    $default  reduce using rule 31 (const_part)

    routine       go to state 201
    routine_head  go to state 8
    const_part    go to state 9


State 140

   77 stmt: INTEGER COLON no_label_stmt •

    $default  reduce using rule 77 (stmt)


State 141

  111 proc_stmt: READ LP factor • RP

    RP  shift, and go to state 202


State 142

  113 proc_stmt: WRITE LP args_list • RP
  120 args_list: args_list • COMMA expression

    RP     shift, and go to state 203
    COMMA  shift, and go to state 204


State 143

  121 args_list: expression •
  122 expression: expression • GE expr
  123           | expression • GT expr
  124           | expression • LE expr
  125           | expression • LT expr
  126           | expression • EQUAL expr
  127           | expression • UNEQUAL expr

    EQUAL    shift, and go to state 164
    UNEQUAL  shift, and go to state 165
    GE       shift, and go to state 166
    GT       shift, and go to state 167
    LE       shift, and go to state 168
    LT       shift, and go to state 169

    $default  reduce using rule 121 (args_list)


State 144

  115 proc_stmt: WRITELN LP args_list • RP
  120 args_list: args_list • COMMA expression

    RP     shift, and go to state 205
    COMMA  shift, and go to state 204


State 145

  116 proc_stmt: MEMORYREAD LP args_list • RP
  120 args_list: args_list • COMMA expression

    RP     shift, and go to state 206
    COMMA  shift, and go to state 204


State 146

  117 proc_stmt: MEMORYWRITE LP args_list • RP
  120 args_list: args_list • COMMA expression

    RP     shift, and go to state 207
    COMMA  shift, and go to state 204


State 147

  118 proc_stmt: STACKREAD LP args_list • RP
  120 args_list: args_list • COMMA expression

    RP     shift, and go to state 208
    COMMA  shift, and go to state 204


State 148

  119 proc_stmt: STACKWRITE LP args_list • RP
  120 args_list: args_list • COMMA expression

    RP     shift, and go to state 209
    COMMA  shift, and go to state 204


State 149

  146 factor: ABS LP • args_list RP

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 92
    CHR         shift, and go to state 93
    ODD         shift, and go to state 94
    ORD         shift, and go to state 95
    PRED        shift, and go to state 96
    SUCC        shift, and go to state 97
    MINUS       shift, and go to state 98
    NOT         shift, and go to state 99
    LP          shift, and go to state 100

    const_value  go to state 101
    identifier   go to state 102
    args_list    go to state 210
    expression   go to state 143
    expr         go to state 104
    term         go to state 105
    factor       go to state 106


State 150

  147 factor: CHR LP • args_list RP

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 92
    CHR         shift, and go to state 93
    ODD         shift, and go to state 94
    ORD         shift, and go to state 95
    PRED        shift, and go to state 96
    SUCC        shift, and go to state 97
    MINUS       shift, and go to state 98
    NOT         shift, and go to state 99
    LP          shift, and go to state 100

    const_value  go to state 101
    identifier   go to state 102
    args_list    go to state 211
    expression   go to state 143
    expr         go to state 104
    term         go to state 105
    factor       go to state 106


State 151

  148 factor: ODD LP • args_list RP

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 92
    CHR         shift, and go to state 93
    ODD         shift, and go to state 94
    ORD         shift, and go to state 95
    PRED        shift, and go to state 96
    SUCC        shift, and go to state 97
    MINUS       shift, and go to state 98
    NOT         shift, and go to state 99
    LP          shift, and go to state 100

    const_value  go to state 101
    identifier   go to state 102
    args_list    go to state 212
    expression   go to state 143
    expr         go to state 104
    term         go to state 105
    factor       go to state 106


State 152

  149 factor: ORD LP • args_list RP

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 92
    CHR         shift, and go to state 93
    ODD         shift, and go to state 94
    ORD         shift, and go to state 95
    PRED        shift, and go to state 96
    SUCC        shift, and go to state 97
    MINUS       shift, and go to state 98
    NOT         shift, and go to state 99
    LP          shift, and go to state 100

    const_value  go to state 101
    identifier   go to state 102
    args_list    go to state 213
    expression   go to state 143
    expr         go to state 104
    term         go to state 105
    factor       go to state 106


State 153

  150 factor: PRED LP • args_list RP

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 92
    CHR         shift, and go to state 93
    ODD         shift, and go to state 94
    ORD         shift, and go to state 95
    PRED        shift, and go to state 96
    SUCC        shift, and go to state 97
    MINUS       shift, and go to state 98
    NOT         shift, and go to state 99
    LP          shift, and go to state 100

    const_value  go to state 101
    identifier   go to state 102
    args_list    go to state 214
    expression   go to state 143
    expr         go to state 104
    term         go to state 105
    factor       go to state 106


State 154

  151 factor: SUCC LP • args_list RP

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 92
    CHR         shift, and go to state 93
    ODD         shift, and go to state 94
    ORD         shift, and go to state 95
    PRED        shift, and go to state 96
    SUCC        shift, and go to state 97
    MINUS       shift, and go to state 98
    NOT         shift, and go to state 99
    LP          shift, and go to state 100

    const_value  go to state 101
    identifier   go to state 102
    args_list    go to state 215
    expression   go to state 143
    expr         go to state 104
    term         go to state 105
    factor       go to state 106


State 155

   37 const_value: INTEGER •
   38            | MINUS INTEGER •

    $end         reduce using rule 37 (const_value)
    $end         [reduce using rule 38 (const_value)]
    FUNCTION     reduce using rule 37 (const_value)
    FUNCTION     [reduce using rule 38 (const_value)]
    PROCEDURE    reduce using rule 37 (const_value)
    PROCEDURE    [reduce using rule 38 (const_value)]
    BBEGIN       reduce using rule 37 (const_value)
    BBEGIN       [reduce using rule 38 (const_value)]
    END          reduce using rule 37 (const_value)
    END          [reduce using rule 38 (const_value)]
    IDENT_NAME   reduce using rule 37 (const_value)
    IDENT_NAME   [reduce using rule 38 (const_value)]
    INTEGER      reduce using rule 37 (const_value)
    INTEGER      [reduce using rule 38 (const_value)]
    READ         reduce using rule 37 (const_value)
    READ         [reduce using rule 38 (const_value)]
    READLN       reduce using rule 37 (const_value)
    READLN       [reduce using rule 38 (const_value)]
    WRITE        reduce using rule 37 (const_value)
    WRITE        [reduce using rule 38 (const_value)]
    WRITELN      reduce using rule 37 (const_value)
    WRITELN      [reduce using rule 38 (const_value)]
    MEMORYREAD   reduce using rule 37 (const_value)
    MEMORYREAD   [reduce using rule 38 (const_value)]
    MEMORYWRITE  reduce using rule 37 (const_value)
    MEMORYWRITE  [reduce using rule 38 (const_value)]
    STACKREAD    reduce using rule 37 (const_value)
    STACKREAD    [reduce using rule 38 (const_value)]
    STACKWRITE   reduce using rule 37 (const_value)
    STACKWRITE   [reduce using rule 38 (const_value)]
    IF           reduce using rule 37 (const_value)
    IF           [reduce using rule 38 (const_value)]
    THEN         reduce using rule 37 (const_value)
    THEN         [reduce using rule 38 (const_value)]
    ELSE         reduce using rule 37 (const_value)
    ELSE         [reduce using rule 38 (const_value)]
    REPEAT       reduce using rule 37 (const_value)
    REPEAT       [reduce using rule 38 (const_value)]
    UNTIL        reduce using rule 37 (const_value)
    UNTIL        [reduce using rule 38 (const_value)]
    WHILE        reduce using rule 37 (const_value)
    WHILE        [reduce using rule 38 (const_value)]
    DO           reduce using rule 37 (const_value)
    DO           [reduce using rule 38 (const_value)]
    CASE         reduce using rule 37 (const_value)
    CASE         [reduce using rule 38 (const_value)]
    TO           reduce using rule 37 (const_value)
    TO           [reduce using rule 38 (const_value)]
    DOWNTO       reduce using rule 37 (const_value)
    DOWNTO       [reduce using rule 38 (const_value)]
    FOR          reduce using rule 37 (const_value)
    FOR          [reduce using rule 38 (const_value)]
    EQUAL        reduce using rule 37 (const_value)
    EQUAL        [reduce using rule 38 (const_value)]
    UNEQUAL      reduce using rule 37 (const_value)
    UNEQUAL      [reduce using rule 38 (const_value)]
    GE           reduce using rule 37 (const_value)
    GE           [reduce using rule 38 (const_value)]
    GT           reduce using rule 37 (const_value)
    GT           [reduce using rule 38 (const_value)]
    LE           reduce using rule 37 (const_value)
    LE           [reduce using rule 38 (const_value)]
    LT           reduce using rule 37 (const_value)
    LT           [reduce using rule 38 (const_value)]
    PLUS         reduce using rule 37 (const_value)
    PLUS         [reduce using rule 38 (const_value)]
    MINUS        reduce using rule 37 (const_value)
    MINUS        [reduce using rule 38 (const_value)]
    MUL          reduce using rule 37 (const_value)
    MUL          [reduce using rule 38 (const_value)]
    DIV          reduce using rule 37 (const_value)
    DIV          [reduce using rule 38 (const_value)]
    OR           reduce using rule 37 (const_value)
    OR           [reduce using rule 38 (const_value)]
    AND          reduce using rule 37 (const_value)
    AND          [reduce using rule 38 (const_value)]
    MOD          reduce using rule 37 (const_value)
    MOD          [reduce using rule 38 (const_value)]
    RB           reduce using rule 37 (const_value)
    RB           [reduce using rule 38 (const_value)]
    RP           reduce using rule 37 (const_value)
    RP           [reduce using rule 38 (const_value)]
    SEMICOLON    reduce using rule 37 (const_value)
    SEMICOLON    [reduce using rule 38 (const_value)]
    DOT          reduce using rule 37 (const_value)
    DOT          [reduce using rule 38 (const_value)]
    COMMA        reduce using rule 37 (const_value)
    COMMA        [reduce using rule 38 (const_value)]
    OF           reduce using rule 37 (const_value)
    OF           [reduce using rule 38 (const_value)]
    GOTO         reduce using rule 37 (const_value)
    GOTO         [reduce using rule 38 (const_value)]
    BREAK        reduce using rule 37 (const_value)
    BREAK        [reduce using rule 38 (const_value)]
    CONTINUE     reduce using rule 37 (const_value)
    CONTINUE     [reduce using rule 38 (const_value)]
    $default     reduce using rule 37 (const_value)


State 156

   43 const_value: MAXINT •
   44            | MINUS MAXINT •

    $end         reduce using rule 43 (const_value)
    $end         [reduce using rule 44 (const_value)]
    FUNCTION     reduce using rule 43 (const_value)
    FUNCTION     [reduce using rule 44 (const_value)]
    PROCEDURE    reduce using rule 43 (const_value)
    PROCEDURE    [reduce using rule 44 (const_value)]
    BBEGIN       reduce using rule 43 (const_value)
    BBEGIN       [reduce using rule 44 (const_value)]
    END          reduce using rule 43 (const_value)
    END          [reduce using rule 44 (const_value)]
    IDENT_NAME   reduce using rule 43 (const_value)
    IDENT_NAME   [reduce using rule 44 (const_value)]
    INTEGER      reduce using rule 43 (const_value)
    INTEGER      [reduce using rule 44 (const_value)]
    READ         reduce using rule 43 (const_value)
    READ         [reduce using rule 44 (const_value)]
    READLN       reduce using rule 43 (const_value)
    READLN       [reduce using rule 44 (const_value)]
    WRITE        reduce using rule 43 (const_value)
    WRITE        [reduce using rule 44 (const_value)]
    WRITELN      reduce using rule 43 (const_value)
    WRITELN      [reduce using rule 44 (const_value)]
    MEMORYREAD   reduce using rule 43 (const_value)
    MEMORYREAD   [reduce using rule 44 (const_value)]
    MEMORYWRITE  reduce using rule 43 (const_value)
    MEMORYWRITE  [reduce using rule 44 (const_value)]
    STACKREAD    reduce using rule 43 (const_value)
    STACKREAD    [reduce using rule 44 (const_value)]
    STACKWRITE   reduce using rule 43 (const_value)
    STACKWRITE   [reduce using rule 44 (const_value)]
    IF           reduce using rule 43 (const_value)
    IF           [reduce using rule 44 (const_value)]
    THEN         reduce using rule 43 (const_value)
    THEN         [reduce using rule 44 (const_value)]
    ELSE         reduce using rule 43 (const_value)
    ELSE         [reduce using rule 44 (const_value)]
    REPEAT       reduce using rule 43 (const_value)
    REPEAT       [reduce using rule 44 (const_value)]
    UNTIL        reduce using rule 43 (const_value)
    UNTIL        [reduce using rule 44 (const_value)]
    WHILE        reduce using rule 43 (const_value)
    WHILE        [reduce using rule 44 (const_value)]
    DO           reduce using rule 43 (const_value)
    DO           [reduce using rule 44 (const_value)]
    CASE         reduce using rule 43 (const_value)
    CASE         [reduce using rule 44 (const_value)]
    TO           reduce using rule 43 (const_value)
    TO           [reduce using rule 44 (const_value)]
    DOWNTO       reduce using rule 43 (const_value)
    DOWNTO       [reduce using rule 44 (const_value)]
    FOR          reduce using rule 43 (const_value)
    FOR          [reduce using rule 44 (const_value)]
    EQUAL        reduce using rule 43 (const_value)
    EQUAL        [reduce using rule 44 (const_value)]
    UNEQUAL      reduce using rule 43 (const_value)
    UNEQUAL      [reduce using rule 44 (const_value)]
    GE           reduce using rule 43 (const_value)
    GE           [reduce using rule 44 (const_value)]
    GT           reduce using rule 43 (const_value)
    GT           [reduce using rule 44 (const_value)]
    LE           reduce using rule 43 (const_value)
    LE           [reduce using rule 44 (const_value)]
    LT           reduce using rule 43 (const_value)
    LT           [reduce using rule 44 (const_value)]
    PLUS         reduce using rule 43 (const_value)
    PLUS         [reduce using rule 44 (const_value)]
    MINUS        reduce using rule 43 (const_value)
    MINUS        [reduce using rule 44 (const_value)]
    MUL          reduce using rule 43 (const_value)
    MUL          [reduce using rule 44 (const_value)]
    DIV          reduce using rule 43 (const_value)
    DIV          [reduce using rule 44 (const_value)]
    OR           reduce using rule 43 (const_value)
    OR           [reduce using rule 44 (const_value)]
    AND          reduce using rule 43 (const_value)
    AND          [reduce using rule 44 (const_value)]
    MOD          reduce using rule 43 (const_value)
    MOD          [reduce using rule 44 (const_value)]
    RB           reduce using rule 43 (const_value)
    RB           [reduce using rule 44 (const_value)]
    RP           reduce using rule 43 (const_value)
    RP           [reduce using rule 44 (const_value)]
    SEMICOLON    reduce using rule 43 (const_value)
    SEMICOLON    [reduce using rule 44 (const_value)]
    DOT          reduce using rule 43 (const_value)
    DOT          [reduce using rule 44 (const_value)]
    COMMA        reduce using rule 43 (const_value)
    COMMA        [reduce using rule 44 (const_value)]
    OF           reduce using rule 43 (const_value)
    OF           [reduce using rule 44 (const_value)]
    GOTO         reduce using rule 43 (const_value)
    GOTO         [reduce using rule 44 (const_value)]
    BREAK        reduce using rule 43 (const_value)
    BREAK        [reduce using rule 44 (const_value)]
    CONTINUE     reduce using rule 43 (const_value)
    CONTINUE     [reduce using rule 44 (const_value)]
    $default     reduce using rule 43 (const_value)


State 157

  143 factor: MINUS factor •

    $default  reduce using rule 143 (factor)


State 158

  142 factor: NOT factor •

    $default  reduce using rule 142 (factor)


State 159

  122 expression: expression • GE expr
  123           | expression • GT expr
  124           | expression • LE expr
  125           | expression • LT expr
  126           | expression • EQUAL expr
  127           | expression • UNEQUAL expr
  141 factor: LP expression • RP

    EQUAL    shift, and go to state 164
    UNEQUAL  shift, and go to state 165
    GE       shift, and go to state 166
    GT       shift, and go to state 167
    LE       shift, and go to state 168
    LT       shift, and go to state 169
    RP       shift, and go to state 216


State 160

  144 factor: identifier LB • expression RB

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 92
    CHR         shift, and go to state 93
    ODD         shift, and go to state 94
    ORD         shift, and go to state 95
    PRED        shift, and go to state 96
    SUCC        shift, and go to state 97
    MINUS       shift, and go to state 98
    NOT         shift, and go to state 99
    LP          shift, and go to state 100

    const_value  go to state 101
    identifier   go to state 102
    expression   go to state 217
    expr         go to state 104
    term         go to state 105
    factor       go to state 106


State 161

  139 factor: identifier LP • args_list RP

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 92
    CHR         shift, and go to state 93
    ODD         shift, and go to state 94
    ORD         shift, and go to state 95
    PRED        shift, and go to state 96
    SUCC        shift, and go to state 97
    MINUS       shift, and go to state 98
    NOT         shift, and go to state 99
    LP          shift, and go to state 100

    const_value  go to state 101
    identifier   go to state 102
    args_list    go to state 218
    expression   go to state 143
    expr         go to state 104
    term         go to state 105
    factor       go to state 106


State 162

  145 factor: identifier DOT • identifier

    IDENT_NAME  shift, and go to state 10

    identifier  go to state 219


State 163

   94 if_stmt: IF expression THEN • stmt else_clause

    BBEGIN       shift, and go to state 16
    IDENT_NAME   shift, and go to state 10
    INTEGER      shift, and go to state 39
    READ         shift, and go to state 40
    READLN       shift, and go to state 41
    WRITE        shift, and go to state 42
    WRITELN      shift, and go to state 43
    MEMORYREAD   shift, and go to state 44
    MEMORYWRITE  shift, and go to state 45
    STACKREAD    shift, and go to state 46
    STACKWRITE   shift, and go to state 47
    IF           shift, and go to state 48
    REPEAT       shift, and go to state 49
    WHILE        shift, and go to state 50
    CASE         shift, and go to state 51
    FOR          shift, and go to state 52
    GOTO         shift, and go to state 53
    BREAK        shift, and go to state 54
    CONTINUE     shift, and go to state 55

    BBEGIN       [reduce using rule 99 (repeat_stmt)]
    IDENT_NAME   [reduce using rule 99 (repeat_stmt)]
    INTEGER      [reduce using rule 99 (repeat_stmt)]
    READ         [reduce using rule 99 (repeat_stmt)]
    READLN       [reduce using rule 99 (repeat_stmt)]
    WRITE        [reduce using rule 99 (repeat_stmt)]
    WRITELN      [reduce using rule 99 (repeat_stmt)]
    MEMORYREAD   [reduce using rule 99 (repeat_stmt)]
    MEMORYWRITE  [reduce using rule 99 (repeat_stmt)]
    STACKREAD    [reduce using rule 99 (repeat_stmt)]
    STACKWRITE   [reduce using rule 99 (repeat_stmt)]
    IF           [reduce using rule 99 (repeat_stmt)]
    REPEAT       [reduce using rule 99 (repeat_stmt)]
    WHILE        [reduce using rule 99 (repeat_stmt)]
    CASE         [reduce using rule 99 (repeat_stmt)]
    FOR          [reduce using rule 99 (repeat_stmt)]
    GOTO         [reduce using rule 99 (repeat_stmt)]
    BREAK        [reduce using rule 99 (repeat_stmt)]
    CONTINUE     [reduce using rule 99 (repeat_stmt)]
    $default     reduce using rule 99 (repeat_stmt)

    identifier     go to state 56
    compound_stmt  go to state 57
    stmt           go to state 220
    no_label_stmt  go to state 59
    assign_stmt    go to state 60
    goto_stmt      go to state 61
    if_stmt        go to state 62
    repeat_stmt    go to state 63
    while_stmt     go to state 64
    case_stmt      go to state 65
    for_stmt       go to state 66
    proc_stmt      go to state 67


State 164

  126 expression: expression EQUAL • expr

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 92
    CHR         shift, and go to state 93
    ODD         shift, and go to state 94
    ORD         shift, and go to state 95
    PRED        shift, and go to state 96
    SUCC        shift, and go to state 97
    MINUS       shift, and go to state 98
    NOT         shift, and go to state 99
    LP          shift, and go to state 100

    const_value  go to state 101
    identifier   go to state 102
    expr         go to state 221
    term         go to state 105
    factor       go to state 106


State 165

  127 expression: expression UNEQUAL • expr

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 92
    CHR         shift, and go to state 93
    ODD         shift, and go to state 94
    ORD         shift, and go to state 95
    PRED        shift, and go to state 96
    SUCC        shift, and go to state 97
    MINUS       shift, and go to state 98
    NOT         shift, and go to state 99
    LP          shift, and go to state 100

    const_value  go to state 101
    identifier   go to state 102
    expr         go to state 222
    term         go to state 105
    factor       go to state 106


State 166

  122 expression: expression GE • expr

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 92
    CHR         shift, and go to state 93
    ODD         shift, and go to state 94
    ORD         shift, and go to state 95
    PRED        shift, and go to state 96
    SUCC        shift, and go to state 97
    MINUS       shift, and go to state 98
    NOT         shift, and go to state 99
    LP          shift, and go to state 100

    const_value  go to state 101
    identifier   go to state 102
    expr         go to state 223
    term         go to state 105
    factor       go to state 106


State 167

  123 expression: expression GT • expr

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 92
    CHR         shift, and go to state 93
    ODD         shift, and go to state 94
    ORD         shift, and go to state 95
    PRED        shift, and go to state 96
    SUCC        shift, and go to state 97
    MINUS       shift, and go to state 98
    NOT         shift, and go to state 99
    LP          shift, and go to state 100

    const_value  go to state 101
    identifier   go to state 102
    expr         go to state 224
    term         go to state 105
    factor       go to state 106


State 168

  124 expression: expression LE • expr

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 92
    CHR         shift, and go to state 93
    ODD         shift, and go to state 94
    ORD         shift, and go to state 95
    PRED        shift, and go to state 96
    SUCC        shift, and go to state 97
    MINUS       shift, and go to state 98
    NOT         shift, and go to state 99
    LP          shift, and go to state 100

    const_value  go to state 101
    identifier   go to state 102
    expr         go to state 225
    term         go to state 105
    factor       go to state 106


State 169

  125 expression: expression LT • expr

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 92
    CHR         shift, and go to state 93
    ODD         shift, and go to state 94
    ORD         shift, and go to state 95
    PRED        shift, and go to state 96
    SUCC        shift, and go to state 97
    MINUS       shift, and go to state 98
    NOT         shift, and go to state 99
    LP          shift, and go to state 100

    const_value  go to state 101
    identifier   go to state 102
    expr         go to state 226
    term         go to state 105
    factor       go to state 106


State 170

   95 if_stmt: IF expression stmt • else_clause

    ELSE  shift, and go to state 227

    ELSE      [reduce using rule 96 (else_clause)]
    $default  reduce using rule 96 (else_clause)

    else_clause  go to state 228


State 171

  129 expr: expr PLUS • term

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 92
    CHR         shift, and go to state 93
    ODD         shift, and go to state 94
    ORD         shift, and go to state 95
    PRED        shift, and go to state 96
    SUCC        shift, and go to state 97
    MINUS       shift, and go to state 98
    NOT         shift, and go to state 99
    LP          shift, and go to state 100

    const_value  go to state 101
    identifier   go to state 102
    term         go to state 229
    factor       go to state 106


State 172

  130 expr: expr MINUS • term

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 92
    CHR         shift, and go to state 93
    ODD         shift, and go to state 94
    ORD         shift, and go to state 95
    PRED        shift, and go to state 96
    SUCC        shift, and go to state 97
    MINUS       shift, and go to state 98
    NOT         shift, and go to state 99
    LP          shift, and go to state 100

    const_value  go to state 101
    identifier   go to state 102
    term         go to state 230
    factor       go to state 106


State 173

  131 expr: expr OR • term

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 92
    CHR         shift, and go to state 93
    ODD         shift, and go to state 94
    ORD         shift, and go to state 95
    PRED        shift, and go to state 96
    SUCC        shift, and go to state 97
    MINUS       shift, and go to state 98
    NOT         shift, and go to state 99
    LP          shift, and go to state 100

    const_value  go to state 101
    identifier   go to state 102
    term         go to state 231
    factor       go to state 106


State 174

  133 term: term MUL • factor

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 92
    CHR         shift, and go to state 93
    ODD         shift, and go to state 94
    ORD         shift, and go to state 95
    PRED        shift, and go to state 96
    SUCC        shift, and go to state 97
    MINUS       shift, and go to state 98
    NOT         shift, and go to state 99
    LP          shift, and go to state 100

    const_value  go to state 101
    identifier   go to state 102
    factor       go to state 232


State 175

  134 term: term DIV • factor

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 92
    CHR         shift, and go to state 93
    ODD         shift, and go to state 94
    ORD         shift, and go to state 95
    PRED        shift, and go to state 96
    SUCC        shift, and go to state 97
    MINUS       shift, and go to state 98
    NOT         shift, and go to state 99
    LP          shift, and go to state 100

    const_value  go to state 101
    identifier   go to state 102
    factor       go to state 233


State 176

  136 term: term AND • factor

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 92
    CHR         shift, and go to state 93
    ODD         shift, and go to state 94
    ORD         shift, and go to state 95
    PRED        shift, and go to state 96
    SUCC        shift, and go to state 97
    MINUS       shift, and go to state 98
    NOT         shift, and go to state 99
    LP          shift, and go to state 100

    const_value  go to state 101
    identifier   go to state 102
    factor       go to state 234


State 177

  135 term: term MOD • factor

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 92
    CHR         shift, and go to state 93
    ODD         shift, and go to state 94
    ORD         shift, and go to state 95
    PRED        shift, and go to state 96
    SUCC        shift, and go to state 97
    MINUS       shift, and go to state 98
    NOT         shift, and go to state 99
    LP          shift, and go to state 100

    const_value  go to state 101
    identifier   go to state 102
    factor       go to state 235


State 178

   98 repeat_stmt: REPEAT stmt_list UNTIL • expression

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 92
    CHR         shift, and go to state 93
    ODD         shift, and go to state 94
    ORD         shift, and go to state 95
    PRED        shift, and go to state 96
    SUCC        shift, and go to state 97
    MINUS       shift, and go to state 98
    NOT         shift, and go to state 99
    LP          shift, and go to state 100

    const_value  go to state 101
    identifier   go to state 102
    expression   go to state 236
    expr         go to state 104
    term         go to state 105
    factor       go to state 106


State 179

  100 while_stmt: WHILE expression DO • stmt

    BBEGIN       shift, and go to state 16
    IDENT_NAME   shift, and go to state 10
    INTEGER      shift, and go to state 39
    READ         shift, and go to state 40
    READLN       shift, and go to state 41
    WRITE        shift, and go to state 42
    WRITELN      shift, and go to state 43
    MEMORYREAD   shift, and go to state 44
    MEMORYWRITE  shift, and go to state 45
    STACKREAD    shift, and go to state 46
    STACKWRITE   shift, and go to state 47
    IF           shift, and go to state 48
    REPEAT       shift, and go to state 49
    WHILE        shift, and go to state 50
    CASE         shift, and go to state 51
    FOR          shift, and go to state 52
    GOTO         shift, and go to state 53
    BREAK        shift, and go to state 54
    CONTINUE     shift, and go to state 55

    BBEGIN       [reduce using rule 99 (repeat_stmt)]
    IDENT_NAME   [reduce using rule 99 (repeat_stmt)]
    INTEGER      [reduce using rule 99 (repeat_stmt)]
    READ         [reduce using rule 99 (repeat_stmt)]
    READLN       [reduce using rule 99 (repeat_stmt)]
    WRITE        [reduce using rule 99 (repeat_stmt)]
    WRITELN      [reduce using rule 99 (repeat_stmt)]
    MEMORYREAD   [reduce using rule 99 (repeat_stmt)]
    MEMORYWRITE  [reduce using rule 99 (repeat_stmt)]
    STACKREAD    [reduce using rule 99 (repeat_stmt)]
    STACKWRITE   [reduce using rule 99 (repeat_stmt)]
    IF           [reduce using rule 99 (repeat_stmt)]
    REPEAT       [reduce using rule 99 (repeat_stmt)]
    WHILE        [reduce using rule 99 (repeat_stmt)]
    CASE         [reduce using rule 99 (repeat_stmt)]
    FOR          [reduce using rule 99 (repeat_stmt)]
    GOTO         [reduce using rule 99 (repeat_stmt)]
    BREAK        [reduce using rule 99 (repeat_stmt)]
    CONTINUE     [reduce using rule 99 (repeat_stmt)]
    $default     reduce using rule 99 (repeat_stmt)

    identifier     go to state 56
    compound_stmt  go to state 57
    stmt           go to state 237
    no_label_stmt  go to state 59
    assign_stmt    go to state 60
    goto_stmt      go to state 61
    if_stmt        go to state 62
    repeat_stmt    go to state 63
    while_stmt     go to state 64
    case_stmt      go to state 65
    for_stmt       go to state 66
    proc_stmt      go to state 67


State 180

  101 case_stmt: CASE expression OF • case_expr_list END

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    MINUS       shift, and go to state 36
    OTHERWISE   shift, and go to state 238

    const_value     go to state 239
    identifier      go to state 240
    case_expr_list  go to state 241
    case_expr       go to state 242


State 181

  107 for_stmt: FOR identifier ASSIGN • expression TO expression DO stmt
  108         | FOR identifier ASSIGN • expression DOWNTO expression DO stmt

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 92
    CHR         shift, and go to state 93
    ODD         shift, and go to state 94
    ORD         shift, and go to state 95
    PRED        shift, and go to state 96
    SUCC        shift, and go to state 97
    MINUS       shift, and go to state 98
    NOT         shift, and go to state 99
    LP          shift, and go to state 100

    const_value  go to state 101
    identifier   go to state 102
    expression   go to state 243
    expr         go to state 104
    term         go to state 105
    factor       go to state 106


State 182

   90 assign_stmt: identifier ASSIGN expression •
  122 expression: expression • GE expr
  123           | expression • GT expr
  124           | expression • LE expr
  125           | expression • LT expr
  126           | expression • EQUAL expr
  127           | expression • UNEQUAL expr

    EQUAL    shift, and go to state 164
    UNEQUAL  shift, and go to state 165
    GE       shift, and go to state 166
    GT       shift, and go to state 167
    LE       shift, and go to state 168
    LT       shift, and go to state 169

    $default  reduce using rule 90 (assign_stmt)


State 183

   91 assign_stmt: identifier LB expression • RB ASSIGN expression
  122 expression: expression • GE expr
  123           | expression • GT expr
  124           | expression • LE expr
  125           | expression • LT expr
  126           | expression • EQUAL expr
  127           | expression • UNEQUAL expr

    EQUAL    shift, and go to state 164
    UNEQUAL  shift, and go to state 165
    GE       shift, and go to state 166
    GT       shift, and go to state 167
    LE       shift, and go to state 168
    LT       shift, and go to state 169
    RB       shift, and go to state 244


State 184

  110 proc_stmt: identifier LP args_list • RP
  120 args_list: args_list • COMMA expression

    RP     shift, and go to state 245
    COMMA  shift, and go to state 204


State 185

   92 assign_stmt: identifier DOT identifier • ASSIGN expression

    ASSIGN  shift, and go to state 246


State 186

   61 simple_type: LP name_list • RP
   68 name_list: name_list • COMMA identifier

    RP     shift, and go to state 247
    COMMA  shift, and go to state 131


State 187

   59 array_type_decl: ARRAY LB • simple_type RB OF type_decl

    IDENT_NAME     shift, and go to state 10
    INTEGER        shift, and go to state 30
    CHAR           shift, and go to state 31
    STRING         shift, and go to state 32
    TRUE           shift, and go to state 33
    FALSE          shift, and go to state 34
    MAXINT         shift, and go to state 35
    MINUS          shift, and go to state 36
    LP             shift, and go to state 117
    INT_TYPE       shift, and go to state 118
    UNSIGNED_TYPE  shift, and go to state 119
    BOOL_TYPE      shift, and go to state 120
    CHAR_TYPE      shift, and go to state 121

    const_value  go to state 124
    simple_type  go to state 248
    identifier   go to state 129


State 188

   54 record_type_decl: RECORD field_decl_list • END
   55 field_decl_list: field_decl_list • field_decl

    END         shift, and go to state 249
    IDENT_NAME  shift, and go to state 10

    field_decl  go to state 250
    name_list   go to state 190
    identifier  go to state 73


State 189

   56 field_decl_list: field_decl •

    $default  reduce using rule 56 (field_decl_list)


State 190

   57 field_decl: name_list • COLON type_decl SEMICOLON
   58           | name_list • COLON type_decl
   68 name_list: name_list • COMMA identifier

    COMMA  shift, and go to state 131
    COLON  shift, and go to state 251


State 191

   62 simple_type: const_value DOUBLEDOT • const_value

    INTEGER  shift, and go to state 30
    CHAR     shift, and go to state 31
    STRING   shift, and go to state 32
    TRUE     shift, and go to state 33
    FALSE    shift, and go to state 34
    MAXINT   shift, and go to state 35
    MINUS    shift, and go to state 36

    const_value  go to state 252


State 192

   49 type_def: identifier EQUAL type_decl SEMICOLON •

    $default  reduce using rule 49 (type_def)


State 193

   63 simple_type: identifier DOUBLEDOT • identifier

    IDENT_NAME  shift, and go to state 10

    identifier  go to state 253


State 194

   68 name_list: name_list COMMA identifier •

    $default  reduce using rule 68 (name_list)


State 195

   29 var_decl: name_list COLON type_decl • SEMICOLON
   30         | name_list COLON type_decl •

    SEMICOLON  shift, and go to state 254

    $default  reduce using rule 30 (var_decl)


State 196

   20 params: LP • params_decl RP

    VAR         shift, and go to state 255
    IDENT_NAME  shift, and go to state 10

    params_decl  go to state 256
    params_type  go to state 257
    name_list    go to state 258
    identifier   go to state 73


State 197

   16 fun_head: FUNCTION IDENT_NAME params • COLON simple_type

    COLON  shift, and go to state 259


State 198

   18 proc_head: PROCEDURE IDENT_NAME params •

    $default  reduce using rule 18 (proc_head)


State 199

   12 fun_decl: fun_head SEMICOLON routine • SEMICOLON
   13         | fun_head SEMICOLON routine •

    SEMICOLON  shift, and go to state 260

    $default  reduce using rule 13 (fun_decl)


State 200

   14 fun_decl: fun_head routine SEMICOLON •

    $default  reduce using rule 14 (fun_decl)


State 201

   17 proc_decl: proc_head SEMICOLON routine • SEMICOLON

    SEMICOLON  shift, and go to state 261


State 202

  111 proc_stmt: READ LP factor RP •

    $default  reduce using rule 111 (proc_stmt)


State 203

  113 proc_stmt: WRITE LP args_list RP •

    $default  reduce using rule 113 (proc_stmt)


State 204

  120 args_list: args_list COMMA • expression

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 92
    CHR         shift, and go to state 93
    ODD         shift, and go to state 94
    ORD         shift, and go to state 95
    PRED        shift, and go to state 96
    SUCC        shift, and go to state 97
    MINUS       shift, and go to state 98
    NOT         shift, and go to state 99
    LP          shift, and go to state 100

    const_value  go to state 101
    identifier   go to state 102
    expression   go to state 262
    expr         go to state 104
    term         go to state 105
    factor       go to state 106


State 205

  115 proc_stmt: WRITELN LP args_list RP •

    $default  reduce using rule 115 (proc_stmt)


State 206

  116 proc_stmt: MEMORYREAD LP args_list RP •

    $default  reduce using rule 116 (proc_stmt)


State 207

  117 proc_stmt: MEMORYWRITE LP args_list RP •

    $default  reduce using rule 117 (proc_stmt)


State 208

  118 proc_stmt: STACKREAD LP args_list RP •

    $default  reduce using rule 118 (proc_stmt)


State 209

  119 proc_stmt: STACKWRITE LP args_list RP •

    $default  reduce using rule 119 (proc_stmt)


State 210

  120 args_list: args_list • COMMA expression
  146 factor: ABS LP args_list • RP

    RP     shift, and go to state 263
    COMMA  shift, and go to state 204


State 211

  120 args_list: args_list • COMMA expression
  147 factor: CHR LP args_list • RP

    RP     shift, and go to state 264
    COMMA  shift, and go to state 204


State 212

  120 args_list: args_list • COMMA expression
  148 factor: ODD LP args_list • RP

    RP     shift, and go to state 265
    COMMA  shift, and go to state 204


State 213

  120 args_list: args_list • COMMA expression
  149 factor: ORD LP args_list • RP

    RP     shift, and go to state 266
    COMMA  shift, and go to state 204


State 214

  120 args_list: args_list • COMMA expression
  150 factor: PRED LP args_list • RP

    RP     shift, and go to state 267
    COMMA  shift, and go to state 204


State 215

  120 args_list: args_list • COMMA expression
  151 factor: SUCC LP args_list • RP

    RP     shift, and go to state 268
    COMMA  shift, and go to state 204


State 216

  141 factor: LP expression RP •

    $default  reduce using rule 141 (factor)


State 217

  122 expression: expression • GE expr
  123           | expression • GT expr
  124           | expression • LE expr
  125           | expression • LT expr
  126           | expression • EQUAL expr
  127           | expression • UNEQUAL expr
  144 factor: identifier LB expression • RB

    EQUAL    shift, and go to state 164
    UNEQUAL  shift, and go to state 165
    GE       shift, and go to state 166
    GT       shift, and go to state 167
    LE       shift, and go to state 168
    LT       shift, and go to state 169
    RB       shift, and go to state 269


State 218

  120 args_list: args_list • COMMA expression
  139 factor: identifier LP args_list • RP

    RP     shift, and go to state 270
    COMMA  shift, and go to state 204


State 219

  145 factor: identifier DOT identifier •

    $default  reduce using rule 145 (factor)


State 220

   94 if_stmt: IF expression THEN stmt • else_clause

    ELSE  shift, and go to state 227

    ELSE      [reduce using rule 96 (else_clause)]
    $default  reduce using rule 96 (else_clause)

    else_clause  go to state 271


State 221

  126 expression: expression EQUAL expr •
  129 expr: expr • PLUS term
  130     | expr • MINUS term
  131     | expr • OR term

    PLUS   shift, and go to state 171
    MINUS  shift, and go to state 172
    OR     shift, and go to state 173

    $default  reduce using rule 126 (expression)


State 222

  127 expression: expression UNEQUAL expr •
  129 expr: expr • PLUS term
  130     | expr • MINUS term
  131     | expr • OR term

    PLUS   shift, and go to state 171
    MINUS  shift, and go to state 172
    OR     shift, and go to state 173

    $default  reduce using rule 127 (expression)


State 223

  122 expression: expression GE expr •
  129 expr: expr • PLUS term
  130     | expr • MINUS term
  131     | expr • OR term

    PLUS   shift, and go to state 171
    MINUS  shift, and go to state 172
    OR     shift, and go to state 173

    $default  reduce using rule 122 (expression)


State 224

  123 expression: expression GT expr •
  129 expr: expr • PLUS term
  130     | expr • MINUS term
  131     | expr • OR term

    PLUS   shift, and go to state 171
    MINUS  shift, and go to state 172
    OR     shift, and go to state 173

    $default  reduce using rule 123 (expression)


State 225

  124 expression: expression LE expr •
  129 expr: expr • PLUS term
  130     | expr • MINUS term
  131     | expr • OR term

    PLUS   shift, and go to state 171
    MINUS  shift, and go to state 172
    OR     shift, and go to state 173

    $default  reduce using rule 124 (expression)


State 226

  125 expression: expression LT expr •
  129 expr: expr • PLUS term
  130     | expr • MINUS term
  131     | expr • OR term

    PLUS   shift, and go to state 171
    MINUS  shift, and go to state 172
    OR     shift, and go to state 173

    $default  reduce using rule 125 (expression)


State 227

   97 else_clause: ELSE • stmt

    BBEGIN       shift, and go to state 16
    IDENT_NAME   shift, and go to state 10
    INTEGER      shift, and go to state 39
    READ         shift, and go to state 40
    READLN       shift, and go to state 41
    WRITE        shift, and go to state 42
    WRITELN      shift, and go to state 43
    MEMORYREAD   shift, and go to state 44
    MEMORYWRITE  shift, and go to state 45
    STACKREAD    shift, and go to state 46
    STACKWRITE   shift, and go to state 47
    IF           shift, and go to state 48
    REPEAT       shift, and go to state 49
    WHILE        shift, and go to state 50
    CASE         shift, and go to state 51
    FOR          shift, and go to state 52
    GOTO         shift, and go to state 53
    BREAK        shift, and go to state 54
    CONTINUE     shift, and go to state 55

    BBEGIN       [reduce using rule 99 (repeat_stmt)]
    IDENT_NAME   [reduce using rule 99 (repeat_stmt)]
    INTEGER      [reduce using rule 99 (repeat_stmt)]
    READ         [reduce using rule 99 (repeat_stmt)]
    READLN       [reduce using rule 99 (repeat_stmt)]
    WRITE        [reduce using rule 99 (repeat_stmt)]
    WRITELN      [reduce using rule 99 (repeat_stmt)]
    MEMORYREAD   [reduce using rule 99 (repeat_stmt)]
    MEMORYWRITE  [reduce using rule 99 (repeat_stmt)]
    STACKREAD    [reduce using rule 99 (repeat_stmt)]
    STACKWRITE   [reduce using rule 99 (repeat_stmt)]
    IF           [reduce using rule 99 (repeat_stmt)]
    REPEAT       [reduce using rule 99 (repeat_stmt)]
    WHILE        [reduce using rule 99 (repeat_stmt)]
    CASE         [reduce using rule 99 (repeat_stmt)]
    FOR          [reduce using rule 99 (repeat_stmt)]
    GOTO         [reduce using rule 99 (repeat_stmt)]
    BREAK        [reduce using rule 99 (repeat_stmt)]
    CONTINUE     [reduce using rule 99 (repeat_stmt)]
    $default     reduce using rule 99 (repeat_stmt)

    identifier     go to state 56
    compound_stmt  go to state 57
    stmt           go to state 272
    no_label_stmt  go to state 59
    assign_stmt    go to state 60
    goto_stmt      go to state 61
    if_stmt        go to state 62
    repeat_stmt    go to state 63
    while_stmt     go to state 64
    case_stmt      go to state 65
    for_stmt       go to state 66
    proc_stmt      go to state 67


State 228

   95 if_stmt: IF expression stmt else_clause •

    $default  reduce using rule 95 (if_stmt)


State 229

  129 expr: expr PLUS term •
  133 term: term • MUL factor
  134     | term • DIV factor
  135     | term • MOD factor
  136     | term • AND factor

    MUL  shift, and go to state 174
    DIV  shift, and go to state 175
    AND  shift, and go to state 176
    MOD  shift, and go to state 177

    $default  reduce using rule 129 (expr)


State 230

  130 expr: expr MINUS term •
  133 term: term • MUL factor
  134     | term • DIV factor
  135     | term • MOD factor
  136     | term • AND factor

    MUL  shift, and go to state 174
    DIV  shift, and go to state 175
    AND  shift, and go to state 176
    MOD  shift, and go to state 177

    $default  reduce using rule 130 (expr)


State 231

  131 expr: expr OR term •
  133 term: term • MUL factor
  134     | term • DIV factor
  135     | term • MOD factor
  136     | term • AND factor

    MUL  shift, and go to state 174
    DIV  shift, and go to state 175
    AND  shift, and go to state 176
    MOD  shift, and go to state 177

    $default  reduce using rule 131 (expr)


State 232

  133 term: term MUL factor •

    $default  reduce using rule 133 (term)


State 233

  134 term: term DIV factor •

    $default  reduce using rule 134 (term)


State 234

  136 term: term AND factor •

    $default  reduce using rule 136 (term)


State 235

  135 term: term MOD factor •

    $default  reduce using rule 135 (term)


State 236

   98 repeat_stmt: REPEAT stmt_list UNTIL expression •
  122 expression: expression • GE expr
  123           | expression • GT expr
  124           | expression • LE expr
  125           | expression • LT expr
  126           | expression • EQUAL expr
  127           | expression • UNEQUAL expr

    EQUAL    shift, and go to state 164
    UNEQUAL  shift, and go to state 165
    GE       shift, and go to state 166
    GT       shift, and go to state 167
    LE       shift, and go to state 168
    LT       shift, and go to state 169

    $default  reduce using rule 98 (repeat_stmt)


State 237

  100 while_stmt: WHILE expression DO stmt •

    $default  reduce using rule 100 (while_stmt)


State 238

  106 case_expr: OTHERWISE • stmt SEMICOLON

    BBEGIN       shift, and go to state 16
    IDENT_NAME   shift, and go to state 10
    INTEGER      shift, and go to state 39
    READ         shift, and go to state 40
    READLN       shift, and go to state 41
    WRITE        shift, and go to state 42
    WRITELN      shift, and go to state 43
    MEMORYREAD   shift, and go to state 44
    MEMORYWRITE  shift, and go to state 45
    STACKREAD    shift, and go to state 46
    STACKWRITE   shift, and go to state 47
    IF           shift, and go to state 48
    REPEAT       shift, and go to state 49
    WHILE        shift, and go to state 50
    CASE         shift, and go to state 51
    FOR          shift, and go to state 52
    GOTO         shift, and go to state 53
    BREAK        shift, and go to state 54
    CONTINUE     shift, and go to state 55

    $default  reduce using rule 99 (repeat_stmt)

    identifier     go to state 56
    compound_stmt  go to state 57
    stmt           go to state 273
    no_label_stmt  go to state 59
    assign_stmt    go to state 60
    goto_stmt      go to state 61
    if_stmt        go to state 62
    repeat_stmt    go to state 63
    while_stmt     go to state 64
    case_stmt      go to state 65
    for_stmt       go to state 66
    proc_stmt      go to state 67


State 239

  104 case_expr: const_value • COLON stmt SEMICOLON

    COLON  shift, and go to state 274


State 240

  105 case_expr: identifier • COLON stmt SEMICOLON

    COLON  shift, and go to state 275


State 241

  101 case_stmt: CASE expression OF case_expr_list • END
  102 case_expr_list: case_expr_list • case_expr

    END         shift, and go to state 276
    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    MINUS       shift, and go to state 36
    OTHERWISE   shift, and go to state 238

    const_value  go to state 239
    identifier   go to state 240
    case_expr    go to state 277


State 242

  103 case_expr_list: case_expr •

    $default  reduce using rule 103 (case_expr_list)


State 243

  107 for_stmt: FOR identifier ASSIGN expression • TO expression DO stmt
  108         | FOR identifier ASSIGN expression • DOWNTO expression DO stmt
  122 expression: expression • GE expr
  123           | expression • GT expr
  124           | expression • LE expr
  125           | expression • LT expr
  126           | expression • EQUAL expr
  127           | expression • UNEQUAL expr

    TO       shift, and go to state 278
    DOWNTO   shift, and go to state 279
    EQUAL    shift, and go to state 164
    UNEQUAL  shift, and go to state 165
    GE       shift, and go to state 166
    GT       shift, and go to state 167
    LE       shift, and go to state 168
    LT       shift, and go to state 169


State 244

   91 assign_stmt: identifier LB expression RB • ASSIGN expression

    ASSIGN  shift, and go to state 280


State 245

  110 proc_stmt: identifier LP args_list RP •

    $default  reduce using rule 110 (proc_stmt)


State 246

   92 assign_stmt: identifier DOT identifier ASSIGN • expression

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 92
    CHR         shift, and go to state 93
    ODD         shift, and go to state 94
    ORD         shift, and go to state 95
    PRED        shift, and go to state 96
    SUCC        shift, and go to state 97
    MINUS       shift, and go to state 98
    NOT         shift, and go to state 99
    LP          shift, and go to state 100

    const_value  go to state 101
    identifier   go to state 102
    expression   go to state 281
    expr         go to state 104
    term         go to state 105
    factor       go to state 106


State 247

   61 simple_type: LP name_list RP •

    $default  reduce using rule 61 (simple_type)


State 248

   59 array_type_decl: ARRAY LB simple_type • RB OF type_decl

    RB  shift, and go to state 282


State 249

   54 record_type_decl: RECORD field_decl_list END •

    $default  reduce using rule 54 (record_type_decl)


State 250

   55 field_decl_list: field_decl_list field_decl •

    $default  reduce using rule 55 (field_decl_list)


State 251

   57 field_decl: name_list COLON • type_decl SEMICOLON
   58           | name_list COLON • type_decl

    IDENT_NAME     shift, and go to state 10
    INTEGER        shift, and go to state 30
    CHAR           shift, and go to state 31
    STRING         shift, and go to state 32
    TRUE           shift, and go to state 33
    FALSE          shift, and go to state 34
    MAXINT         shift, and go to state 35
    MINUS          shift, and go to state 36
    LP             shift, and go to state 117
    INT_TYPE       shift, and go to state 118
    UNSIGNED_TYPE  shift, and go to state 119
    BOOL_TYPE      shift, and go to state 120
    CHAR_TYPE      shift, and go to state 121
    ARRAY          shift, and go to state 122
    RECORD         shift, and go to state 123

    const_value       go to state 124
    type_decl         go to state 283
    record_type_decl  go to state 126
    array_type_decl   go to state 127
    simple_type       go to state 128
    identifier        go to state 129


State 252

   62 simple_type: const_value DOUBLEDOT const_value •

    $default  reduce using rule 62 (simple_type)


State 253

   63 simple_type: identifier DOUBLEDOT identifier •

    $default  reduce using rule 63 (simple_type)


State 254

   29 var_decl: name_list COLON type_decl SEMICOLON •

    $default  reduce using rule 29 (var_decl)


State 255

   23 params_type: VAR • name_list COLON simple_type

    IDENT_NAME  shift, and go to state 10

    name_list   go to state 284
    identifier  go to state 73


State 256

   20 params: LP params_decl • RP
   21 params_decl: params_decl • SEMICOLON params_type

    RP         shift, and go to state 285
    SEMICOLON  shift, and go to state 286


State 257

   22 params_decl: params_type •

    $default  reduce using rule 22 (params_decl)


State 258

   24 params_type: name_list • COLON simple_type
   68 name_list: name_list • COMMA identifier

    COMMA  shift, and go to state 131
    COLON  shift, and go to state 287


State 259

   16 fun_head: FUNCTION IDENT_NAME params COLON • simple_type

    IDENT_NAME     shift, and go to state 10
    INTEGER        shift, and go to state 30
    CHAR           shift, and go to state 31
    STRING         shift, and go to state 32
    TRUE           shift, and go to state 33
    FALSE          shift, and go to state 34
    MAXINT         shift, and go to state 35
    MINUS          shift, and go to state 36
    LP             shift, and go to state 117
    INT_TYPE       shift, and go to state 118
    UNSIGNED_TYPE  shift, and go to state 119
    BOOL_TYPE      shift, and go to state 120
    CHAR_TYPE      shift, and go to state 121

    const_value  go to state 124
    simple_type  go to state 288
    identifier   go to state 129


State 260

   12 fun_decl: fun_head SEMICOLON routine SEMICOLON •

    $default  reduce using rule 12 (fun_decl)


State 261

   17 proc_decl: proc_head SEMICOLON routine SEMICOLON •

    $default  reduce using rule 17 (proc_decl)


State 262

  120 args_list: args_list COMMA expression •
  122 expression: expression • GE expr
  123           | expression • GT expr
  124           | expression • LE expr
  125           | expression • LT expr
  126           | expression • EQUAL expr
  127           | expression • UNEQUAL expr

    EQUAL    shift, and go to state 164
    UNEQUAL  shift, and go to state 165
    GE       shift, and go to state 166
    GT       shift, and go to state 167
    LE       shift, and go to state 168
    LT       shift, and go to state 169

    $default  reduce using rule 120 (args_list)


State 263

  146 factor: ABS LP args_list RP •

    $default  reduce using rule 146 (factor)


State 264

  147 factor: CHR LP args_list RP •

    $default  reduce using rule 147 (factor)


State 265

  148 factor: ODD LP args_list RP •

    $default  reduce using rule 148 (factor)


State 266

  149 factor: ORD LP args_list RP •

    $default  reduce using rule 149 (factor)


State 267

  150 factor: PRED LP args_list RP •

    $default  reduce using rule 150 (factor)


State 268

  151 factor: SUCC LP args_list RP •

    $default  reduce using rule 151 (factor)


State 269

  144 factor: identifier LB expression RB •

    $default  reduce using rule 144 (factor)


State 270

  139 factor: identifier LP args_list RP •

    $default  reduce using rule 139 (factor)


State 271

   94 if_stmt: IF expression THEN stmt else_clause •

    $default  reduce using rule 94 (if_stmt)


State 272

   97 else_clause: ELSE stmt •

    $default  reduce using rule 97 (else_clause)


State 273

  106 case_expr: OTHERWISE stmt • SEMICOLON

    SEMICOLON  shift, and go to state 289


State 274

  104 case_expr: const_value COLON • stmt SEMICOLON

    BBEGIN       shift, and go to state 16
    IDENT_NAME   shift, and go to state 10
    INTEGER      shift, and go to state 39
    READ         shift, and go to state 40
    READLN       shift, and go to state 41
    WRITE        shift, and go to state 42
    WRITELN      shift, and go to state 43
    MEMORYREAD   shift, and go to state 44
    MEMORYWRITE  shift, and go to state 45
    STACKREAD    shift, and go to state 46
    STACKWRITE   shift, and go to state 47
    IF           shift, and go to state 48
    REPEAT       shift, and go to state 49
    WHILE        shift, and go to state 50
    CASE         shift, and go to state 51
    FOR          shift, and go to state 52
    GOTO         shift, and go to state 53
    BREAK        shift, and go to state 54
    CONTINUE     shift, and go to state 55

    $default  reduce using rule 99 (repeat_stmt)

    identifier     go to state 56
    compound_stmt  go to state 57
    stmt           go to state 290
    no_label_stmt  go to state 59
    assign_stmt    go to state 60
    goto_stmt      go to state 61
    if_stmt        go to state 62
    repeat_stmt    go to state 63
    while_stmt     go to state 64
    case_stmt      go to state 65
    for_stmt       go to state 66
    proc_stmt      go to state 67


State 275

  105 case_expr: identifier COLON • stmt SEMICOLON

    BBEGIN       shift, and go to state 16
    IDENT_NAME   shift, and go to state 10
    INTEGER      shift, and go to state 39
    READ         shift, and go to state 40
    READLN       shift, and go to state 41
    WRITE        shift, and go to state 42
    WRITELN      shift, and go to state 43
    MEMORYREAD   shift, and go to state 44
    MEMORYWRITE  shift, and go to state 45
    STACKREAD    shift, and go to state 46
    STACKWRITE   shift, and go to state 47
    IF           shift, and go to state 48
    REPEAT       shift, and go to state 49
    WHILE        shift, and go to state 50
    CASE         shift, and go to state 51
    FOR          shift, and go to state 52
    GOTO         shift, and go to state 53
    BREAK        shift, and go to state 54
    CONTINUE     shift, and go to state 55

    $default  reduce using rule 99 (repeat_stmt)

    identifier     go to state 56
    compound_stmt  go to state 57
    stmt           go to state 291
    no_label_stmt  go to state 59
    assign_stmt    go to state 60
    goto_stmt      go to state 61
    if_stmt        go to state 62
    repeat_stmt    go to state 63
    while_stmt     go to state 64
    case_stmt      go to state 65
    for_stmt       go to state 66
    proc_stmt      go to state 67


State 276

  101 case_stmt: CASE expression OF case_expr_list END •

    $default  reduce using rule 101 (case_stmt)


State 277

  102 case_expr_list: case_expr_list case_expr •

    $default  reduce using rule 102 (case_expr_list)


State 278

  107 for_stmt: FOR identifier ASSIGN expression TO • expression DO stmt

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 92
    CHR         shift, and go to state 93
    ODD         shift, and go to state 94
    ORD         shift, and go to state 95
    PRED        shift, and go to state 96
    SUCC        shift, and go to state 97
    MINUS       shift, and go to state 98
    NOT         shift, and go to state 99
    LP          shift, and go to state 100

    const_value  go to state 101
    identifier   go to state 102
    expression   go to state 292
    expr         go to state 104
    term         go to state 105
    factor       go to state 106


State 279

  108 for_stmt: FOR identifier ASSIGN expression DOWNTO • expression DO stmt

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 92
    CHR         shift, and go to state 93
    ODD         shift, and go to state 94
    ORD         shift, and go to state 95
    PRED        shift, and go to state 96
    SUCC        shift, and go to state 97
    MINUS       shift, and go to state 98
    NOT         shift, and go to state 99
    LP          shift, and go to state 100

    const_value  go to state 101
    identifier   go to state 102
    expression   go to state 293
    expr         go to state 104
    term         go to state 105
    factor       go to state 106


State 280

   91 assign_stmt: identifier LB expression RB ASSIGN • expression

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 92
    CHR         shift, and go to state 93
    ODD         shift, and go to state 94
    ORD         shift, and go to state 95
    PRED        shift, and go to state 96
    SUCC        shift, and go to state 97
    MINUS       shift, and go to state 98
    NOT         shift, and go to state 99
    LP          shift, and go to state 100

    const_value  go to state 101
    identifier   go to state 102
    expression   go to state 294
    expr         go to state 104
    term         go to state 105
    factor       go to state 106


State 281

   92 assign_stmt: identifier DOT identifier ASSIGN expression •
  122 expression: expression • GE expr
  123           | expression • GT expr
  124           | expression • LE expr
  125           | expression • LT expr
  126           | expression • EQUAL expr
  127           | expression • UNEQUAL expr

    EQUAL    shift, and go to state 164
    UNEQUAL  shift, and go to state 165
    GE       shift, and go to state 166
    GT       shift, and go to state 167
    LE       shift, and go to state 168
    LT       shift, and go to state 169

    $default  reduce using rule 92 (assign_stmt)


State 282

   59 array_type_decl: ARRAY LB simple_type RB • OF type_decl

    OF  shift, and go to state 295


State 283

   57 field_decl: name_list COLON type_decl • SEMICOLON
   58           | name_list COLON type_decl •

    SEMICOLON  shift, and go to state 296

    $default  reduce using rule 58 (field_decl)


State 284

   23 params_type: VAR name_list • COLON simple_type
   68 name_list: name_list • COMMA identifier

    COMMA  shift, and go to state 131
    COLON  shift, and go to state 297


State 285

   20 params: LP params_decl RP •

    $default  reduce using rule 20 (params)


State 286

   21 params_decl: params_decl SEMICOLON • params_type

    VAR         shift, and go to state 255
    IDENT_NAME  shift, and go to state 10

    params_type  go to state 298
    name_list    go to state 258
    identifier   go to state 73


State 287

   24 params_type: name_list COLON • simple_type

    IDENT_NAME     shift, and go to state 10
    INTEGER        shift, and go to state 30
    CHAR           shift, and go to state 31
    STRING         shift, and go to state 32
    TRUE           shift, and go to state 33
    FALSE          shift, and go to state 34
    MAXINT         shift, and go to state 35
    MINUS          shift, and go to state 36
    LP             shift, and go to state 117
    INT_TYPE       shift, and go to state 118
    UNSIGNED_TYPE  shift, and go to state 119
    BOOL_TYPE      shift, and go to state 120
    CHAR_TYPE      shift, and go to state 121

    const_value  go to state 124
    simple_type  go to state 299
    identifier   go to state 129


State 288

   16 fun_head: FUNCTION IDENT_NAME params COLON simple_type •

    $default  reduce using rule 16 (fun_head)


State 289

  106 case_expr: OTHERWISE stmt SEMICOLON •

    $default  reduce using rule 106 (case_expr)


State 290

  104 case_expr: const_value COLON stmt • SEMICOLON

    SEMICOLON  shift, and go to state 300


State 291

  105 case_expr: identifier COLON stmt • SEMICOLON

    SEMICOLON  shift, and go to state 301


State 292

  107 for_stmt: FOR identifier ASSIGN expression TO expression • DO stmt
  122 expression: expression • GE expr
  123           | expression • GT expr
  124           | expression • LE expr
  125           | expression • LT expr
  126           | expression • EQUAL expr
  127           | expression • UNEQUAL expr

    DO       shift, and go to state 302
    EQUAL    shift, and go to state 164
    UNEQUAL  shift, and go to state 165
    GE       shift, and go to state 166
    GT       shift, and go to state 167
    LE       shift, and go to state 168
    LT       shift, and go to state 169


State 293

  108 for_stmt: FOR identifier ASSIGN expression DOWNTO expression • DO stmt
  122 expression: expression • GE expr
  123           | expression • GT expr
  124           | expression • LE expr
  125           | expression • LT expr
  126           | expression • EQUAL expr
  127           | expression • UNEQUAL expr

    DO       shift, and go to state 303
    EQUAL    shift, and go to state 164
    UNEQUAL  shift, and go to state 165
    GE       shift, and go to state 166
    GT       shift, and go to state 167
    LE       shift, and go to state 168
    LT       shift, and go to state 169


State 294

   91 assign_stmt: identifier LB expression RB ASSIGN expression •
  122 expression: expression • GE expr
  123           | expression • GT expr
  124           | expression • LE expr
  125           | expression • LT expr
  126           | expression • EQUAL expr
  127           | expression • UNEQUAL expr

    EQUAL    shift, and go to state 164
    UNEQUAL  shift, and go to state 165
    GE       shift, and go to state 166
    GT       shift, and go to state 167
    LE       shift, and go to state 168
    LT       shift, and go to state 169

    $default  reduce using rule 91 (assign_stmt)


State 295

   59 array_type_decl: ARRAY LB simple_type RB OF • type_decl

    IDENT_NAME     shift, and go to state 10
    INTEGER        shift, and go to state 30
    CHAR           shift, and go to state 31
    STRING         shift, and go to state 32
    TRUE           shift, and go to state 33
    FALSE          shift, and go to state 34
    MAXINT         shift, and go to state 35
    MINUS          shift, and go to state 36
    LP             shift, and go to state 117
    INT_TYPE       shift, and go to state 118
    UNSIGNED_TYPE  shift, and go to state 119
    BOOL_TYPE      shift, and go to state 120
    CHAR_TYPE      shift, and go to state 121
    ARRAY          shift, and go to state 122
    RECORD         shift, and go to state 123

    const_value       go to state 124
    type_decl         go to state 304
    record_type_decl  go to state 126
    array_type_decl   go to state 127
    simple_type       go to state 128
    identifier        go to state 129


State 296

   57 field_decl: name_list COLON type_decl SEMICOLON •

    $default  reduce using rule 57 (field_decl)


State 297

   23 params_type: VAR name_list COLON • simple_type

    IDENT_NAME     shift, and go to state 10
    INTEGER        shift, and go to state 30
    CHAR           shift, and go to state 31
    STRING         shift, and go to state 32
    TRUE           shift, and go to state 33
    FALSE          shift, and go to state 34
    MAXINT         shift, and go to state 35
    MINUS          shift, and go to state 36
    LP             shift, and go to state 117
    INT_TYPE       shift, and go to state 118
    UNSIGNED_TYPE  shift, and go to state 119
    BOOL_TYPE      shift, and go to state 120
    CHAR_TYPE      shift, and go to state 121

    const_value  go to state 124
    simple_type  go to state 305
    identifier   go to state 129


State 298

   21 params_decl: params_decl SEMICOLON params_type •

    $default  reduce using rule 21 (params_decl)


State 299

   24 params_type: name_list COLON simple_type •

    $default  reduce using rule 24 (params_type)


State 300

  104 case_expr: const_value COLON stmt SEMICOLON •

    $default  reduce using rule 104 (case_expr)


State 301

  105 case_expr: identifier COLON stmt SEMICOLON •

    $default  reduce using rule 105 (case_expr)


State 302

  107 for_stmt: FOR identifier ASSIGN expression TO expression DO • stmt

    BBEGIN       shift, and go to state 16
    IDENT_NAME   shift, and go to state 10
    INTEGER      shift, and go to state 39
    READ         shift, and go to state 40
    READLN       shift, and go to state 41
    WRITE        shift, and go to state 42
    WRITELN      shift, and go to state 43
    MEMORYREAD   shift, and go to state 44
    MEMORYWRITE  shift, and go to state 45
    STACKREAD    shift, and go to state 46
    STACKWRITE   shift, and go to state 47
    IF           shift, and go to state 48
    REPEAT       shift, and go to state 49
    WHILE        shift, and go to state 50
    CASE         shift, and go to state 51
    FOR          shift, and go to state 52
    GOTO         shift, and go to state 53
    BREAK        shift, and go to state 54
    CONTINUE     shift, and go to state 55

    BBEGIN       [reduce using rule 99 (repeat_stmt)]
    IDENT_NAME   [reduce using rule 99 (repeat_stmt)]
    INTEGER      [reduce using rule 99 (repeat_stmt)]
    READ         [reduce using rule 99 (repeat_stmt)]
    READLN       [reduce using rule 99 (repeat_stmt)]
    WRITE        [reduce using rule 99 (repeat_stmt)]
    WRITELN      [reduce using rule 99 (repeat_stmt)]
    MEMORYREAD   [reduce using rule 99 (repeat_stmt)]
    MEMORYWRITE  [reduce using rule 99 (repeat_stmt)]
    STACKREAD    [reduce using rule 99 (repeat_stmt)]
    STACKWRITE   [reduce using rule 99 (repeat_stmt)]
    IF           [reduce using rule 99 (repeat_stmt)]
    REPEAT       [reduce using rule 99 (repeat_stmt)]
    WHILE        [reduce using rule 99 (repeat_stmt)]
    CASE         [reduce using rule 99 (repeat_stmt)]
    FOR          [reduce using rule 99 (repeat_stmt)]
    GOTO         [reduce using rule 99 (repeat_stmt)]
    BREAK        [reduce using rule 99 (repeat_stmt)]
    CONTINUE     [reduce using rule 99 (repeat_stmt)]
    $default     reduce using rule 99 (repeat_stmt)

    identifier     go to state 56
    compound_stmt  go to state 57
    stmt           go to state 306
    no_label_stmt  go to state 59
    assign_stmt    go to state 60
    goto_stmt      go to state 61
    if_stmt        go to state 62
    repeat_stmt    go to state 63
    while_stmt     go to state 64
    case_stmt      go to state 65
    for_stmt       go to state 66
    proc_stmt      go to state 67


State 303

  108 for_stmt: FOR identifier ASSIGN expression DOWNTO expression DO • stmt

    BBEGIN       shift, and go to state 16
    IDENT_NAME   shift, and go to state 10
    INTEGER      shift, and go to state 39
    READ         shift, and go to state 40
    READLN       shift, and go to state 41
    WRITE        shift, and go to state 42
    WRITELN      shift, and go to state 43
    MEMORYREAD   shift, and go to state 44
    MEMORYWRITE  shift, and go to state 45
    STACKREAD    shift, and go to state 46
    STACKWRITE   shift, and go to state 47
    IF           shift, and go to state 48
    REPEAT       shift, and go to state 49
    WHILE        shift, and go to state 50
    CASE         shift, and go to state 51
    FOR          shift, and go to state 52
    GOTO         shift, and go to state 53
    BREAK        shift, and go to state 54
    CONTINUE     shift, and go to state 55

    BBEGIN       [reduce using rule 99 (repeat_stmt)]
    IDENT_NAME   [reduce using rule 99 (repeat_stmt)]
    INTEGER      [reduce using rule 99 (repeat_stmt)]
    READ         [reduce using rule 99 (repeat_stmt)]
    READLN       [reduce using rule 99 (repeat_stmt)]
    WRITE        [reduce using rule 99 (repeat_stmt)]
    WRITELN      [reduce using rule 99 (repeat_stmt)]
    MEMORYREAD   [reduce using rule 99 (repeat_stmt)]
    MEMORYWRITE  [reduce using rule 99 (repeat_stmt)]
    STACKREAD    [reduce using rule 99 (repeat_stmt)]
    STACKWRITE   [reduce using rule 99 (repeat_stmt)]
    IF           [reduce using rule 99 (repeat_stmt)]
    REPEAT       [reduce using rule 99 (repeat_stmt)]
    WHILE        [reduce using rule 99 (repeat_stmt)]
    CASE         [reduce using rule 99 (repeat_stmt)]
    FOR          [reduce using rule 99 (repeat_stmt)]
    GOTO         [reduce using rule 99 (repeat_stmt)]
    BREAK        [reduce using rule 99 (repeat_stmt)]
    CONTINUE     [reduce using rule 99 (repeat_stmt)]
    $default     reduce using rule 99 (repeat_stmt)

    identifier     go to state 56
    compound_stmt  go to state 57
    stmt           go to state 307
    no_label_stmt  go to state 59
    assign_stmt    go to state 60
    goto_stmt      go to state 61
    if_stmt        go to state 62
    repeat_stmt    go to state 63
    while_stmt     go to state 64
    case_stmt      go to state 65
    for_stmt       go to state 66
    proc_stmt      go to state 67


State 304

   59 array_type_decl: ARRAY LB simple_type RB OF type_decl •

    $default  reduce using rule 59 (array_type_decl)


State 305

   23 params_type: VAR name_list COLON simple_type •

    $default  reduce using rule 23 (params_type)


State 306

  107 for_stmt: FOR identifier ASSIGN expression TO expression DO stmt •

    $default  reduce using rule 107 (for_stmt)


State 307

  108 for_stmt: FOR identifier ASSIGN expression DOWNTO expression DO stmt •

    $default  reduce using rule 108 (for_stmt)
