Terminals unused in grammar

    BOOLEAN
    ERROR


State 24 conflicts: 20 shift/reduce, 27 reduce/reduce
State 29 conflicts: 2 shift/reduce
State 56 conflicts: 2 shift/reduce, 1 reduce/reduce
State 58 conflicts: 1 shift/reduce
State 67 conflicts: 19 shift/reduce
State 86 conflicts: 18 shift/reduce
State 107 conflicts: 2 shift/reduce
State 108 conflicts: 19 shift/reduce
State 112 conflicts: 1 shift/reduce
State 113 conflicts: 20 shift/reduce
State 167 conflicts: 48 reduce/reduce
State 168 conflicts: 48 reduce/reduce
State 173 conflicts: 19 shift/reduce
State 180 conflicts: 1 shift/reduce
State 189 conflicts: 19 shift/reduce
State 234 conflicts: 1 shift/reduce
State 241 conflicts: 19 shift/reduce


Grammar

    0 $accept: program $end

    1 program: PROGRAM IDENT_NAME SEMICOLON routine DOT
    2        | PROGRAM IDENT_NAME SEMICOLON routine
    3        | PROGRAM IDENT_NAME routine DOT
    4        | PROGRAM IDENT_NAME routine

    5 routine: routine_head routine_body

    6 routine_head: const_part type_part var_part routine_part

    7 routine_part: ε
    8             | routine_part fun_decl
    9             | routine_part proc_decl
   10             | fun_decl
   11             | proc_decl

   12 fun_decl: fun_head SEMICOLON routine SEMICOLON
   13         | fun_head SEMICOLON routine
   14         | fun_head routine SEMICOLON
   15         | fun_head routine

   16 fun_head: FUNCTION IDENT_NAME params COLON simple_type

   17 proc_decl: proc_head SEMICOLON routine SEMICOLON
   18          | proc_head routine SEMICOLON
   19          | proc_head SEMICOLON routine
   20          | proc_head routine

   21 proc_head: PROCEDURE IDENT_NAME params

   22 params: ε
   23       | LP params_decl RP

   24 params_decl: params_decl SEMICOLON params_type
   25            | params_type

   26 params_type: VAR name_list COLON simple_type
   27            | name_list COLON simple_type

   28 var_part: ε
   29         | VAR var_decl_list

   30 var_decl_list: var_decl_list var_decl
   31              | var_decl

   32 var_decl: name_list COLON type_decl SEMICOLON
   33         | name_list COLON type_decl

   34 const_part: ε
   35           | CONST const_expr_list

   36 const_expr_list: const_expr_list const_expr
   37                | const_expr

   38 const_expr: identifier EQUAL const_value SEMICOLON
   39           | identifier EQUAL const_value

   40 const_value: INTEGER
   41            | MINUS INTEGER
   42            | CHAR
   43            | STRING
   44            | TRUE
   45            | FALSE
   46            | MAXINT
   47            | MINUS MAXINT

   48 type_part: ε
   49          | TYPE type_decl_list

   50 type_decl_list: type_decl_list type_def
   51               | type_def

   52 type_def: identifier EQUAL type_decl SEMICOLON
   53         | identifier EQUAL type_decl

   54 type_decl: simple_type
   55          | array_type_decl
   56          | record_type_decl

   57 record_type_decl: RECORD field_decl_list END

   58 field_decl_list: field_decl_list field_decl
   59                | field_decl

   60 field_decl: name_list COLON type_decl SEMICOLON
   61           | name_list COLON type_decl

   62 array_type_decl: ARRAY LB simple_type RB OF type_decl

   63 simple_type: identifier
   64            | LP name_list RP
   65            | const_value DOUBLEDOT const_value
   66            | identifier DOUBLEDOT identifier
   67            | INT_TYPE
   68            | BOOL_TYPE
   69            | CHAR_TYPE

   70 name_list: name_list COMMA identifier
   71          | identifier

   72 identifier: IDENT_NAME

   73 routine_body: compound_stmt

   74 compound_stmt: BBEGIN stmt_list END
   75              | BBEGIN stmt_list

   76 stmt_list: ε
   77          | stmt_list stmt SEMICOLON
   78          | stmt_list stmt

   79 stmt: INTEGER COLON no_label_stmt
   80     | no_label_stmt

   81 no_label_stmt: assign_stmt
   82              | compound_stmt
   83              | goto_stmt
   84              | if_stmt
   85              | repeat_stmt
   86              | while_stmt
   87              | case_stmt
   88              | for_stmt
   89              | proc_stmt
   90              | BREAK
   91              | CONTINUE

   92 assign_stmt: lvalue ASSIGN expression

   93 goto_stmt: GOTO INTEGER

   94 if_stmt: IF expression THEN stmt else_clause
   95        | IF expression stmt else_clause

   96 else_clause: ε
   97            | ELSE stmt

   98 repeat_stmt: REPEAT stmt_list UNTIL expression
   99            | ε

  100 while_stmt: WHILE expression DO stmt

  101 case_stmt: CASE expression OF case_expr_list END

  102 case_expr_list: case_expr_list case_expr
  103               | case_expr

  104 case_expr: const_value COLON stmt SEMICOLON
  105          | identifier COLON stmt SEMICOLON
  106          | OTHERWISE stmt SEMICOLON

  107 for_stmt: for_head stmt

  108 for_head: FOR identifier ASSIGN expression TO expression DO
  109         | FOR identifier ASSIGN expression DOWNTO expression DO

  110 proc_stmt: identifier
  111          | identifier LP args_list RP
  112          | READ LP factor RP
  113          | READLN
  114          | WRITE LP args_list RP
  115          | WRITELN
  116          | WRITELN LP args_list RP
  117          | MEMORYREAD LP args_list RP
  118          | MEMORYWRITE LP args_list RP
  119          | STACKREAD LP args_list RP
  120          | STACKWRITE LP args_list RP

  121 args_list: args_list COMMA expression
  122          | expression

  123 expression: expression GE expr
  124           | expression GT expr
  125           | expression LE expr
  126           | expression LT expr
  127           | expression EQUAL expr
  128           | expression UNEQUAL expr
  129           | expr

  130 expr: expr PLUS term
  131     | expr MINUS term
  132     | expr OR term
  133     | term

  134 term: term MUL factor
  135     | term DIV factor
  136     | term MOD factor
  137     | term AND factor
  138     | factor

  139 factor: identifier LP args_list RP
  140       | lvalue
  141       | const_value
  142       | LP expression RP
  143       | NOT factor
  144       | MINUS factor
  145       | ABS LP args_list RP
  146       | CHR LP args_list RP
  147       | ODD LP args_list RP
  148       | ORD LP args_list RP
  149       | PRED LP args_list RP
  150       | SUCC LP args_list RP
  151       | TOINT LP args_list RP
  152       | TOCHAR LP args_list RP
  153       | TOBOOL LP args_list RP

  154 lvalue: identifier
  155       | identifier LB expression RB
  156       | lvalue LB expression RB
  157       | identifier DOT identifier
  158       | lvalue DOT identifier


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    PROGRAM <token> (258) 1 2 3 4
    FUNCTION <token> (259) 16
    PROCEDURE <token> (260) 21
    CONST <token> (261) 35
    TYPE <token> (262) 49
    VAR <token> (263) 26 29
    BBEGIN <token> (264) 74 75
    END <token> (265) 57 74 101
    IDENT_NAME <token> (266) 1 2 3 4 16 21 72
    INTEGER <token> (267) 40 41 79 93
    BOOLEAN <token> (268)
    CHAR <token> (269) 42
    STRING <token> (270) 43
    TRUE <token> (271) 44
    FALSE <token> (272) 45
    MAXINT <token> (273) 46 47
    READ <token> (274) 112
    READLN <token> (275) 113
    WRITE <token> (276) 114
    WRITELN <token> (277) 115 116
    MEMORYREAD <token> (278) 117
    MEMORYWRITE <token> (279) 118
    STACKREAD <token> (280) 119
    STACKWRITE <token> (281) 120
    ABS <token> (282) 145
    CHR <token> (283) 146
    ODD <token> (284) 147
    ORD <token> (285) 148
    PRED <token> (286) 149
    SUCC <token> (287) 150
    TOINT <token> (288) 151
    TOCHAR <token> (289) 152
    TOBOOL <token> (290) 153
    IF <token> (291) 94 95
    THEN <token> (292) 94
    ELSE <token> (293) 97
    REPEAT <token> (294) 98
    UNTIL <token> (295) 98
    WHILE <token> (296) 100
    DO <token> (297) 100 108 109
    CASE <token> (298) 101
    TO <token> (299) 108
    DOWNTO <token> (300) 109
    FOR <token> (301) 108 109
    EQUAL <token> (302) 38 39 52 53 127
    UNEQUAL <token> (303) 128
    GE <token> (304) 123
    GT <token> (305) 124
    LE <token> (306) 125
    LT <token> (307) 126
    ASSIGN <token> (308) 92 108 109
    PLUS <token> (309) 130
    MINUS <token> (310) 41 47 131 144
    MUL <token> (311) 134
    DIV <token> (312) 135
    OR <token> (313) 132
    AND <token> (314) 137
    NOT <token> (315) 143
    MOD <token> (316) 136
    LB <token> (317) 62 155 156
    RB <token> (318) 62 155 156
    LP <token> (319) 23 64 111 112 114 116 117 118 119 120 139 142 145 146 147 148 149 150 151 152 153
    RP <token> (320) 23 64 111 112 114 116 117 118 119 120 139 142 145 146 147 148 149 150 151 152 153
    SEMICOLON <token> (321) 1 2 12 13 14 17 18 19 24 32 38 52 60 77 104 105 106
    DOT <token> (322) 1 3 157 158
    DOUBLEDOT <token> (323) 65 66
    COMMA <token> (324) 70 121
    COLON <token> (325) 16 26 27 32 33 60 61 79 104 105
    INT_TYPE <token> (326) 67
    BOOL_TYPE <token> (327) 68
    CHAR_TYPE <token> (328) 69
    ARRAY <token> (329) 62
    OF <token> (330) 62 101
    RECORD <token> (331) 57
    GOTO <token> (332) 93
    BREAK <token> (333) 90
    CONTINUE <token> (334) 91
    OTHERWISE (335) 106
    ERROR <token> (336)


Nonterminals, with rules where they appear

    $accept (82)
        on left: 0
    program <programNode> (83)
        on left: 1 2 3 4
        on right: 0
    routine <routineNode> (84)
        on left: 5
        on right: 1 2 3 4 12 13 14 15 17 18 19 20
    routine_head <routineHeadNode> (85)
        on left: 6
        on right: 5
    routine_part <routinePartList> (86)
        on left: 7 8 9 10 11
        on right: 6 8 9
    fun_decl <routineDeclarationNode> (87)
        on left: 12 13 14 15
        on right: 8 10
    fun_head <routineDeclarationNode> (88)
        on left: 16
        on right: 12 13 14 15
    proc_decl <routineDeclarationNode> (89)
        on left: 17 18 19 20
        on right: 9 11
    proc_head <routineDeclarationNode> (90)
        on left: 21
        on right: 17 18 19 20
    params <paramsNode> (91)
        on left: 22 23
        on right: 16 21
    params_decl <paramsGroupList> (92)
        on left: 24 25
        on right: 23 24
    params_type <paramsGroupNode> (93)
        on left: 26 27
        on right: 24 25
    var_part <varPartList> (94)
        on left: 28 29
        on right: 6
    var_decl_list <varPartList> (95)
        on left: 30 31
        on right: 29 30
    var_decl <varPartListElement> (96)
        on left: 32 33
        on right: 30 31
    const_part <constPartList> (97)
        on left: 34 35
        on right: 6
    const_expr_list <constPartList> (98)
        on left: 36 37
        on right: 35 36
    const_expr <constPartListElement> (99)
        on left: 38 39
        on right: 36 37
    const_value <constantNode> (100)
        on left: 40 41 42 43 44 45 46 47
        on right: 38 39 65 104 141
    type_part <typePartList> (101)
        on left: 48 49
        on right: 6
    type_decl_list <typePartList> (102)
        on left: 50 51
        on right: 49 50
    type_def <typePartListElement> (103)
        on left: 52 53
        on right: 50 51
    type_decl <typeNode> (104)
        on left: 54 55 56
        on right: 32 33 52 53 60 61 62
    record_type_decl <recordTypeNode> (105)
        on left: 57
        on right: 56
    field_decl_list <fieldDeclList> (106)
        on left: 58 59
        on right: 57 58
    field_decl <fieldDeclListElement> (107)
        on left: 60 61
        on right: 58 59
    array_type_decl <arrayTypeNode> (108)
        on left: 62
        on right: 55
    simple_type <simpleTypeNode> (109)
        on left: 63 64 65 66 67 68 69
        on right: 16 26 27 54 62
    name_list <identifierList> (110)
        on left: 70 71
        on right: 26 27 32 33 60 61 64 70
    identifier <identifierNode> (111)
        on left: 72
        on right: 38 39 52 53 63 66 70 71 105 108 109 110 111 139 154 155 157 158
    routine_body <routineBodyNode> (112)
        on left: 73
        on right: 5
    compound_stmt <compoundStatementNode> (113)
        on left: 74 75
        on right: 73 82
    stmt_list <statementNodeList> (114)
        on left: 76 77 78
        on right: 74 75 77 78 98
    stmt <statementNode> (115)
        on left: 79 80
        on right: 77 78 94 95 97 100 104 105 106 107
    no_label_stmt <statementNode> (116)
        on left: 81 82 83 84 85 86 87 88 89 90 91
        on right: 79 80
    assign_stmt <assignNode> (117)
        on left: 92
        on right: 81
    goto_stmt <gotoNode> (118)
        on left: 93
        on right: 83
    if_stmt <ifNode> (119)
        on left: 94 95
        on right: 84
    else_clause <ifNode> (120)
        on left: 96 97
        on right: 94 95
    repeat_stmt <repeatNode> (121)
        on left: 98 99
        on right: 85
    while_stmt <whileNode> (122)
        on left: 100
        on right: 86
    case_stmt <caseNode> (123)
        on left: 101
        on right: 87
    case_expr_list <caseExprList> (124)
        on left: 102 103
        on right: 101 102
    case_expr <caseExpr> (125)
        on left: 104 105 106
        on right: 102 103
    for_stmt <forNode> (126)
        on left: 107
        on right: 88
    for_head <forNode> (127)
        on left: 108 109
        on right: 107
    proc_stmt <callNode> (128)
        on left: 110 111 112 113 114 115 116 117 118 119 120
        on right: 89
    args_list <argsList> (129)
        on left: 121 122
        on right: 111 114 116 117 118 119 120 121 139 145 146 147 148 149 150 151 152 153
    expression <expressionNode> (130)
        on left: 123 124 125 126 127 128 129
        on right: 92 94 95 98 100 101 108 109 121 122 123 124 125 126 127 128 142 155 156
    expr <expressionNode> (131)
        on left: 130 131 132 133
        on right: 123 124 125 126 127 128 129 130 131 132
    term <expressionNode> (132)
        on left: 134 135 136 137 138
        on right: 130 131 132 133 134 135 136 137
    factor <expressionNode> (133)
        on left: 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153
        on right: 112 134 135 136 137 138 143 144
    lvalue <expressionNode> (134)
        on left: 154 155 156 157 158
        on right: 92 140 156 158


State 0

    0 $accept: • program $end

    PROGRAM  shift, and go to state 1

    program  go to state 2


State 1

    1 program: PROGRAM • IDENT_NAME SEMICOLON routine DOT
    2        | PROGRAM • IDENT_NAME SEMICOLON routine
    3        | PROGRAM • IDENT_NAME routine DOT
    4        | PROGRAM • IDENT_NAME routine

    IDENT_NAME  shift, and go to state 3


State 2

    0 $accept: program • $end

    $end  shift, and go to state 4


State 3

    1 program: PROGRAM IDENT_NAME • SEMICOLON routine DOT
    2        | PROGRAM IDENT_NAME • SEMICOLON routine
    3        | PROGRAM IDENT_NAME • routine DOT
    4        | PROGRAM IDENT_NAME • routine

    CONST      shift, and go to state 5
    SEMICOLON  shift, and go to state 6

    $default  reduce using rule 34 (const_part)

    routine       go to state 7
    routine_head  go to state 8
    const_part    go to state 9


State 4

    0 $accept: program $end •

    $default  accept


State 5

   35 const_part: CONST • const_expr_list

    IDENT_NAME  shift, and go to state 10

    const_expr_list  go to state 11
    const_expr       go to state 12
    identifier       go to state 13


State 6

    1 program: PROGRAM IDENT_NAME SEMICOLON • routine DOT
    2        | PROGRAM IDENT_NAME SEMICOLON • routine

    CONST  shift, and go to state 5

    $default  reduce using rule 34 (const_part)

    routine       go to state 14
    routine_head  go to state 8
    const_part    go to state 9


State 7

    3 program: PROGRAM IDENT_NAME routine • DOT
    4        | PROGRAM IDENT_NAME routine •

    DOT  shift, and go to state 15

    $default  reduce using rule 4 (program)


State 8

    5 routine: routine_head • routine_body

    BBEGIN  shift, and go to state 16

    routine_body   go to state 17
    compound_stmt  go to state 18


State 9

    6 routine_head: const_part • type_part var_part routine_part

    TYPE  shift, and go to state 19

    $default  reduce using rule 48 (type_part)

    type_part  go to state 20


State 10

   72 identifier: IDENT_NAME •

    $default  reduce using rule 72 (identifier)


State 11

   35 const_part: CONST const_expr_list •
   36 const_expr_list: const_expr_list • const_expr

    IDENT_NAME  shift, and go to state 10

    $default  reduce using rule 35 (const_part)

    const_expr  go to state 21
    identifier  go to state 13


State 12

   37 const_expr_list: const_expr •

    $default  reduce using rule 37 (const_expr_list)


State 13

   38 const_expr: identifier • EQUAL const_value SEMICOLON
   39           | identifier • EQUAL const_value

    EQUAL  shift, and go to state 22


State 14

    1 program: PROGRAM IDENT_NAME SEMICOLON routine • DOT
    2        | PROGRAM IDENT_NAME SEMICOLON routine •

    DOT  shift, and go to state 23

    $default  reduce using rule 2 (program)


State 15

    3 program: PROGRAM IDENT_NAME routine DOT •

    $default  reduce using rule 3 (program)


State 16

   74 compound_stmt: BBEGIN • stmt_list END
   75              | BBEGIN • stmt_list

    $default  reduce using rule 76 (stmt_list)

    stmt_list  go to state 24


State 17

    5 routine: routine_head routine_body •

    $default  reduce using rule 5 (routine)


State 18

   73 routine_body: compound_stmt •

    $default  reduce using rule 73 (routine_body)


State 19

   49 type_part: TYPE • type_decl_list

    IDENT_NAME  shift, and go to state 10

    type_decl_list  go to state 25
    type_def        go to state 26
    identifier      go to state 27


State 20

    6 routine_head: const_part type_part • var_part routine_part

    VAR  shift, and go to state 28

    $default  reduce using rule 28 (var_part)

    var_part  go to state 29


State 21

   36 const_expr_list: const_expr_list const_expr •

    $default  reduce using rule 36 (const_expr_list)


State 22

   38 const_expr: identifier EQUAL • const_value SEMICOLON
   39           | identifier EQUAL • const_value

    INTEGER  shift, and go to state 30
    CHAR     shift, and go to state 31
    STRING   shift, and go to state 32
    TRUE     shift, and go to state 33
    FALSE    shift, and go to state 34
    MAXINT   shift, and go to state 35
    MINUS    shift, and go to state 36

    const_value  go to state 37


State 23

    1 program: PROGRAM IDENT_NAME SEMICOLON routine DOT •

    $default  reduce using rule 1 (program)


State 24

   74 compound_stmt: BBEGIN stmt_list • END
   75              | BBEGIN stmt_list •
   77 stmt_list: stmt_list • stmt SEMICOLON
   78          | stmt_list • stmt

    BBEGIN       shift, and go to state 16
    END          shift, and go to state 38
    IDENT_NAME   shift, and go to state 10
    INTEGER      shift, and go to state 39
    READ         shift, and go to state 40
    READLN       shift, and go to state 41
    WRITE        shift, and go to state 42
    WRITELN      shift, and go to state 43
    MEMORYREAD   shift, and go to state 44
    MEMORYWRITE  shift, and go to state 45
    STACKREAD    shift, and go to state 46
    STACKWRITE   shift, and go to state 47
    IF           shift, and go to state 48
    REPEAT       shift, and go to state 49
    WHILE        shift, and go to state 50
    CASE         shift, and go to state 51
    FOR          shift, and go to state 52
    GOTO         shift, and go to state 53
    BREAK        shift, and go to state 54
    CONTINUE     shift, and go to state 55

    $end         reduce using rule 75 (compound_stmt)
    $end         [reduce using rule 99 (repeat_stmt)]
    FUNCTION     reduce using rule 75 (compound_stmt)
    FUNCTION     [reduce using rule 99 (repeat_stmt)]
    PROCEDURE    reduce using rule 75 (compound_stmt)
    PROCEDURE    [reduce using rule 99 (repeat_stmt)]
    BBEGIN       [reduce using rule 75 (compound_stmt)]
    BBEGIN       [reduce using rule 99 (repeat_stmt)]
    END          [reduce using rule 75 (compound_stmt)]
    END          [reduce using rule 99 (repeat_stmt)]
    IDENT_NAME   [reduce using rule 75 (compound_stmt)]
    IDENT_NAME   [reduce using rule 99 (repeat_stmt)]
    INTEGER      [reduce using rule 75 (compound_stmt)]
    INTEGER      [reduce using rule 99 (repeat_stmt)]
    READ         [reduce using rule 75 (compound_stmt)]
    READ         [reduce using rule 99 (repeat_stmt)]
    READLN       [reduce using rule 75 (compound_stmt)]
    READLN       [reduce using rule 99 (repeat_stmt)]
    WRITE        [reduce using rule 75 (compound_stmt)]
    WRITE        [reduce using rule 99 (repeat_stmt)]
    WRITELN      [reduce using rule 75 (compound_stmt)]
    WRITELN      [reduce using rule 99 (repeat_stmt)]
    MEMORYREAD   [reduce using rule 75 (compound_stmt)]
    MEMORYREAD   [reduce using rule 99 (repeat_stmt)]
    MEMORYWRITE  [reduce using rule 75 (compound_stmt)]
    MEMORYWRITE  [reduce using rule 99 (repeat_stmt)]
    STACKREAD    [reduce using rule 75 (compound_stmt)]
    STACKREAD    [reduce using rule 99 (repeat_stmt)]
    STACKWRITE   [reduce using rule 75 (compound_stmt)]
    STACKWRITE   [reduce using rule 99 (repeat_stmt)]
    IF           [reduce using rule 75 (compound_stmt)]
    IF           [reduce using rule 99 (repeat_stmt)]
    ELSE         reduce using rule 75 (compound_stmt)
    ELSE         [reduce using rule 99 (repeat_stmt)]
    REPEAT       [reduce using rule 75 (compound_stmt)]
    REPEAT       [reduce using rule 99 (repeat_stmt)]
    UNTIL        reduce using rule 75 (compound_stmt)
    UNTIL        [reduce using rule 99 (repeat_stmt)]
    WHILE        [reduce using rule 75 (compound_stmt)]
    WHILE        [reduce using rule 99 (repeat_stmt)]
    CASE         [reduce using rule 75 (compound_stmt)]
    CASE         [reduce using rule 99 (repeat_stmt)]
    FOR          [reduce using rule 75 (compound_stmt)]
    FOR          [reduce using rule 99 (repeat_stmt)]
    SEMICOLON    reduce using rule 75 (compound_stmt)
    SEMICOLON    [reduce using rule 99 (repeat_stmt)]
    DOT          reduce using rule 75 (compound_stmt)
    DOT          [reduce using rule 99 (repeat_stmt)]
    GOTO         [reduce using rule 75 (compound_stmt)]
    GOTO         [reduce using rule 99 (repeat_stmt)]
    BREAK        [reduce using rule 75 (compound_stmt)]
    BREAK        [reduce using rule 99 (repeat_stmt)]
    CONTINUE     [reduce using rule 75 (compound_stmt)]
    CONTINUE     [reduce using rule 99 (repeat_stmt)]
    $default     reduce using rule 75 (compound_stmt)

    identifier     go to state 56
    compound_stmt  go to state 57
    stmt           go to state 58
    no_label_stmt  go to state 59
    assign_stmt    go to state 60
    goto_stmt      go to state 61
    if_stmt        go to state 62
    repeat_stmt    go to state 63
    while_stmt     go to state 64
    case_stmt      go to state 65
    for_stmt       go to state 66
    for_head       go to state 67
    proc_stmt      go to state 68
    lvalue         go to state 69


State 25

   49 type_part: TYPE type_decl_list •
   50 type_decl_list: type_decl_list • type_def

    IDENT_NAME  shift, and go to state 10

    $default  reduce using rule 49 (type_part)

    type_def    go to state 70
    identifier  go to state 27


State 26

   51 type_decl_list: type_def •

    $default  reduce using rule 51 (type_decl_list)


State 27

   52 type_def: identifier • EQUAL type_decl SEMICOLON
   53         | identifier • EQUAL type_decl

    EQUAL  shift, and go to state 71


State 28

   29 var_part: VAR • var_decl_list

    IDENT_NAME  shift, and go to state 10

    var_decl_list  go to state 72
    var_decl       go to state 73
    name_list      go to state 74
    identifier     go to state 75


State 29

    6 routine_head: const_part type_part var_part • routine_part

    FUNCTION   shift, and go to state 76
    PROCEDURE  shift, and go to state 77

    FUNCTION   [reduce using rule 7 (routine_part)]
    PROCEDURE  [reduce using rule 7 (routine_part)]
    $default   reduce using rule 7 (routine_part)

    routine_part  go to state 78
    fun_decl      go to state 79
    fun_head      go to state 80
    proc_decl     go to state 81
    proc_head     go to state 82


State 30

   40 const_value: INTEGER •

    $default  reduce using rule 40 (const_value)


State 31

   42 const_value: CHAR •

    $default  reduce using rule 42 (const_value)


State 32

   43 const_value: STRING •

    $default  reduce using rule 43 (const_value)


State 33

   44 const_value: TRUE •

    $default  reduce using rule 44 (const_value)


State 34

   45 const_value: FALSE •

    $default  reduce using rule 45 (const_value)


State 35

   46 const_value: MAXINT •

    $default  reduce using rule 46 (const_value)


State 36

   41 const_value: MINUS • INTEGER
   47            | MINUS • MAXINT

    INTEGER  shift, and go to state 83
    MAXINT   shift, and go to state 84


State 37

   38 const_expr: identifier EQUAL const_value • SEMICOLON
   39           | identifier EQUAL const_value •

    SEMICOLON  shift, and go to state 85

    $default  reduce using rule 39 (const_expr)


State 38

   74 compound_stmt: BBEGIN stmt_list END •

    $default  reduce using rule 74 (compound_stmt)


State 39

   79 stmt: INTEGER • COLON no_label_stmt

    COLON  shift, and go to state 86


State 40

  112 proc_stmt: READ • LP factor RP

    LP  shift, and go to state 87


State 41

  113 proc_stmt: READLN •

    $default  reduce using rule 113 (proc_stmt)


State 42

  114 proc_stmt: WRITE • LP args_list RP

    LP  shift, and go to state 88


State 43

  115 proc_stmt: WRITELN •
  116          | WRITELN • LP args_list RP

    LP  shift, and go to state 89

    $default  reduce using rule 115 (proc_stmt)


State 44

  117 proc_stmt: MEMORYREAD • LP args_list RP

    LP  shift, and go to state 90


State 45

  118 proc_stmt: MEMORYWRITE • LP args_list RP

    LP  shift, and go to state 91


State 46

  119 proc_stmt: STACKREAD • LP args_list RP

    LP  shift, and go to state 92


State 47

  120 proc_stmt: STACKWRITE • LP args_list RP

    LP  shift, and go to state 93


State 48

   94 if_stmt: IF • expression THEN stmt else_clause
   95        | IF • expression stmt else_clause

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 94
    CHR         shift, and go to state 95
    ODD         shift, and go to state 96
    ORD         shift, and go to state 97
    PRED        shift, and go to state 98
    SUCC        shift, and go to state 99
    TOINT       shift, and go to state 100
    TOCHAR      shift, and go to state 101
    TOBOOL      shift, and go to state 102
    MINUS       shift, and go to state 103
    NOT         shift, and go to state 104
    LP          shift, and go to state 105

    const_value  go to state 106
    identifier   go to state 107
    expression   go to state 108
    expr         go to state 109
    term         go to state 110
    factor       go to state 111
    lvalue       go to state 112


State 49

   98 repeat_stmt: REPEAT • stmt_list UNTIL expression

    $default  reduce using rule 76 (stmt_list)

    stmt_list  go to state 113


State 50

  100 while_stmt: WHILE • expression DO stmt

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 94
    CHR         shift, and go to state 95
    ODD         shift, and go to state 96
    ORD         shift, and go to state 97
    PRED        shift, and go to state 98
    SUCC        shift, and go to state 99
    TOINT       shift, and go to state 100
    TOCHAR      shift, and go to state 101
    TOBOOL      shift, and go to state 102
    MINUS       shift, and go to state 103
    NOT         shift, and go to state 104
    LP          shift, and go to state 105

    const_value  go to state 106
    identifier   go to state 107
    expression   go to state 114
    expr         go to state 109
    term         go to state 110
    factor       go to state 111
    lvalue       go to state 112


State 51

  101 case_stmt: CASE • expression OF case_expr_list END

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 94
    CHR         shift, and go to state 95
    ODD         shift, and go to state 96
    ORD         shift, and go to state 97
    PRED        shift, and go to state 98
    SUCC        shift, and go to state 99
    TOINT       shift, and go to state 100
    TOCHAR      shift, and go to state 101
    TOBOOL      shift, and go to state 102
    MINUS       shift, and go to state 103
    NOT         shift, and go to state 104
    LP          shift, and go to state 105

    const_value  go to state 106
    identifier   go to state 107
    expression   go to state 115
    expr         go to state 109
    term         go to state 110
    factor       go to state 111
    lvalue       go to state 112


State 52

  108 for_head: FOR • identifier ASSIGN expression TO expression DO
  109         | FOR • identifier ASSIGN expression DOWNTO expression DO

    IDENT_NAME  shift, and go to state 10

    identifier  go to state 116


State 53

   93 goto_stmt: GOTO • INTEGER

    INTEGER  shift, and go to state 117


State 54

   90 no_label_stmt: BREAK •

    $default  reduce using rule 90 (no_label_stmt)


State 55

   91 no_label_stmt: CONTINUE •

    $default  reduce using rule 91 (no_label_stmt)


State 56

  110 proc_stmt: identifier •
  111          | identifier • LP args_list RP
  154 lvalue: identifier •
  155       | identifier • LB expression RB
  157       | identifier • DOT identifier

    LB   shift, and go to state 118
    LP   shift, and go to state 119
    DOT  shift, and go to state 120

    ASSIGN    reduce using rule 154 (lvalue)
    LB        [reduce using rule 154 (lvalue)]
    DOT       [reduce using rule 110 (proc_stmt)]
    DOT       [reduce using rule 154 (lvalue)]
    $default  reduce using rule 110 (proc_stmt)


State 57

   82 no_label_stmt: compound_stmt •

    $default  reduce using rule 82 (no_label_stmt)


State 58

   77 stmt_list: stmt_list stmt • SEMICOLON
   78          | stmt_list stmt •

    SEMICOLON  shift, and go to state 121

    SEMICOLON  [reduce using rule 78 (stmt_list)]
    $default   reduce using rule 78 (stmt_list)


State 59

   80 stmt: no_label_stmt •

    $default  reduce using rule 80 (stmt)


State 60

   81 no_label_stmt: assign_stmt •

    $default  reduce using rule 81 (no_label_stmt)


State 61

   83 no_label_stmt: goto_stmt •

    $default  reduce using rule 83 (no_label_stmt)


State 62

   84 no_label_stmt: if_stmt •

    $default  reduce using rule 84 (no_label_stmt)


State 63

   85 no_label_stmt: repeat_stmt •

    $default  reduce using rule 85 (no_label_stmt)


State 64

   86 no_label_stmt: while_stmt •

    $default  reduce using rule 86 (no_label_stmt)


State 65

   87 no_label_stmt: case_stmt •

    $default  reduce using rule 87 (no_label_stmt)


State 66

   88 no_label_stmt: for_stmt •

    $default  reduce using rule 88 (no_label_stmt)


State 67

  107 for_stmt: for_head • stmt

    BBEGIN       shift, and go to state 16
    IDENT_NAME   shift, and go to state 10
    INTEGER      shift, and go to state 39
    READ         shift, and go to state 40
    READLN       shift, and go to state 41
    WRITE        shift, and go to state 42
    WRITELN      shift, and go to state 43
    MEMORYREAD   shift, and go to state 44
    MEMORYWRITE  shift, and go to state 45
    STACKREAD    shift, and go to state 46
    STACKWRITE   shift, and go to state 47
    IF           shift, and go to state 48
    REPEAT       shift, and go to state 49
    WHILE        shift, and go to state 50
    CASE         shift, and go to state 51
    FOR          shift, and go to state 52
    GOTO         shift, and go to state 53
    BREAK        shift, and go to state 54
    CONTINUE     shift, and go to state 55

    BBEGIN       [reduce using rule 99 (repeat_stmt)]
    IDENT_NAME   [reduce using rule 99 (repeat_stmt)]
    INTEGER      [reduce using rule 99 (repeat_stmt)]
    READ         [reduce using rule 99 (repeat_stmt)]
    READLN       [reduce using rule 99 (repeat_stmt)]
    WRITE        [reduce using rule 99 (repeat_stmt)]
    WRITELN      [reduce using rule 99 (repeat_stmt)]
    MEMORYREAD   [reduce using rule 99 (repeat_stmt)]
    MEMORYWRITE  [reduce using rule 99 (repeat_stmt)]
    STACKREAD    [reduce using rule 99 (repeat_stmt)]
    STACKWRITE   [reduce using rule 99 (repeat_stmt)]
    IF           [reduce using rule 99 (repeat_stmt)]
    REPEAT       [reduce using rule 99 (repeat_stmt)]
    WHILE        [reduce using rule 99 (repeat_stmt)]
    CASE         [reduce using rule 99 (repeat_stmt)]
    FOR          [reduce using rule 99 (repeat_stmt)]
    GOTO         [reduce using rule 99 (repeat_stmt)]
    BREAK        [reduce using rule 99 (repeat_stmt)]
    CONTINUE     [reduce using rule 99 (repeat_stmt)]
    $default     reduce using rule 99 (repeat_stmt)

    identifier     go to state 56
    compound_stmt  go to state 57
    stmt           go to state 122
    no_label_stmt  go to state 59
    assign_stmt    go to state 60
    goto_stmt      go to state 61
    if_stmt        go to state 62
    repeat_stmt    go to state 63
    while_stmt     go to state 64
    case_stmt      go to state 65
    for_stmt       go to state 66
    for_head       go to state 67
    proc_stmt      go to state 68
    lvalue         go to state 69


State 68

   89 no_label_stmt: proc_stmt •

    $default  reduce using rule 89 (no_label_stmt)


State 69

   92 assign_stmt: lvalue • ASSIGN expression
  156 lvalue: lvalue • LB expression RB
  158       | lvalue • DOT identifier

    ASSIGN  shift, and go to state 123
    LB      shift, and go to state 124
    DOT     shift, and go to state 125


State 70

   50 type_decl_list: type_decl_list type_def •

    $default  reduce using rule 50 (type_decl_list)


State 71

   52 type_def: identifier EQUAL • type_decl SEMICOLON
   53         | identifier EQUAL • type_decl

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    MINUS       shift, and go to state 36
    LP          shift, and go to state 126
    INT_TYPE    shift, and go to state 127
    BOOL_TYPE   shift, and go to state 128
    CHAR_TYPE   shift, and go to state 129
    ARRAY       shift, and go to state 130
    RECORD      shift, and go to state 131

    const_value       go to state 132
    type_decl         go to state 133
    record_type_decl  go to state 134
    array_type_decl   go to state 135
    simple_type       go to state 136
    identifier        go to state 137


State 72

   29 var_part: VAR var_decl_list •
   30 var_decl_list: var_decl_list • var_decl

    IDENT_NAME  shift, and go to state 10

    $default  reduce using rule 29 (var_part)

    var_decl    go to state 138
    name_list   go to state 74
    identifier  go to state 75


State 73

   31 var_decl_list: var_decl •

    $default  reduce using rule 31 (var_decl_list)


State 74

   32 var_decl: name_list • COLON type_decl SEMICOLON
   33         | name_list • COLON type_decl
   70 name_list: name_list • COMMA identifier

    COMMA  shift, and go to state 139
    COLON  shift, and go to state 140


State 75

   71 name_list: identifier •

    $default  reduce using rule 71 (name_list)


State 76

   16 fun_head: FUNCTION • IDENT_NAME params COLON simple_type

    IDENT_NAME  shift, and go to state 141


State 77

   21 proc_head: PROCEDURE • IDENT_NAME params

    IDENT_NAME  shift, and go to state 142


State 78

    6 routine_head: const_part type_part var_part routine_part •
    8 routine_part: routine_part • fun_decl
    9             | routine_part • proc_decl

    FUNCTION   shift, and go to state 76
    PROCEDURE  shift, and go to state 77

    $default  reduce using rule 6 (routine_head)

    fun_decl   go to state 143
    fun_head   go to state 80
    proc_decl  go to state 144
    proc_head  go to state 82


State 79

   10 routine_part: fun_decl •

    $default  reduce using rule 10 (routine_part)


State 80

   12 fun_decl: fun_head • SEMICOLON routine SEMICOLON
   13         | fun_head • SEMICOLON routine
   14         | fun_head • routine SEMICOLON
   15         | fun_head • routine

    CONST      shift, and go to state 5
    SEMICOLON  shift, and go to state 145

    $default  reduce using rule 34 (const_part)

    routine       go to state 146
    routine_head  go to state 8
    const_part    go to state 9


State 81

   11 routine_part: proc_decl •

    $default  reduce using rule 11 (routine_part)


State 82

   17 proc_decl: proc_head • SEMICOLON routine SEMICOLON
   18          | proc_head • routine SEMICOLON
   19          | proc_head • SEMICOLON routine
   20          | proc_head • routine

    CONST      shift, and go to state 5
    SEMICOLON  shift, and go to state 147

    $default  reduce using rule 34 (const_part)

    routine       go to state 148
    routine_head  go to state 8
    const_part    go to state 9


State 83

   41 const_value: MINUS INTEGER •

    $default  reduce using rule 41 (const_value)


State 84

   47 const_value: MINUS MAXINT •

    $default  reduce using rule 47 (const_value)


State 85

   38 const_expr: identifier EQUAL const_value SEMICOLON •

    $default  reduce using rule 38 (const_expr)


State 86

   79 stmt: INTEGER COLON • no_label_stmt

    BBEGIN       shift, and go to state 16
    IDENT_NAME   shift, and go to state 10
    READ         shift, and go to state 40
    READLN       shift, and go to state 41
    WRITE        shift, and go to state 42
    WRITELN      shift, and go to state 43
    MEMORYREAD   shift, and go to state 44
    MEMORYWRITE  shift, and go to state 45
    STACKREAD    shift, and go to state 46
    STACKWRITE   shift, and go to state 47
    IF           shift, and go to state 48
    REPEAT       shift, and go to state 49
    WHILE        shift, and go to state 50
    CASE         shift, and go to state 51
    FOR          shift, and go to state 52
    GOTO         shift, and go to state 53
    BREAK        shift, and go to state 54
    CONTINUE     shift, and go to state 55

    BBEGIN       [reduce using rule 99 (repeat_stmt)]
    IDENT_NAME   [reduce using rule 99 (repeat_stmt)]
    READ         [reduce using rule 99 (repeat_stmt)]
    READLN       [reduce using rule 99 (repeat_stmt)]
    WRITE        [reduce using rule 99 (repeat_stmt)]
    WRITELN      [reduce using rule 99 (repeat_stmt)]
    MEMORYREAD   [reduce using rule 99 (repeat_stmt)]
    MEMORYWRITE  [reduce using rule 99 (repeat_stmt)]
    STACKREAD    [reduce using rule 99 (repeat_stmt)]
    STACKWRITE   [reduce using rule 99 (repeat_stmt)]
    IF           [reduce using rule 99 (repeat_stmt)]
    REPEAT       [reduce using rule 99 (repeat_stmt)]
    WHILE        [reduce using rule 99 (repeat_stmt)]
    CASE         [reduce using rule 99 (repeat_stmt)]
    FOR          [reduce using rule 99 (repeat_stmt)]
    GOTO         [reduce using rule 99 (repeat_stmt)]
    BREAK        [reduce using rule 99 (repeat_stmt)]
    CONTINUE     [reduce using rule 99 (repeat_stmt)]
    $default     reduce using rule 99 (repeat_stmt)

    identifier     go to state 56
    compound_stmt  go to state 57
    no_label_stmt  go to state 149
    assign_stmt    go to state 60
    goto_stmt      go to state 61
    if_stmt        go to state 62
    repeat_stmt    go to state 63
    while_stmt     go to state 64
    case_stmt      go to state 65
    for_stmt       go to state 66
    for_head       go to state 67
    proc_stmt      go to state 68
    lvalue         go to state 69


State 87

  112 proc_stmt: READ LP • factor RP

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 94
    CHR         shift, and go to state 95
    ODD         shift, and go to state 96
    ORD         shift, and go to state 97
    PRED        shift, and go to state 98
    SUCC        shift, and go to state 99
    TOINT       shift, and go to state 100
    TOCHAR      shift, and go to state 101
    TOBOOL      shift, and go to state 102
    MINUS       shift, and go to state 103
    NOT         shift, and go to state 104
    LP          shift, and go to state 105

    const_value  go to state 106
    identifier   go to state 107
    factor       go to state 150
    lvalue       go to state 112


State 88

  114 proc_stmt: WRITE LP • args_list RP

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 94
    CHR         shift, and go to state 95
    ODD         shift, and go to state 96
    ORD         shift, and go to state 97
    PRED        shift, and go to state 98
    SUCC        shift, and go to state 99
    TOINT       shift, and go to state 100
    TOCHAR      shift, and go to state 101
    TOBOOL      shift, and go to state 102
    MINUS       shift, and go to state 103
    NOT         shift, and go to state 104
    LP          shift, and go to state 105

    const_value  go to state 106
    identifier   go to state 107
    args_list    go to state 151
    expression   go to state 152
    expr         go to state 109
    term         go to state 110
    factor       go to state 111
    lvalue       go to state 112


State 89

  116 proc_stmt: WRITELN LP • args_list RP

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 94
    CHR         shift, and go to state 95
    ODD         shift, and go to state 96
    ORD         shift, and go to state 97
    PRED        shift, and go to state 98
    SUCC        shift, and go to state 99
    TOINT       shift, and go to state 100
    TOCHAR      shift, and go to state 101
    TOBOOL      shift, and go to state 102
    MINUS       shift, and go to state 103
    NOT         shift, and go to state 104
    LP          shift, and go to state 105

    const_value  go to state 106
    identifier   go to state 107
    args_list    go to state 153
    expression   go to state 152
    expr         go to state 109
    term         go to state 110
    factor       go to state 111
    lvalue       go to state 112


State 90

  117 proc_stmt: MEMORYREAD LP • args_list RP

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 94
    CHR         shift, and go to state 95
    ODD         shift, and go to state 96
    ORD         shift, and go to state 97
    PRED        shift, and go to state 98
    SUCC        shift, and go to state 99
    TOINT       shift, and go to state 100
    TOCHAR      shift, and go to state 101
    TOBOOL      shift, and go to state 102
    MINUS       shift, and go to state 103
    NOT         shift, and go to state 104
    LP          shift, and go to state 105

    const_value  go to state 106
    identifier   go to state 107
    args_list    go to state 154
    expression   go to state 152
    expr         go to state 109
    term         go to state 110
    factor       go to state 111
    lvalue       go to state 112


State 91

  118 proc_stmt: MEMORYWRITE LP • args_list RP

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 94
    CHR         shift, and go to state 95
    ODD         shift, and go to state 96
    ORD         shift, and go to state 97
    PRED        shift, and go to state 98
    SUCC        shift, and go to state 99
    TOINT       shift, and go to state 100
    TOCHAR      shift, and go to state 101
    TOBOOL      shift, and go to state 102
    MINUS       shift, and go to state 103
    NOT         shift, and go to state 104
    LP          shift, and go to state 105

    const_value  go to state 106
    identifier   go to state 107
    args_list    go to state 155
    expression   go to state 152
    expr         go to state 109
    term         go to state 110
    factor       go to state 111
    lvalue       go to state 112


State 92

  119 proc_stmt: STACKREAD LP • args_list RP

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 94
    CHR         shift, and go to state 95
    ODD         shift, and go to state 96
    ORD         shift, and go to state 97
    PRED        shift, and go to state 98
    SUCC        shift, and go to state 99
    TOINT       shift, and go to state 100
    TOCHAR      shift, and go to state 101
    TOBOOL      shift, and go to state 102
    MINUS       shift, and go to state 103
    NOT         shift, and go to state 104
    LP          shift, and go to state 105

    const_value  go to state 106
    identifier   go to state 107
    args_list    go to state 156
    expression   go to state 152
    expr         go to state 109
    term         go to state 110
    factor       go to state 111
    lvalue       go to state 112


State 93

  120 proc_stmt: STACKWRITE LP • args_list RP

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 94
    CHR         shift, and go to state 95
    ODD         shift, and go to state 96
    ORD         shift, and go to state 97
    PRED        shift, and go to state 98
    SUCC        shift, and go to state 99
    TOINT       shift, and go to state 100
    TOCHAR      shift, and go to state 101
    TOBOOL      shift, and go to state 102
    MINUS       shift, and go to state 103
    NOT         shift, and go to state 104
    LP          shift, and go to state 105

    const_value  go to state 106
    identifier   go to state 107
    args_list    go to state 157
    expression   go to state 152
    expr         go to state 109
    term         go to state 110
    factor       go to state 111
    lvalue       go to state 112


State 94

  145 factor: ABS • LP args_list RP

    LP  shift, and go to state 158


State 95

  146 factor: CHR • LP args_list RP

    LP  shift, and go to state 159


State 96

  147 factor: ODD • LP args_list RP

    LP  shift, and go to state 160


State 97

  148 factor: ORD • LP args_list RP

    LP  shift, and go to state 161


State 98

  149 factor: PRED • LP args_list RP

    LP  shift, and go to state 162


State 99

  150 factor: SUCC • LP args_list RP

    LP  shift, and go to state 163


State 100

  151 factor: TOINT • LP args_list RP

    LP  shift, and go to state 164


State 101

  152 factor: TOCHAR • LP args_list RP

    LP  shift, and go to state 165


State 102

  153 factor: TOBOOL • LP args_list RP

    LP  shift, and go to state 166


State 103

   41 const_value: MINUS • INTEGER
   47            | MINUS • MAXINT
  144 factor: MINUS • factor

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 167
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 168
    ABS         shift, and go to state 94
    CHR         shift, and go to state 95
    ODD         shift, and go to state 96
    ORD         shift, and go to state 97
    PRED        shift, and go to state 98
    SUCC        shift, and go to state 99
    TOINT       shift, and go to state 100
    TOCHAR      shift, and go to state 101
    TOBOOL      shift, and go to state 102
    MINUS       shift, and go to state 103
    NOT         shift, and go to state 104
    LP          shift, and go to state 105

    const_value  go to state 106
    identifier   go to state 107
    factor       go to state 169
    lvalue       go to state 112


State 104

  143 factor: NOT • factor

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 94
    CHR         shift, and go to state 95
    ODD         shift, and go to state 96
    ORD         shift, and go to state 97
    PRED        shift, and go to state 98
    SUCC        shift, and go to state 99
    TOINT       shift, and go to state 100
    TOCHAR      shift, and go to state 101
    TOBOOL      shift, and go to state 102
    MINUS       shift, and go to state 103
    NOT         shift, and go to state 104
    LP          shift, and go to state 105

    const_value  go to state 106
    identifier   go to state 107
    factor       go to state 170
    lvalue       go to state 112


State 105

  142 factor: LP • expression RP

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 94
    CHR         shift, and go to state 95
    ODD         shift, and go to state 96
    ORD         shift, and go to state 97
    PRED        shift, and go to state 98
    SUCC        shift, and go to state 99
    TOINT       shift, and go to state 100
    TOCHAR      shift, and go to state 101
    TOBOOL      shift, and go to state 102
    MINUS       shift, and go to state 103
    NOT         shift, and go to state 104
    LP          shift, and go to state 105

    const_value  go to state 106
    identifier   go to state 107
    expression   go to state 171
    expr         go to state 109
    term         go to state 110
    factor       go to state 111
    lvalue       go to state 112


State 106

  141 factor: const_value •

    $default  reduce using rule 141 (factor)


State 107

  139 factor: identifier • LP args_list RP
  154 lvalue: identifier •
  155       | identifier • LB expression RB
  157       | identifier • DOT identifier

    LB   shift, and go to state 118
    LP   shift, and go to state 172
    DOT  shift, and go to state 120

    LB        [reduce using rule 154 (lvalue)]
    DOT       [reduce using rule 154 (lvalue)]
    $default  reduce using rule 154 (lvalue)


State 108

   94 if_stmt: IF expression • THEN stmt else_clause
   95        | IF expression • stmt else_clause
  123 expression: expression • GE expr
  124           | expression • GT expr
  125           | expression • LE expr
  126           | expression • LT expr
  127           | expression • EQUAL expr
  128           | expression • UNEQUAL expr

    BBEGIN       shift, and go to state 16
    IDENT_NAME   shift, and go to state 10
    INTEGER      shift, and go to state 39
    READ         shift, and go to state 40
    READLN       shift, and go to state 41
    WRITE        shift, and go to state 42
    WRITELN      shift, and go to state 43
    MEMORYREAD   shift, and go to state 44
    MEMORYWRITE  shift, and go to state 45
    STACKREAD    shift, and go to state 46
    STACKWRITE   shift, and go to state 47
    IF           shift, and go to state 48
    THEN         shift, and go to state 173
    REPEAT       shift, and go to state 49
    WHILE        shift, and go to state 50
    CASE         shift, and go to state 51
    FOR          shift, and go to state 52
    EQUAL        shift, and go to state 174
    UNEQUAL      shift, and go to state 175
    GE           shift, and go to state 176
    GT           shift, and go to state 177
    LE           shift, and go to state 178
    LT           shift, and go to state 179
    GOTO         shift, and go to state 53
    BREAK        shift, and go to state 54
    CONTINUE     shift, and go to state 55

    BBEGIN       [reduce using rule 99 (repeat_stmt)]
    IDENT_NAME   [reduce using rule 99 (repeat_stmt)]
    INTEGER      [reduce using rule 99 (repeat_stmt)]
    READ         [reduce using rule 99 (repeat_stmt)]
    READLN       [reduce using rule 99 (repeat_stmt)]
    WRITE        [reduce using rule 99 (repeat_stmt)]
    WRITELN      [reduce using rule 99 (repeat_stmt)]
    MEMORYREAD   [reduce using rule 99 (repeat_stmt)]
    MEMORYWRITE  [reduce using rule 99 (repeat_stmt)]
    STACKREAD    [reduce using rule 99 (repeat_stmt)]
    STACKWRITE   [reduce using rule 99 (repeat_stmt)]
    IF           [reduce using rule 99 (repeat_stmt)]
    REPEAT       [reduce using rule 99 (repeat_stmt)]
    WHILE        [reduce using rule 99 (repeat_stmt)]
    CASE         [reduce using rule 99 (repeat_stmt)]
    FOR          [reduce using rule 99 (repeat_stmt)]
    GOTO         [reduce using rule 99 (repeat_stmt)]
    BREAK        [reduce using rule 99 (repeat_stmt)]
    CONTINUE     [reduce using rule 99 (repeat_stmt)]
    $default     reduce using rule 99 (repeat_stmt)

    identifier     go to state 56
    compound_stmt  go to state 57
    stmt           go to state 180
    no_label_stmt  go to state 59
    assign_stmt    go to state 60
    goto_stmt      go to state 61
    if_stmt        go to state 62
    repeat_stmt    go to state 63
    while_stmt     go to state 64
    case_stmt      go to state 65
    for_stmt       go to state 66
    for_head       go to state 67
    proc_stmt      go to state 68
    lvalue         go to state 69


State 109

  129 expression: expr •
  130 expr: expr • PLUS term
  131     | expr • MINUS term
  132     | expr • OR term

    PLUS   shift, and go to state 181
    MINUS  shift, and go to state 182
    OR     shift, and go to state 183

    $default  reduce using rule 129 (expression)


State 110

  133 expr: term •
  134 term: term • MUL factor
  135     | term • DIV factor
  136     | term • MOD factor
  137     | term • AND factor

    MUL  shift, and go to state 184
    DIV  shift, and go to state 185
    AND  shift, and go to state 186
    MOD  shift, and go to state 187

    $default  reduce using rule 133 (expr)


State 111

  138 term: factor •

    $default  reduce using rule 138 (term)


State 112

  140 factor: lvalue •
  156 lvalue: lvalue • LB expression RB
  158       | lvalue • DOT identifier

    LB   shift, and go to state 124
    DOT  shift, and go to state 125

    DOT       [reduce using rule 140 (factor)]
    $default  reduce using rule 140 (factor)


State 113

   77 stmt_list: stmt_list • stmt SEMICOLON
   78          | stmt_list • stmt
   98 repeat_stmt: REPEAT stmt_list • UNTIL expression

    BBEGIN       shift, and go to state 16
    IDENT_NAME   shift, and go to state 10
    INTEGER      shift, and go to state 39
    READ         shift, and go to state 40
    READLN       shift, and go to state 41
    WRITE        shift, and go to state 42
    WRITELN      shift, and go to state 43
    MEMORYREAD   shift, and go to state 44
    MEMORYWRITE  shift, and go to state 45
    STACKREAD    shift, and go to state 46
    STACKWRITE   shift, and go to state 47
    IF           shift, and go to state 48
    REPEAT       shift, and go to state 49
    UNTIL        shift, and go to state 188
    WHILE        shift, and go to state 50
    CASE         shift, and go to state 51
    FOR          shift, and go to state 52
    GOTO         shift, and go to state 53
    BREAK        shift, and go to state 54
    CONTINUE     shift, and go to state 55

    BBEGIN       [reduce using rule 99 (repeat_stmt)]
    IDENT_NAME   [reduce using rule 99 (repeat_stmt)]
    INTEGER      [reduce using rule 99 (repeat_stmt)]
    READ         [reduce using rule 99 (repeat_stmt)]
    READLN       [reduce using rule 99 (repeat_stmt)]
    WRITE        [reduce using rule 99 (repeat_stmt)]
    WRITELN      [reduce using rule 99 (repeat_stmt)]
    MEMORYREAD   [reduce using rule 99 (repeat_stmt)]
    MEMORYWRITE  [reduce using rule 99 (repeat_stmt)]
    STACKREAD    [reduce using rule 99 (repeat_stmt)]
    STACKWRITE   [reduce using rule 99 (repeat_stmt)]
    IF           [reduce using rule 99 (repeat_stmt)]
    REPEAT       [reduce using rule 99 (repeat_stmt)]
    UNTIL        [reduce using rule 99 (repeat_stmt)]
    WHILE        [reduce using rule 99 (repeat_stmt)]
    CASE         [reduce using rule 99 (repeat_stmt)]
    FOR          [reduce using rule 99 (repeat_stmt)]
    GOTO         [reduce using rule 99 (repeat_stmt)]
    BREAK        [reduce using rule 99 (repeat_stmt)]
    CONTINUE     [reduce using rule 99 (repeat_stmt)]
    $default     reduce using rule 99 (repeat_stmt)

    identifier     go to state 56
    compound_stmt  go to state 57
    stmt           go to state 58
    no_label_stmt  go to state 59
    assign_stmt    go to state 60
    goto_stmt      go to state 61
    if_stmt        go to state 62
    repeat_stmt    go to state 63
    while_stmt     go to state 64
    case_stmt      go to state 65
    for_stmt       go to state 66
    for_head       go to state 67
    proc_stmt      go to state 68
    lvalue         go to state 69


State 114

  100 while_stmt: WHILE expression • DO stmt
  123 expression: expression • GE expr
  124           | expression • GT expr
  125           | expression • LE expr
  126           | expression • LT expr
  127           | expression • EQUAL expr
  128           | expression • UNEQUAL expr

    DO       shift, and go to state 189
    EQUAL    shift, and go to state 174
    UNEQUAL  shift, and go to state 175
    GE       shift, and go to state 176
    GT       shift, and go to state 177
    LE       shift, and go to state 178
    LT       shift, and go to state 179


State 115

  101 case_stmt: CASE expression • OF case_expr_list END
  123 expression: expression • GE expr
  124           | expression • GT expr
  125           | expression • LE expr
  126           | expression • LT expr
  127           | expression • EQUAL expr
  128           | expression • UNEQUAL expr

    EQUAL    shift, and go to state 174
    UNEQUAL  shift, and go to state 175
    GE       shift, and go to state 176
    GT       shift, and go to state 177
    LE       shift, and go to state 178
    LT       shift, and go to state 179
    OF       shift, and go to state 190


State 116

  108 for_head: FOR identifier • ASSIGN expression TO expression DO
  109         | FOR identifier • ASSIGN expression DOWNTO expression DO

    ASSIGN  shift, and go to state 191


State 117

   93 goto_stmt: GOTO INTEGER •

    $default  reduce using rule 93 (goto_stmt)


State 118

  155 lvalue: identifier LB • expression RB

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 94
    CHR         shift, and go to state 95
    ODD         shift, and go to state 96
    ORD         shift, and go to state 97
    PRED        shift, and go to state 98
    SUCC        shift, and go to state 99
    TOINT       shift, and go to state 100
    TOCHAR      shift, and go to state 101
    TOBOOL      shift, and go to state 102
    MINUS       shift, and go to state 103
    NOT         shift, and go to state 104
    LP          shift, and go to state 105

    const_value  go to state 106
    identifier   go to state 107
    expression   go to state 192
    expr         go to state 109
    term         go to state 110
    factor       go to state 111
    lvalue       go to state 112


State 119

  111 proc_stmt: identifier LP • args_list RP

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 94
    CHR         shift, and go to state 95
    ODD         shift, and go to state 96
    ORD         shift, and go to state 97
    PRED        shift, and go to state 98
    SUCC        shift, and go to state 99
    TOINT       shift, and go to state 100
    TOCHAR      shift, and go to state 101
    TOBOOL      shift, and go to state 102
    MINUS       shift, and go to state 103
    NOT         shift, and go to state 104
    LP          shift, and go to state 105

    const_value  go to state 106
    identifier   go to state 107
    args_list    go to state 193
    expression   go to state 152
    expr         go to state 109
    term         go to state 110
    factor       go to state 111
    lvalue       go to state 112


State 120

  157 lvalue: identifier DOT • identifier

    IDENT_NAME  shift, and go to state 10

    identifier  go to state 194


State 121

   77 stmt_list: stmt_list stmt SEMICOLON •

    $default  reduce using rule 77 (stmt_list)


State 122

  107 for_stmt: for_head stmt •

    $default  reduce using rule 107 (for_stmt)


State 123

   92 assign_stmt: lvalue ASSIGN • expression

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 94
    CHR         shift, and go to state 95
    ODD         shift, and go to state 96
    ORD         shift, and go to state 97
    PRED        shift, and go to state 98
    SUCC        shift, and go to state 99
    TOINT       shift, and go to state 100
    TOCHAR      shift, and go to state 101
    TOBOOL      shift, and go to state 102
    MINUS       shift, and go to state 103
    NOT         shift, and go to state 104
    LP          shift, and go to state 105

    const_value  go to state 106
    identifier   go to state 107
    expression   go to state 195
    expr         go to state 109
    term         go to state 110
    factor       go to state 111
    lvalue       go to state 112


State 124

  156 lvalue: lvalue LB • expression RB

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 94
    CHR         shift, and go to state 95
    ODD         shift, and go to state 96
    ORD         shift, and go to state 97
    PRED        shift, and go to state 98
    SUCC        shift, and go to state 99
    TOINT       shift, and go to state 100
    TOCHAR      shift, and go to state 101
    TOBOOL      shift, and go to state 102
    MINUS       shift, and go to state 103
    NOT         shift, and go to state 104
    LP          shift, and go to state 105

    const_value  go to state 106
    identifier   go to state 107
    expression   go to state 196
    expr         go to state 109
    term         go to state 110
    factor       go to state 111
    lvalue       go to state 112


State 125

  158 lvalue: lvalue DOT • identifier

    IDENT_NAME  shift, and go to state 10

    identifier  go to state 197


State 126

   64 simple_type: LP • name_list RP

    IDENT_NAME  shift, and go to state 10

    name_list   go to state 198
    identifier  go to state 75


State 127

   67 simple_type: INT_TYPE •

    $default  reduce using rule 67 (simple_type)


State 128

   68 simple_type: BOOL_TYPE •

    $default  reduce using rule 68 (simple_type)


State 129

   69 simple_type: CHAR_TYPE •

    $default  reduce using rule 69 (simple_type)


State 130

   62 array_type_decl: ARRAY • LB simple_type RB OF type_decl

    LB  shift, and go to state 199


State 131

   57 record_type_decl: RECORD • field_decl_list END

    IDENT_NAME  shift, and go to state 10

    field_decl_list  go to state 200
    field_decl       go to state 201
    name_list        go to state 202
    identifier       go to state 75


State 132

   65 simple_type: const_value • DOUBLEDOT const_value

    DOUBLEDOT  shift, and go to state 203


State 133

   52 type_def: identifier EQUAL type_decl • SEMICOLON
   53         | identifier EQUAL type_decl •

    SEMICOLON  shift, and go to state 204

    $default  reduce using rule 53 (type_def)


State 134

   56 type_decl: record_type_decl •

    $default  reduce using rule 56 (type_decl)


State 135

   55 type_decl: array_type_decl •

    $default  reduce using rule 55 (type_decl)


State 136

   54 type_decl: simple_type •

    $default  reduce using rule 54 (type_decl)


State 137

   63 simple_type: identifier •
   66            | identifier • DOUBLEDOT identifier

    DOUBLEDOT  shift, and go to state 205

    $default  reduce using rule 63 (simple_type)


State 138

   30 var_decl_list: var_decl_list var_decl •

    $default  reduce using rule 30 (var_decl_list)


State 139

   70 name_list: name_list COMMA • identifier

    IDENT_NAME  shift, and go to state 10

    identifier  go to state 206


State 140

   32 var_decl: name_list COLON • type_decl SEMICOLON
   33         | name_list COLON • type_decl

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    MINUS       shift, and go to state 36
    LP          shift, and go to state 126
    INT_TYPE    shift, and go to state 127
    BOOL_TYPE   shift, and go to state 128
    CHAR_TYPE   shift, and go to state 129
    ARRAY       shift, and go to state 130
    RECORD      shift, and go to state 131

    const_value       go to state 132
    type_decl         go to state 207
    record_type_decl  go to state 134
    array_type_decl   go to state 135
    simple_type       go to state 136
    identifier        go to state 137


State 141

   16 fun_head: FUNCTION IDENT_NAME • params COLON simple_type

    LP  shift, and go to state 208

    $default  reduce using rule 22 (params)

    params  go to state 209


State 142

   21 proc_head: PROCEDURE IDENT_NAME • params

    LP  shift, and go to state 208

    $default  reduce using rule 22 (params)

    params  go to state 210


State 143

    8 routine_part: routine_part fun_decl •

    $default  reduce using rule 8 (routine_part)


State 144

    9 routine_part: routine_part proc_decl •

    $default  reduce using rule 9 (routine_part)


State 145

   12 fun_decl: fun_head SEMICOLON • routine SEMICOLON
   13         | fun_head SEMICOLON • routine

    CONST  shift, and go to state 5

    $default  reduce using rule 34 (const_part)

    routine       go to state 211
    routine_head  go to state 8
    const_part    go to state 9


State 146

   14 fun_decl: fun_head routine • SEMICOLON
   15         | fun_head routine •

    SEMICOLON  shift, and go to state 212

    $default  reduce using rule 15 (fun_decl)


State 147

   17 proc_decl: proc_head SEMICOLON • routine SEMICOLON
   19          | proc_head SEMICOLON • routine

    CONST  shift, and go to state 5

    $default  reduce using rule 34 (const_part)

    routine       go to state 213
    routine_head  go to state 8
    const_part    go to state 9


State 148

   18 proc_decl: proc_head routine • SEMICOLON
   20          | proc_head routine •

    SEMICOLON  shift, and go to state 214

    $default  reduce using rule 20 (proc_decl)


State 149

   79 stmt: INTEGER COLON no_label_stmt •

    $default  reduce using rule 79 (stmt)


State 150

  112 proc_stmt: READ LP factor • RP

    RP  shift, and go to state 215


State 151

  114 proc_stmt: WRITE LP args_list • RP
  121 args_list: args_list • COMMA expression

    RP     shift, and go to state 216
    COMMA  shift, and go to state 217


State 152

  122 args_list: expression •
  123 expression: expression • GE expr
  124           | expression • GT expr
  125           | expression • LE expr
  126           | expression • LT expr
  127           | expression • EQUAL expr
  128           | expression • UNEQUAL expr

    EQUAL    shift, and go to state 174
    UNEQUAL  shift, and go to state 175
    GE       shift, and go to state 176
    GT       shift, and go to state 177
    LE       shift, and go to state 178
    LT       shift, and go to state 179

    $default  reduce using rule 122 (args_list)


State 153

  116 proc_stmt: WRITELN LP args_list • RP
  121 args_list: args_list • COMMA expression

    RP     shift, and go to state 218
    COMMA  shift, and go to state 217


State 154

  117 proc_stmt: MEMORYREAD LP args_list • RP
  121 args_list: args_list • COMMA expression

    RP     shift, and go to state 219
    COMMA  shift, and go to state 217


State 155

  118 proc_stmt: MEMORYWRITE LP args_list • RP
  121 args_list: args_list • COMMA expression

    RP     shift, and go to state 220
    COMMA  shift, and go to state 217


State 156

  119 proc_stmt: STACKREAD LP args_list • RP
  121 args_list: args_list • COMMA expression

    RP     shift, and go to state 221
    COMMA  shift, and go to state 217


State 157

  120 proc_stmt: STACKWRITE LP args_list • RP
  121 args_list: args_list • COMMA expression

    RP     shift, and go to state 222
    COMMA  shift, and go to state 217


State 158

  145 factor: ABS LP • args_list RP

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 94
    CHR         shift, and go to state 95
    ODD         shift, and go to state 96
    ORD         shift, and go to state 97
    PRED        shift, and go to state 98
    SUCC        shift, and go to state 99
    TOINT       shift, and go to state 100
    TOCHAR      shift, and go to state 101
    TOBOOL      shift, and go to state 102
    MINUS       shift, and go to state 103
    NOT         shift, and go to state 104
    LP          shift, and go to state 105

    const_value  go to state 106
    identifier   go to state 107
    args_list    go to state 223
    expression   go to state 152
    expr         go to state 109
    term         go to state 110
    factor       go to state 111
    lvalue       go to state 112


State 159

  146 factor: CHR LP • args_list RP

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 94
    CHR         shift, and go to state 95
    ODD         shift, and go to state 96
    ORD         shift, and go to state 97
    PRED        shift, and go to state 98
    SUCC        shift, and go to state 99
    TOINT       shift, and go to state 100
    TOCHAR      shift, and go to state 101
    TOBOOL      shift, and go to state 102
    MINUS       shift, and go to state 103
    NOT         shift, and go to state 104
    LP          shift, and go to state 105

    const_value  go to state 106
    identifier   go to state 107
    args_list    go to state 224
    expression   go to state 152
    expr         go to state 109
    term         go to state 110
    factor       go to state 111
    lvalue       go to state 112


State 160

  147 factor: ODD LP • args_list RP

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 94
    CHR         shift, and go to state 95
    ODD         shift, and go to state 96
    ORD         shift, and go to state 97
    PRED        shift, and go to state 98
    SUCC        shift, and go to state 99
    TOINT       shift, and go to state 100
    TOCHAR      shift, and go to state 101
    TOBOOL      shift, and go to state 102
    MINUS       shift, and go to state 103
    NOT         shift, and go to state 104
    LP          shift, and go to state 105

    const_value  go to state 106
    identifier   go to state 107
    args_list    go to state 225
    expression   go to state 152
    expr         go to state 109
    term         go to state 110
    factor       go to state 111
    lvalue       go to state 112


State 161

  148 factor: ORD LP • args_list RP

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 94
    CHR         shift, and go to state 95
    ODD         shift, and go to state 96
    ORD         shift, and go to state 97
    PRED        shift, and go to state 98
    SUCC        shift, and go to state 99
    TOINT       shift, and go to state 100
    TOCHAR      shift, and go to state 101
    TOBOOL      shift, and go to state 102
    MINUS       shift, and go to state 103
    NOT         shift, and go to state 104
    LP          shift, and go to state 105

    const_value  go to state 106
    identifier   go to state 107
    args_list    go to state 226
    expression   go to state 152
    expr         go to state 109
    term         go to state 110
    factor       go to state 111
    lvalue       go to state 112


State 162

  149 factor: PRED LP • args_list RP

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 94
    CHR         shift, and go to state 95
    ODD         shift, and go to state 96
    ORD         shift, and go to state 97
    PRED        shift, and go to state 98
    SUCC        shift, and go to state 99
    TOINT       shift, and go to state 100
    TOCHAR      shift, and go to state 101
    TOBOOL      shift, and go to state 102
    MINUS       shift, and go to state 103
    NOT         shift, and go to state 104
    LP          shift, and go to state 105

    const_value  go to state 106
    identifier   go to state 107
    args_list    go to state 227
    expression   go to state 152
    expr         go to state 109
    term         go to state 110
    factor       go to state 111
    lvalue       go to state 112


State 163

  150 factor: SUCC LP • args_list RP

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 94
    CHR         shift, and go to state 95
    ODD         shift, and go to state 96
    ORD         shift, and go to state 97
    PRED        shift, and go to state 98
    SUCC        shift, and go to state 99
    TOINT       shift, and go to state 100
    TOCHAR      shift, and go to state 101
    TOBOOL      shift, and go to state 102
    MINUS       shift, and go to state 103
    NOT         shift, and go to state 104
    LP          shift, and go to state 105

    const_value  go to state 106
    identifier   go to state 107
    args_list    go to state 228
    expression   go to state 152
    expr         go to state 109
    term         go to state 110
    factor       go to state 111
    lvalue       go to state 112


State 164

  151 factor: TOINT LP • args_list RP

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 94
    CHR         shift, and go to state 95
    ODD         shift, and go to state 96
    ORD         shift, and go to state 97
    PRED        shift, and go to state 98
    SUCC        shift, and go to state 99
    TOINT       shift, and go to state 100
    TOCHAR      shift, and go to state 101
    TOBOOL      shift, and go to state 102
    MINUS       shift, and go to state 103
    NOT         shift, and go to state 104
    LP          shift, and go to state 105

    const_value  go to state 106
    identifier   go to state 107
    args_list    go to state 229
    expression   go to state 152
    expr         go to state 109
    term         go to state 110
    factor       go to state 111
    lvalue       go to state 112


State 165

  152 factor: TOCHAR LP • args_list RP

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 94
    CHR         shift, and go to state 95
    ODD         shift, and go to state 96
    ORD         shift, and go to state 97
    PRED        shift, and go to state 98
    SUCC        shift, and go to state 99
    TOINT       shift, and go to state 100
    TOCHAR      shift, and go to state 101
    TOBOOL      shift, and go to state 102
    MINUS       shift, and go to state 103
    NOT         shift, and go to state 104
    LP          shift, and go to state 105

    const_value  go to state 106
    identifier   go to state 107
    args_list    go to state 230
    expression   go to state 152
    expr         go to state 109
    term         go to state 110
    factor       go to state 111
    lvalue       go to state 112


State 166

  153 factor: TOBOOL LP • args_list RP

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 94
    CHR         shift, and go to state 95
    ODD         shift, and go to state 96
    ORD         shift, and go to state 97
    PRED        shift, and go to state 98
    SUCC        shift, and go to state 99
    TOINT       shift, and go to state 100
    TOCHAR      shift, and go to state 101
    TOBOOL      shift, and go to state 102
    MINUS       shift, and go to state 103
    NOT         shift, and go to state 104
    LP          shift, and go to state 105

    const_value  go to state 106
    identifier   go to state 107
    args_list    go to state 231
    expression   go to state 152
    expr         go to state 109
    term         go to state 110
    factor       go to state 111
    lvalue       go to state 112


State 167

   40 const_value: INTEGER •
   41            | MINUS INTEGER •

    $end         reduce using rule 40 (const_value)
    $end         [reduce using rule 41 (const_value)]
    FUNCTION     reduce using rule 40 (const_value)
    FUNCTION     [reduce using rule 41 (const_value)]
    PROCEDURE    reduce using rule 40 (const_value)
    PROCEDURE    [reduce using rule 41 (const_value)]
    BBEGIN       reduce using rule 40 (const_value)
    BBEGIN       [reduce using rule 41 (const_value)]
    END          reduce using rule 40 (const_value)
    END          [reduce using rule 41 (const_value)]
    IDENT_NAME   reduce using rule 40 (const_value)
    IDENT_NAME   [reduce using rule 41 (const_value)]
    INTEGER      reduce using rule 40 (const_value)
    INTEGER      [reduce using rule 41 (const_value)]
    READ         reduce using rule 40 (const_value)
    READ         [reduce using rule 41 (const_value)]
    READLN       reduce using rule 40 (const_value)
    READLN       [reduce using rule 41 (const_value)]
    WRITE        reduce using rule 40 (const_value)
    WRITE        [reduce using rule 41 (const_value)]
    WRITELN      reduce using rule 40 (const_value)
    WRITELN      [reduce using rule 41 (const_value)]
    MEMORYREAD   reduce using rule 40 (const_value)
    MEMORYREAD   [reduce using rule 41 (const_value)]
    MEMORYWRITE  reduce using rule 40 (const_value)
    MEMORYWRITE  [reduce using rule 41 (const_value)]
    STACKREAD    reduce using rule 40 (const_value)
    STACKREAD    [reduce using rule 41 (const_value)]
    STACKWRITE   reduce using rule 40 (const_value)
    STACKWRITE   [reduce using rule 41 (const_value)]
    IF           reduce using rule 40 (const_value)
    IF           [reduce using rule 41 (const_value)]
    THEN         reduce using rule 40 (const_value)
    THEN         [reduce using rule 41 (const_value)]
    ELSE         reduce using rule 40 (const_value)
    ELSE         [reduce using rule 41 (const_value)]
    REPEAT       reduce using rule 40 (const_value)
    REPEAT       [reduce using rule 41 (const_value)]
    UNTIL        reduce using rule 40 (const_value)
    UNTIL        [reduce using rule 41 (const_value)]
    WHILE        reduce using rule 40 (const_value)
    WHILE        [reduce using rule 41 (const_value)]
    DO           reduce using rule 40 (const_value)
    DO           [reduce using rule 41 (const_value)]
    CASE         reduce using rule 40 (const_value)
    CASE         [reduce using rule 41 (const_value)]
    TO           reduce using rule 40 (const_value)
    TO           [reduce using rule 41 (const_value)]
    DOWNTO       reduce using rule 40 (const_value)
    DOWNTO       [reduce using rule 41 (const_value)]
    FOR          reduce using rule 40 (const_value)
    FOR          [reduce using rule 41 (const_value)]
    EQUAL        reduce using rule 40 (const_value)
    EQUAL        [reduce using rule 41 (const_value)]
    UNEQUAL      reduce using rule 40 (const_value)
    UNEQUAL      [reduce using rule 41 (const_value)]
    GE           reduce using rule 40 (const_value)
    GE           [reduce using rule 41 (const_value)]
    GT           reduce using rule 40 (const_value)
    GT           [reduce using rule 41 (const_value)]
    LE           reduce using rule 40 (const_value)
    LE           [reduce using rule 41 (const_value)]
    LT           reduce using rule 40 (const_value)
    LT           [reduce using rule 41 (const_value)]
    PLUS         reduce using rule 40 (const_value)
    PLUS         [reduce using rule 41 (const_value)]
    MINUS        reduce using rule 40 (const_value)
    MINUS        [reduce using rule 41 (const_value)]
    MUL          reduce using rule 40 (const_value)
    MUL          [reduce using rule 41 (const_value)]
    DIV          reduce using rule 40 (const_value)
    DIV          [reduce using rule 41 (const_value)]
    OR           reduce using rule 40 (const_value)
    OR           [reduce using rule 41 (const_value)]
    AND          reduce using rule 40 (const_value)
    AND          [reduce using rule 41 (const_value)]
    MOD          reduce using rule 40 (const_value)
    MOD          [reduce using rule 41 (const_value)]
    RB           reduce using rule 40 (const_value)
    RB           [reduce using rule 41 (const_value)]
    RP           reduce using rule 40 (const_value)
    RP           [reduce using rule 41 (const_value)]
    SEMICOLON    reduce using rule 40 (const_value)
    SEMICOLON    [reduce using rule 41 (const_value)]
    DOT          reduce using rule 40 (const_value)
    DOT          [reduce using rule 41 (const_value)]
    COMMA        reduce using rule 40 (const_value)
    COMMA        [reduce using rule 41 (const_value)]
    OF           reduce using rule 40 (const_value)
    OF           [reduce using rule 41 (const_value)]
    GOTO         reduce using rule 40 (const_value)
    GOTO         [reduce using rule 41 (const_value)]
    BREAK        reduce using rule 40 (const_value)
    BREAK        [reduce using rule 41 (const_value)]
    CONTINUE     reduce using rule 40 (const_value)
    CONTINUE     [reduce using rule 41 (const_value)]
    $default     reduce using rule 40 (const_value)


State 168

   46 const_value: MAXINT •
   47            | MINUS MAXINT •

    $end         reduce using rule 46 (const_value)
    $end         [reduce using rule 47 (const_value)]
    FUNCTION     reduce using rule 46 (const_value)
    FUNCTION     [reduce using rule 47 (const_value)]
    PROCEDURE    reduce using rule 46 (const_value)
    PROCEDURE    [reduce using rule 47 (const_value)]
    BBEGIN       reduce using rule 46 (const_value)
    BBEGIN       [reduce using rule 47 (const_value)]
    END          reduce using rule 46 (const_value)
    END          [reduce using rule 47 (const_value)]
    IDENT_NAME   reduce using rule 46 (const_value)
    IDENT_NAME   [reduce using rule 47 (const_value)]
    INTEGER      reduce using rule 46 (const_value)
    INTEGER      [reduce using rule 47 (const_value)]
    READ         reduce using rule 46 (const_value)
    READ         [reduce using rule 47 (const_value)]
    READLN       reduce using rule 46 (const_value)
    READLN       [reduce using rule 47 (const_value)]
    WRITE        reduce using rule 46 (const_value)
    WRITE        [reduce using rule 47 (const_value)]
    WRITELN      reduce using rule 46 (const_value)
    WRITELN      [reduce using rule 47 (const_value)]
    MEMORYREAD   reduce using rule 46 (const_value)
    MEMORYREAD   [reduce using rule 47 (const_value)]
    MEMORYWRITE  reduce using rule 46 (const_value)
    MEMORYWRITE  [reduce using rule 47 (const_value)]
    STACKREAD    reduce using rule 46 (const_value)
    STACKREAD    [reduce using rule 47 (const_value)]
    STACKWRITE   reduce using rule 46 (const_value)
    STACKWRITE   [reduce using rule 47 (const_value)]
    IF           reduce using rule 46 (const_value)
    IF           [reduce using rule 47 (const_value)]
    THEN         reduce using rule 46 (const_value)
    THEN         [reduce using rule 47 (const_value)]
    ELSE         reduce using rule 46 (const_value)
    ELSE         [reduce using rule 47 (const_value)]
    REPEAT       reduce using rule 46 (const_value)
    REPEAT       [reduce using rule 47 (const_value)]
    UNTIL        reduce using rule 46 (const_value)
    UNTIL        [reduce using rule 47 (const_value)]
    WHILE        reduce using rule 46 (const_value)
    WHILE        [reduce using rule 47 (const_value)]
    DO           reduce using rule 46 (const_value)
    DO           [reduce using rule 47 (const_value)]
    CASE         reduce using rule 46 (const_value)
    CASE         [reduce using rule 47 (const_value)]
    TO           reduce using rule 46 (const_value)
    TO           [reduce using rule 47 (const_value)]
    DOWNTO       reduce using rule 46 (const_value)
    DOWNTO       [reduce using rule 47 (const_value)]
    FOR          reduce using rule 46 (const_value)
    FOR          [reduce using rule 47 (const_value)]
    EQUAL        reduce using rule 46 (const_value)
    EQUAL        [reduce using rule 47 (const_value)]
    UNEQUAL      reduce using rule 46 (const_value)
    UNEQUAL      [reduce using rule 47 (const_value)]
    GE           reduce using rule 46 (const_value)
    GE           [reduce using rule 47 (const_value)]
    GT           reduce using rule 46 (const_value)
    GT           [reduce using rule 47 (const_value)]
    LE           reduce using rule 46 (const_value)
    LE           [reduce using rule 47 (const_value)]
    LT           reduce using rule 46 (const_value)
    LT           [reduce using rule 47 (const_value)]
    PLUS         reduce using rule 46 (const_value)
    PLUS         [reduce using rule 47 (const_value)]
    MINUS        reduce using rule 46 (const_value)
    MINUS        [reduce using rule 47 (const_value)]
    MUL          reduce using rule 46 (const_value)
    MUL          [reduce using rule 47 (const_value)]
    DIV          reduce using rule 46 (const_value)
    DIV          [reduce using rule 47 (const_value)]
    OR           reduce using rule 46 (const_value)
    OR           [reduce using rule 47 (const_value)]
    AND          reduce using rule 46 (const_value)
    AND          [reduce using rule 47 (const_value)]
    MOD          reduce using rule 46 (const_value)
    MOD          [reduce using rule 47 (const_value)]
    RB           reduce using rule 46 (const_value)
    RB           [reduce using rule 47 (const_value)]
    RP           reduce using rule 46 (const_value)
    RP           [reduce using rule 47 (const_value)]
    SEMICOLON    reduce using rule 46 (const_value)
    SEMICOLON    [reduce using rule 47 (const_value)]
    DOT          reduce using rule 46 (const_value)
    DOT          [reduce using rule 47 (const_value)]
    COMMA        reduce using rule 46 (const_value)
    COMMA        [reduce using rule 47 (const_value)]
    OF           reduce using rule 46 (const_value)
    OF           [reduce using rule 47 (const_value)]
    GOTO         reduce using rule 46 (const_value)
    GOTO         [reduce using rule 47 (const_value)]
    BREAK        reduce using rule 46 (const_value)
    BREAK        [reduce using rule 47 (const_value)]
    CONTINUE     reduce using rule 46 (const_value)
    CONTINUE     [reduce using rule 47 (const_value)]
    $default     reduce using rule 46 (const_value)


State 169

  144 factor: MINUS factor •

    $default  reduce using rule 144 (factor)


State 170

  143 factor: NOT factor •

    $default  reduce using rule 143 (factor)


State 171

  123 expression: expression • GE expr
  124           | expression • GT expr
  125           | expression • LE expr
  126           | expression • LT expr
  127           | expression • EQUAL expr
  128           | expression • UNEQUAL expr
  142 factor: LP expression • RP

    EQUAL    shift, and go to state 174
    UNEQUAL  shift, and go to state 175
    GE       shift, and go to state 176
    GT       shift, and go to state 177
    LE       shift, and go to state 178
    LT       shift, and go to state 179
    RP       shift, and go to state 232


State 172

  139 factor: identifier LP • args_list RP

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 94
    CHR         shift, and go to state 95
    ODD         shift, and go to state 96
    ORD         shift, and go to state 97
    PRED        shift, and go to state 98
    SUCC        shift, and go to state 99
    TOINT       shift, and go to state 100
    TOCHAR      shift, and go to state 101
    TOBOOL      shift, and go to state 102
    MINUS       shift, and go to state 103
    NOT         shift, and go to state 104
    LP          shift, and go to state 105

    const_value  go to state 106
    identifier   go to state 107
    args_list    go to state 233
    expression   go to state 152
    expr         go to state 109
    term         go to state 110
    factor       go to state 111
    lvalue       go to state 112


State 173

   94 if_stmt: IF expression THEN • stmt else_clause

    BBEGIN       shift, and go to state 16
    IDENT_NAME   shift, and go to state 10
    INTEGER      shift, and go to state 39
    READ         shift, and go to state 40
    READLN       shift, and go to state 41
    WRITE        shift, and go to state 42
    WRITELN      shift, and go to state 43
    MEMORYREAD   shift, and go to state 44
    MEMORYWRITE  shift, and go to state 45
    STACKREAD    shift, and go to state 46
    STACKWRITE   shift, and go to state 47
    IF           shift, and go to state 48
    REPEAT       shift, and go to state 49
    WHILE        shift, and go to state 50
    CASE         shift, and go to state 51
    FOR          shift, and go to state 52
    GOTO         shift, and go to state 53
    BREAK        shift, and go to state 54
    CONTINUE     shift, and go to state 55

    BBEGIN       [reduce using rule 99 (repeat_stmt)]
    IDENT_NAME   [reduce using rule 99 (repeat_stmt)]
    INTEGER      [reduce using rule 99 (repeat_stmt)]
    READ         [reduce using rule 99 (repeat_stmt)]
    READLN       [reduce using rule 99 (repeat_stmt)]
    WRITE        [reduce using rule 99 (repeat_stmt)]
    WRITELN      [reduce using rule 99 (repeat_stmt)]
    MEMORYREAD   [reduce using rule 99 (repeat_stmt)]
    MEMORYWRITE  [reduce using rule 99 (repeat_stmt)]
    STACKREAD    [reduce using rule 99 (repeat_stmt)]
    STACKWRITE   [reduce using rule 99 (repeat_stmt)]
    IF           [reduce using rule 99 (repeat_stmt)]
    REPEAT       [reduce using rule 99 (repeat_stmt)]
    WHILE        [reduce using rule 99 (repeat_stmt)]
    CASE         [reduce using rule 99 (repeat_stmt)]
    FOR          [reduce using rule 99 (repeat_stmt)]
    GOTO         [reduce using rule 99 (repeat_stmt)]
    BREAK        [reduce using rule 99 (repeat_stmt)]
    CONTINUE     [reduce using rule 99 (repeat_stmt)]
    $default     reduce using rule 99 (repeat_stmt)

    identifier     go to state 56
    compound_stmt  go to state 57
    stmt           go to state 234
    no_label_stmt  go to state 59
    assign_stmt    go to state 60
    goto_stmt      go to state 61
    if_stmt        go to state 62
    repeat_stmt    go to state 63
    while_stmt     go to state 64
    case_stmt      go to state 65
    for_stmt       go to state 66
    for_head       go to state 67
    proc_stmt      go to state 68
    lvalue         go to state 69


State 174

  127 expression: expression EQUAL • expr

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 94
    CHR         shift, and go to state 95
    ODD         shift, and go to state 96
    ORD         shift, and go to state 97
    PRED        shift, and go to state 98
    SUCC        shift, and go to state 99
    TOINT       shift, and go to state 100
    TOCHAR      shift, and go to state 101
    TOBOOL      shift, and go to state 102
    MINUS       shift, and go to state 103
    NOT         shift, and go to state 104
    LP          shift, and go to state 105

    const_value  go to state 106
    identifier   go to state 107
    expr         go to state 235
    term         go to state 110
    factor       go to state 111
    lvalue       go to state 112


State 175

  128 expression: expression UNEQUAL • expr

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 94
    CHR         shift, and go to state 95
    ODD         shift, and go to state 96
    ORD         shift, and go to state 97
    PRED        shift, and go to state 98
    SUCC        shift, and go to state 99
    TOINT       shift, and go to state 100
    TOCHAR      shift, and go to state 101
    TOBOOL      shift, and go to state 102
    MINUS       shift, and go to state 103
    NOT         shift, and go to state 104
    LP          shift, and go to state 105

    const_value  go to state 106
    identifier   go to state 107
    expr         go to state 236
    term         go to state 110
    factor       go to state 111
    lvalue       go to state 112


State 176

  123 expression: expression GE • expr

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 94
    CHR         shift, and go to state 95
    ODD         shift, and go to state 96
    ORD         shift, and go to state 97
    PRED        shift, and go to state 98
    SUCC        shift, and go to state 99
    TOINT       shift, and go to state 100
    TOCHAR      shift, and go to state 101
    TOBOOL      shift, and go to state 102
    MINUS       shift, and go to state 103
    NOT         shift, and go to state 104
    LP          shift, and go to state 105

    const_value  go to state 106
    identifier   go to state 107
    expr         go to state 237
    term         go to state 110
    factor       go to state 111
    lvalue       go to state 112


State 177

  124 expression: expression GT • expr

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 94
    CHR         shift, and go to state 95
    ODD         shift, and go to state 96
    ORD         shift, and go to state 97
    PRED        shift, and go to state 98
    SUCC        shift, and go to state 99
    TOINT       shift, and go to state 100
    TOCHAR      shift, and go to state 101
    TOBOOL      shift, and go to state 102
    MINUS       shift, and go to state 103
    NOT         shift, and go to state 104
    LP          shift, and go to state 105

    const_value  go to state 106
    identifier   go to state 107
    expr         go to state 238
    term         go to state 110
    factor       go to state 111
    lvalue       go to state 112


State 178

  125 expression: expression LE • expr

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 94
    CHR         shift, and go to state 95
    ODD         shift, and go to state 96
    ORD         shift, and go to state 97
    PRED        shift, and go to state 98
    SUCC        shift, and go to state 99
    TOINT       shift, and go to state 100
    TOCHAR      shift, and go to state 101
    TOBOOL      shift, and go to state 102
    MINUS       shift, and go to state 103
    NOT         shift, and go to state 104
    LP          shift, and go to state 105

    const_value  go to state 106
    identifier   go to state 107
    expr         go to state 239
    term         go to state 110
    factor       go to state 111
    lvalue       go to state 112


State 179

  126 expression: expression LT • expr

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 94
    CHR         shift, and go to state 95
    ODD         shift, and go to state 96
    ORD         shift, and go to state 97
    PRED        shift, and go to state 98
    SUCC        shift, and go to state 99
    TOINT       shift, and go to state 100
    TOCHAR      shift, and go to state 101
    TOBOOL      shift, and go to state 102
    MINUS       shift, and go to state 103
    NOT         shift, and go to state 104
    LP          shift, and go to state 105

    const_value  go to state 106
    identifier   go to state 107
    expr         go to state 240
    term         go to state 110
    factor       go to state 111
    lvalue       go to state 112


State 180

   95 if_stmt: IF expression stmt • else_clause

    ELSE  shift, and go to state 241

    ELSE      [reduce using rule 96 (else_clause)]
    $default  reduce using rule 96 (else_clause)

    else_clause  go to state 242


State 181

  130 expr: expr PLUS • term

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 94
    CHR         shift, and go to state 95
    ODD         shift, and go to state 96
    ORD         shift, and go to state 97
    PRED        shift, and go to state 98
    SUCC        shift, and go to state 99
    TOINT       shift, and go to state 100
    TOCHAR      shift, and go to state 101
    TOBOOL      shift, and go to state 102
    MINUS       shift, and go to state 103
    NOT         shift, and go to state 104
    LP          shift, and go to state 105

    const_value  go to state 106
    identifier   go to state 107
    term         go to state 243
    factor       go to state 111
    lvalue       go to state 112


State 182

  131 expr: expr MINUS • term

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 94
    CHR         shift, and go to state 95
    ODD         shift, and go to state 96
    ORD         shift, and go to state 97
    PRED        shift, and go to state 98
    SUCC        shift, and go to state 99
    TOINT       shift, and go to state 100
    TOCHAR      shift, and go to state 101
    TOBOOL      shift, and go to state 102
    MINUS       shift, and go to state 103
    NOT         shift, and go to state 104
    LP          shift, and go to state 105

    const_value  go to state 106
    identifier   go to state 107
    term         go to state 244
    factor       go to state 111
    lvalue       go to state 112


State 183

  132 expr: expr OR • term

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 94
    CHR         shift, and go to state 95
    ODD         shift, and go to state 96
    ORD         shift, and go to state 97
    PRED        shift, and go to state 98
    SUCC        shift, and go to state 99
    TOINT       shift, and go to state 100
    TOCHAR      shift, and go to state 101
    TOBOOL      shift, and go to state 102
    MINUS       shift, and go to state 103
    NOT         shift, and go to state 104
    LP          shift, and go to state 105

    const_value  go to state 106
    identifier   go to state 107
    term         go to state 245
    factor       go to state 111
    lvalue       go to state 112


State 184

  134 term: term MUL • factor

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 94
    CHR         shift, and go to state 95
    ODD         shift, and go to state 96
    ORD         shift, and go to state 97
    PRED        shift, and go to state 98
    SUCC        shift, and go to state 99
    TOINT       shift, and go to state 100
    TOCHAR      shift, and go to state 101
    TOBOOL      shift, and go to state 102
    MINUS       shift, and go to state 103
    NOT         shift, and go to state 104
    LP          shift, and go to state 105

    const_value  go to state 106
    identifier   go to state 107
    factor       go to state 246
    lvalue       go to state 112


State 185

  135 term: term DIV • factor

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 94
    CHR         shift, and go to state 95
    ODD         shift, and go to state 96
    ORD         shift, and go to state 97
    PRED        shift, and go to state 98
    SUCC        shift, and go to state 99
    TOINT       shift, and go to state 100
    TOCHAR      shift, and go to state 101
    TOBOOL      shift, and go to state 102
    MINUS       shift, and go to state 103
    NOT         shift, and go to state 104
    LP          shift, and go to state 105

    const_value  go to state 106
    identifier   go to state 107
    factor       go to state 247
    lvalue       go to state 112


State 186

  137 term: term AND • factor

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 94
    CHR         shift, and go to state 95
    ODD         shift, and go to state 96
    ORD         shift, and go to state 97
    PRED        shift, and go to state 98
    SUCC        shift, and go to state 99
    TOINT       shift, and go to state 100
    TOCHAR      shift, and go to state 101
    TOBOOL      shift, and go to state 102
    MINUS       shift, and go to state 103
    NOT         shift, and go to state 104
    LP          shift, and go to state 105

    const_value  go to state 106
    identifier   go to state 107
    factor       go to state 248
    lvalue       go to state 112


State 187

  136 term: term MOD • factor

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 94
    CHR         shift, and go to state 95
    ODD         shift, and go to state 96
    ORD         shift, and go to state 97
    PRED        shift, and go to state 98
    SUCC        shift, and go to state 99
    TOINT       shift, and go to state 100
    TOCHAR      shift, and go to state 101
    TOBOOL      shift, and go to state 102
    MINUS       shift, and go to state 103
    NOT         shift, and go to state 104
    LP          shift, and go to state 105

    const_value  go to state 106
    identifier   go to state 107
    factor       go to state 249
    lvalue       go to state 112


State 188

   98 repeat_stmt: REPEAT stmt_list UNTIL • expression

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 94
    CHR         shift, and go to state 95
    ODD         shift, and go to state 96
    ORD         shift, and go to state 97
    PRED        shift, and go to state 98
    SUCC        shift, and go to state 99
    TOINT       shift, and go to state 100
    TOCHAR      shift, and go to state 101
    TOBOOL      shift, and go to state 102
    MINUS       shift, and go to state 103
    NOT         shift, and go to state 104
    LP          shift, and go to state 105

    const_value  go to state 106
    identifier   go to state 107
    expression   go to state 250
    expr         go to state 109
    term         go to state 110
    factor       go to state 111
    lvalue       go to state 112


State 189

  100 while_stmt: WHILE expression DO • stmt

    BBEGIN       shift, and go to state 16
    IDENT_NAME   shift, and go to state 10
    INTEGER      shift, and go to state 39
    READ         shift, and go to state 40
    READLN       shift, and go to state 41
    WRITE        shift, and go to state 42
    WRITELN      shift, and go to state 43
    MEMORYREAD   shift, and go to state 44
    MEMORYWRITE  shift, and go to state 45
    STACKREAD    shift, and go to state 46
    STACKWRITE   shift, and go to state 47
    IF           shift, and go to state 48
    REPEAT       shift, and go to state 49
    WHILE        shift, and go to state 50
    CASE         shift, and go to state 51
    FOR          shift, and go to state 52
    GOTO         shift, and go to state 53
    BREAK        shift, and go to state 54
    CONTINUE     shift, and go to state 55

    BBEGIN       [reduce using rule 99 (repeat_stmt)]
    IDENT_NAME   [reduce using rule 99 (repeat_stmt)]
    INTEGER      [reduce using rule 99 (repeat_stmt)]
    READ         [reduce using rule 99 (repeat_stmt)]
    READLN       [reduce using rule 99 (repeat_stmt)]
    WRITE        [reduce using rule 99 (repeat_stmt)]
    WRITELN      [reduce using rule 99 (repeat_stmt)]
    MEMORYREAD   [reduce using rule 99 (repeat_stmt)]
    MEMORYWRITE  [reduce using rule 99 (repeat_stmt)]
    STACKREAD    [reduce using rule 99 (repeat_stmt)]
    STACKWRITE   [reduce using rule 99 (repeat_stmt)]
    IF           [reduce using rule 99 (repeat_stmt)]
    REPEAT       [reduce using rule 99 (repeat_stmt)]
    WHILE        [reduce using rule 99 (repeat_stmt)]
    CASE         [reduce using rule 99 (repeat_stmt)]
    FOR          [reduce using rule 99 (repeat_stmt)]
    GOTO         [reduce using rule 99 (repeat_stmt)]
    BREAK        [reduce using rule 99 (repeat_stmt)]
    CONTINUE     [reduce using rule 99 (repeat_stmt)]
    $default     reduce using rule 99 (repeat_stmt)

    identifier     go to state 56
    compound_stmt  go to state 57
    stmt           go to state 251
    no_label_stmt  go to state 59
    assign_stmt    go to state 60
    goto_stmt      go to state 61
    if_stmt        go to state 62
    repeat_stmt    go to state 63
    while_stmt     go to state 64
    case_stmt      go to state 65
    for_stmt       go to state 66
    for_head       go to state 67
    proc_stmt      go to state 68
    lvalue         go to state 69


State 190

  101 case_stmt: CASE expression OF • case_expr_list END

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    MINUS       shift, and go to state 36
    OTHERWISE   shift, and go to state 252

    const_value     go to state 253
    identifier      go to state 254
    case_expr_list  go to state 255
    case_expr       go to state 256


State 191

  108 for_head: FOR identifier ASSIGN • expression TO expression DO
  109         | FOR identifier ASSIGN • expression DOWNTO expression DO

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 94
    CHR         shift, and go to state 95
    ODD         shift, and go to state 96
    ORD         shift, and go to state 97
    PRED        shift, and go to state 98
    SUCC        shift, and go to state 99
    TOINT       shift, and go to state 100
    TOCHAR      shift, and go to state 101
    TOBOOL      shift, and go to state 102
    MINUS       shift, and go to state 103
    NOT         shift, and go to state 104
    LP          shift, and go to state 105

    const_value  go to state 106
    identifier   go to state 107
    expression   go to state 257
    expr         go to state 109
    term         go to state 110
    factor       go to state 111
    lvalue       go to state 112


State 192

  123 expression: expression • GE expr
  124           | expression • GT expr
  125           | expression • LE expr
  126           | expression • LT expr
  127           | expression • EQUAL expr
  128           | expression • UNEQUAL expr
  155 lvalue: identifier LB expression • RB

    EQUAL    shift, and go to state 174
    UNEQUAL  shift, and go to state 175
    GE       shift, and go to state 176
    GT       shift, and go to state 177
    LE       shift, and go to state 178
    LT       shift, and go to state 179
    RB       shift, and go to state 258


State 193

  111 proc_stmt: identifier LP args_list • RP
  121 args_list: args_list • COMMA expression

    RP     shift, and go to state 259
    COMMA  shift, and go to state 217


State 194

  157 lvalue: identifier DOT identifier •

    $default  reduce using rule 157 (lvalue)


State 195

   92 assign_stmt: lvalue ASSIGN expression •
  123 expression: expression • GE expr
  124           | expression • GT expr
  125           | expression • LE expr
  126           | expression • LT expr
  127           | expression • EQUAL expr
  128           | expression • UNEQUAL expr

    EQUAL    shift, and go to state 174
    UNEQUAL  shift, and go to state 175
    GE       shift, and go to state 176
    GT       shift, and go to state 177
    LE       shift, and go to state 178
    LT       shift, and go to state 179

    $default  reduce using rule 92 (assign_stmt)


State 196

  123 expression: expression • GE expr
  124           | expression • GT expr
  125           | expression • LE expr
  126           | expression • LT expr
  127           | expression • EQUAL expr
  128           | expression • UNEQUAL expr
  156 lvalue: lvalue LB expression • RB

    EQUAL    shift, and go to state 174
    UNEQUAL  shift, and go to state 175
    GE       shift, and go to state 176
    GT       shift, and go to state 177
    LE       shift, and go to state 178
    LT       shift, and go to state 179
    RB       shift, and go to state 260


State 197

  158 lvalue: lvalue DOT identifier •

    $default  reduce using rule 158 (lvalue)


State 198

   64 simple_type: LP name_list • RP
   70 name_list: name_list • COMMA identifier

    RP     shift, and go to state 261
    COMMA  shift, and go to state 139


State 199

   62 array_type_decl: ARRAY LB • simple_type RB OF type_decl

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    MINUS       shift, and go to state 36
    LP          shift, and go to state 126
    INT_TYPE    shift, and go to state 127
    BOOL_TYPE   shift, and go to state 128
    CHAR_TYPE   shift, and go to state 129

    const_value  go to state 132
    simple_type  go to state 262
    identifier   go to state 137


State 200

   57 record_type_decl: RECORD field_decl_list • END
   58 field_decl_list: field_decl_list • field_decl

    END         shift, and go to state 263
    IDENT_NAME  shift, and go to state 10

    field_decl  go to state 264
    name_list   go to state 202
    identifier  go to state 75


State 201

   59 field_decl_list: field_decl •

    $default  reduce using rule 59 (field_decl_list)


State 202

   60 field_decl: name_list • COLON type_decl SEMICOLON
   61           | name_list • COLON type_decl
   70 name_list: name_list • COMMA identifier

    COMMA  shift, and go to state 139
    COLON  shift, and go to state 265


State 203

   65 simple_type: const_value DOUBLEDOT • const_value

    INTEGER  shift, and go to state 30
    CHAR     shift, and go to state 31
    STRING   shift, and go to state 32
    TRUE     shift, and go to state 33
    FALSE    shift, and go to state 34
    MAXINT   shift, and go to state 35
    MINUS    shift, and go to state 36

    const_value  go to state 266


State 204

   52 type_def: identifier EQUAL type_decl SEMICOLON •

    $default  reduce using rule 52 (type_def)


State 205

   66 simple_type: identifier DOUBLEDOT • identifier

    IDENT_NAME  shift, and go to state 10

    identifier  go to state 267


State 206

   70 name_list: name_list COMMA identifier •

    $default  reduce using rule 70 (name_list)


State 207

   32 var_decl: name_list COLON type_decl • SEMICOLON
   33         | name_list COLON type_decl •

    SEMICOLON  shift, and go to state 268

    $default  reduce using rule 33 (var_decl)


State 208

   23 params: LP • params_decl RP

    VAR         shift, and go to state 269
    IDENT_NAME  shift, and go to state 10

    params_decl  go to state 270
    params_type  go to state 271
    name_list    go to state 272
    identifier   go to state 75


State 209

   16 fun_head: FUNCTION IDENT_NAME params • COLON simple_type

    COLON  shift, and go to state 273


State 210

   21 proc_head: PROCEDURE IDENT_NAME params •

    $default  reduce using rule 21 (proc_head)


State 211

   12 fun_decl: fun_head SEMICOLON routine • SEMICOLON
   13         | fun_head SEMICOLON routine •

    SEMICOLON  shift, and go to state 274

    $default  reduce using rule 13 (fun_decl)


State 212

   14 fun_decl: fun_head routine SEMICOLON •

    $default  reduce using rule 14 (fun_decl)


State 213

   17 proc_decl: proc_head SEMICOLON routine • SEMICOLON
   19          | proc_head SEMICOLON routine •

    SEMICOLON  shift, and go to state 275

    $default  reduce using rule 19 (proc_decl)


State 214

   18 proc_decl: proc_head routine SEMICOLON •

    $default  reduce using rule 18 (proc_decl)


State 215

  112 proc_stmt: READ LP factor RP •

    $default  reduce using rule 112 (proc_stmt)


State 216

  114 proc_stmt: WRITE LP args_list RP •

    $default  reduce using rule 114 (proc_stmt)


State 217

  121 args_list: args_list COMMA • expression

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 94
    CHR         shift, and go to state 95
    ODD         shift, and go to state 96
    ORD         shift, and go to state 97
    PRED        shift, and go to state 98
    SUCC        shift, and go to state 99
    TOINT       shift, and go to state 100
    TOCHAR      shift, and go to state 101
    TOBOOL      shift, and go to state 102
    MINUS       shift, and go to state 103
    NOT         shift, and go to state 104
    LP          shift, and go to state 105

    const_value  go to state 106
    identifier   go to state 107
    expression   go to state 276
    expr         go to state 109
    term         go to state 110
    factor       go to state 111
    lvalue       go to state 112


State 218

  116 proc_stmt: WRITELN LP args_list RP •

    $default  reduce using rule 116 (proc_stmt)


State 219

  117 proc_stmt: MEMORYREAD LP args_list RP •

    $default  reduce using rule 117 (proc_stmt)


State 220

  118 proc_stmt: MEMORYWRITE LP args_list RP •

    $default  reduce using rule 118 (proc_stmt)


State 221

  119 proc_stmt: STACKREAD LP args_list RP •

    $default  reduce using rule 119 (proc_stmt)


State 222

  120 proc_stmt: STACKWRITE LP args_list RP •

    $default  reduce using rule 120 (proc_stmt)


State 223

  121 args_list: args_list • COMMA expression
  145 factor: ABS LP args_list • RP

    RP     shift, and go to state 277
    COMMA  shift, and go to state 217


State 224

  121 args_list: args_list • COMMA expression
  146 factor: CHR LP args_list • RP

    RP     shift, and go to state 278
    COMMA  shift, and go to state 217


State 225

  121 args_list: args_list • COMMA expression
  147 factor: ODD LP args_list • RP

    RP     shift, and go to state 279
    COMMA  shift, and go to state 217


State 226

  121 args_list: args_list • COMMA expression
  148 factor: ORD LP args_list • RP

    RP     shift, and go to state 280
    COMMA  shift, and go to state 217


State 227

  121 args_list: args_list • COMMA expression
  149 factor: PRED LP args_list • RP

    RP     shift, and go to state 281
    COMMA  shift, and go to state 217


State 228

  121 args_list: args_list • COMMA expression
  150 factor: SUCC LP args_list • RP

    RP     shift, and go to state 282
    COMMA  shift, and go to state 217


State 229

  121 args_list: args_list • COMMA expression
  151 factor: TOINT LP args_list • RP

    RP     shift, and go to state 283
    COMMA  shift, and go to state 217


State 230

  121 args_list: args_list • COMMA expression
  152 factor: TOCHAR LP args_list • RP

    RP     shift, and go to state 284
    COMMA  shift, and go to state 217


State 231

  121 args_list: args_list • COMMA expression
  153 factor: TOBOOL LP args_list • RP

    RP     shift, and go to state 285
    COMMA  shift, and go to state 217


State 232

  142 factor: LP expression RP •

    $default  reduce using rule 142 (factor)


State 233

  121 args_list: args_list • COMMA expression
  139 factor: identifier LP args_list • RP

    RP     shift, and go to state 286
    COMMA  shift, and go to state 217


State 234

   94 if_stmt: IF expression THEN stmt • else_clause

    ELSE  shift, and go to state 241

    ELSE      [reduce using rule 96 (else_clause)]
    $default  reduce using rule 96 (else_clause)

    else_clause  go to state 287


State 235

  127 expression: expression EQUAL expr •
  130 expr: expr • PLUS term
  131     | expr • MINUS term
  132     | expr • OR term

    PLUS   shift, and go to state 181
    MINUS  shift, and go to state 182
    OR     shift, and go to state 183

    $default  reduce using rule 127 (expression)


State 236

  128 expression: expression UNEQUAL expr •
  130 expr: expr • PLUS term
  131     | expr • MINUS term
  132     | expr • OR term

    PLUS   shift, and go to state 181
    MINUS  shift, and go to state 182
    OR     shift, and go to state 183

    $default  reduce using rule 128 (expression)


State 237

  123 expression: expression GE expr •
  130 expr: expr • PLUS term
  131     | expr • MINUS term
  132     | expr • OR term

    PLUS   shift, and go to state 181
    MINUS  shift, and go to state 182
    OR     shift, and go to state 183

    $default  reduce using rule 123 (expression)


State 238

  124 expression: expression GT expr •
  130 expr: expr • PLUS term
  131     | expr • MINUS term
  132     | expr • OR term

    PLUS   shift, and go to state 181
    MINUS  shift, and go to state 182
    OR     shift, and go to state 183

    $default  reduce using rule 124 (expression)


State 239

  125 expression: expression LE expr •
  130 expr: expr • PLUS term
  131     | expr • MINUS term
  132     | expr • OR term

    PLUS   shift, and go to state 181
    MINUS  shift, and go to state 182
    OR     shift, and go to state 183

    $default  reduce using rule 125 (expression)


State 240

  126 expression: expression LT expr •
  130 expr: expr • PLUS term
  131     | expr • MINUS term
  132     | expr • OR term

    PLUS   shift, and go to state 181
    MINUS  shift, and go to state 182
    OR     shift, and go to state 183

    $default  reduce using rule 126 (expression)


State 241

   97 else_clause: ELSE • stmt

    BBEGIN       shift, and go to state 16
    IDENT_NAME   shift, and go to state 10
    INTEGER      shift, and go to state 39
    READ         shift, and go to state 40
    READLN       shift, and go to state 41
    WRITE        shift, and go to state 42
    WRITELN      shift, and go to state 43
    MEMORYREAD   shift, and go to state 44
    MEMORYWRITE  shift, and go to state 45
    STACKREAD    shift, and go to state 46
    STACKWRITE   shift, and go to state 47
    IF           shift, and go to state 48
    REPEAT       shift, and go to state 49
    WHILE        shift, and go to state 50
    CASE         shift, and go to state 51
    FOR          shift, and go to state 52
    GOTO         shift, and go to state 53
    BREAK        shift, and go to state 54
    CONTINUE     shift, and go to state 55

    BBEGIN       [reduce using rule 99 (repeat_stmt)]
    IDENT_NAME   [reduce using rule 99 (repeat_stmt)]
    INTEGER      [reduce using rule 99 (repeat_stmt)]
    READ         [reduce using rule 99 (repeat_stmt)]
    READLN       [reduce using rule 99 (repeat_stmt)]
    WRITE        [reduce using rule 99 (repeat_stmt)]
    WRITELN      [reduce using rule 99 (repeat_stmt)]
    MEMORYREAD   [reduce using rule 99 (repeat_stmt)]
    MEMORYWRITE  [reduce using rule 99 (repeat_stmt)]
    STACKREAD    [reduce using rule 99 (repeat_stmt)]
    STACKWRITE   [reduce using rule 99 (repeat_stmt)]
    IF           [reduce using rule 99 (repeat_stmt)]
    REPEAT       [reduce using rule 99 (repeat_stmt)]
    WHILE        [reduce using rule 99 (repeat_stmt)]
    CASE         [reduce using rule 99 (repeat_stmt)]
    FOR          [reduce using rule 99 (repeat_stmt)]
    GOTO         [reduce using rule 99 (repeat_stmt)]
    BREAK        [reduce using rule 99 (repeat_stmt)]
    CONTINUE     [reduce using rule 99 (repeat_stmt)]
    $default     reduce using rule 99 (repeat_stmt)

    identifier     go to state 56
    compound_stmt  go to state 57
    stmt           go to state 288
    no_label_stmt  go to state 59
    assign_stmt    go to state 60
    goto_stmt      go to state 61
    if_stmt        go to state 62
    repeat_stmt    go to state 63
    while_stmt     go to state 64
    case_stmt      go to state 65
    for_stmt       go to state 66
    for_head       go to state 67
    proc_stmt      go to state 68
    lvalue         go to state 69


State 242

   95 if_stmt: IF expression stmt else_clause •

    $default  reduce using rule 95 (if_stmt)


State 243

  130 expr: expr PLUS term •
  134 term: term • MUL factor
  135     | term • DIV factor
  136     | term • MOD factor
  137     | term • AND factor

    MUL  shift, and go to state 184
    DIV  shift, and go to state 185
    AND  shift, and go to state 186
    MOD  shift, and go to state 187

    $default  reduce using rule 130 (expr)


State 244

  131 expr: expr MINUS term •
  134 term: term • MUL factor
  135     | term • DIV factor
  136     | term • MOD factor
  137     | term • AND factor

    MUL  shift, and go to state 184
    DIV  shift, and go to state 185
    AND  shift, and go to state 186
    MOD  shift, and go to state 187

    $default  reduce using rule 131 (expr)


State 245

  132 expr: expr OR term •
  134 term: term • MUL factor
  135     | term • DIV factor
  136     | term • MOD factor
  137     | term • AND factor

    MUL  shift, and go to state 184
    DIV  shift, and go to state 185
    AND  shift, and go to state 186
    MOD  shift, and go to state 187

    $default  reduce using rule 132 (expr)


State 246

  134 term: term MUL factor •

    $default  reduce using rule 134 (term)


State 247

  135 term: term DIV factor •

    $default  reduce using rule 135 (term)


State 248

  137 term: term AND factor •

    $default  reduce using rule 137 (term)


State 249

  136 term: term MOD factor •

    $default  reduce using rule 136 (term)


State 250

   98 repeat_stmt: REPEAT stmt_list UNTIL expression •
  123 expression: expression • GE expr
  124           | expression • GT expr
  125           | expression • LE expr
  126           | expression • LT expr
  127           | expression • EQUAL expr
  128           | expression • UNEQUAL expr

    EQUAL    shift, and go to state 174
    UNEQUAL  shift, and go to state 175
    GE       shift, and go to state 176
    GT       shift, and go to state 177
    LE       shift, and go to state 178
    LT       shift, and go to state 179

    $default  reduce using rule 98 (repeat_stmt)


State 251

  100 while_stmt: WHILE expression DO stmt •

    $default  reduce using rule 100 (while_stmt)


State 252

  106 case_expr: OTHERWISE • stmt SEMICOLON

    BBEGIN       shift, and go to state 16
    IDENT_NAME   shift, and go to state 10
    INTEGER      shift, and go to state 39
    READ         shift, and go to state 40
    READLN       shift, and go to state 41
    WRITE        shift, and go to state 42
    WRITELN      shift, and go to state 43
    MEMORYREAD   shift, and go to state 44
    MEMORYWRITE  shift, and go to state 45
    STACKREAD    shift, and go to state 46
    STACKWRITE   shift, and go to state 47
    IF           shift, and go to state 48
    REPEAT       shift, and go to state 49
    WHILE        shift, and go to state 50
    CASE         shift, and go to state 51
    FOR          shift, and go to state 52
    GOTO         shift, and go to state 53
    BREAK        shift, and go to state 54
    CONTINUE     shift, and go to state 55

    $default  reduce using rule 99 (repeat_stmt)

    identifier     go to state 56
    compound_stmt  go to state 57
    stmt           go to state 289
    no_label_stmt  go to state 59
    assign_stmt    go to state 60
    goto_stmt      go to state 61
    if_stmt        go to state 62
    repeat_stmt    go to state 63
    while_stmt     go to state 64
    case_stmt      go to state 65
    for_stmt       go to state 66
    for_head       go to state 67
    proc_stmt      go to state 68
    lvalue         go to state 69


State 253

  104 case_expr: const_value • COLON stmt SEMICOLON

    COLON  shift, and go to state 290


State 254

  105 case_expr: identifier • COLON stmt SEMICOLON

    COLON  shift, and go to state 291


State 255

  101 case_stmt: CASE expression OF case_expr_list • END
  102 case_expr_list: case_expr_list • case_expr

    END         shift, and go to state 292
    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    MINUS       shift, and go to state 36
    OTHERWISE   shift, and go to state 252

    const_value  go to state 253
    identifier   go to state 254
    case_expr    go to state 293


State 256

  103 case_expr_list: case_expr •

    $default  reduce using rule 103 (case_expr_list)


State 257

  108 for_head: FOR identifier ASSIGN expression • TO expression DO
  109         | FOR identifier ASSIGN expression • DOWNTO expression DO
  123 expression: expression • GE expr
  124           | expression • GT expr
  125           | expression • LE expr
  126           | expression • LT expr
  127           | expression • EQUAL expr
  128           | expression • UNEQUAL expr

    TO       shift, and go to state 294
    DOWNTO   shift, and go to state 295
    EQUAL    shift, and go to state 174
    UNEQUAL  shift, and go to state 175
    GE       shift, and go to state 176
    GT       shift, and go to state 177
    LE       shift, and go to state 178
    LT       shift, and go to state 179


State 258

  155 lvalue: identifier LB expression RB •

    $default  reduce using rule 155 (lvalue)


State 259

  111 proc_stmt: identifier LP args_list RP •

    $default  reduce using rule 111 (proc_stmt)


State 260

  156 lvalue: lvalue LB expression RB •

    $default  reduce using rule 156 (lvalue)


State 261

   64 simple_type: LP name_list RP •

    $default  reduce using rule 64 (simple_type)


State 262

   62 array_type_decl: ARRAY LB simple_type • RB OF type_decl

    RB  shift, and go to state 296


State 263

   57 record_type_decl: RECORD field_decl_list END •

    $default  reduce using rule 57 (record_type_decl)


State 264

   58 field_decl_list: field_decl_list field_decl •

    $default  reduce using rule 58 (field_decl_list)


State 265

   60 field_decl: name_list COLON • type_decl SEMICOLON
   61           | name_list COLON • type_decl

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    MINUS       shift, and go to state 36
    LP          shift, and go to state 126
    INT_TYPE    shift, and go to state 127
    BOOL_TYPE   shift, and go to state 128
    CHAR_TYPE   shift, and go to state 129
    ARRAY       shift, and go to state 130
    RECORD      shift, and go to state 131

    const_value       go to state 132
    type_decl         go to state 297
    record_type_decl  go to state 134
    array_type_decl   go to state 135
    simple_type       go to state 136
    identifier        go to state 137


State 266

   65 simple_type: const_value DOUBLEDOT const_value •

    $default  reduce using rule 65 (simple_type)


State 267

   66 simple_type: identifier DOUBLEDOT identifier •

    $default  reduce using rule 66 (simple_type)


State 268

   32 var_decl: name_list COLON type_decl SEMICOLON •

    $default  reduce using rule 32 (var_decl)


State 269

   26 params_type: VAR • name_list COLON simple_type

    IDENT_NAME  shift, and go to state 10

    name_list   go to state 298
    identifier  go to state 75


State 270

   23 params: LP params_decl • RP
   24 params_decl: params_decl • SEMICOLON params_type

    RP         shift, and go to state 299
    SEMICOLON  shift, and go to state 300


State 271

   25 params_decl: params_type •

    $default  reduce using rule 25 (params_decl)


State 272

   27 params_type: name_list • COLON simple_type
   70 name_list: name_list • COMMA identifier

    COMMA  shift, and go to state 139
    COLON  shift, and go to state 301


State 273

   16 fun_head: FUNCTION IDENT_NAME params COLON • simple_type

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    MINUS       shift, and go to state 36
    LP          shift, and go to state 126
    INT_TYPE    shift, and go to state 127
    BOOL_TYPE   shift, and go to state 128
    CHAR_TYPE   shift, and go to state 129

    const_value  go to state 132
    simple_type  go to state 302
    identifier   go to state 137


State 274

   12 fun_decl: fun_head SEMICOLON routine SEMICOLON •

    $default  reduce using rule 12 (fun_decl)


State 275

   17 proc_decl: proc_head SEMICOLON routine SEMICOLON •

    $default  reduce using rule 17 (proc_decl)


State 276

  121 args_list: args_list COMMA expression •
  123 expression: expression • GE expr
  124           | expression • GT expr
  125           | expression • LE expr
  126           | expression • LT expr
  127           | expression • EQUAL expr
  128           | expression • UNEQUAL expr

    EQUAL    shift, and go to state 174
    UNEQUAL  shift, and go to state 175
    GE       shift, and go to state 176
    GT       shift, and go to state 177
    LE       shift, and go to state 178
    LT       shift, and go to state 179

    $default  reduce using rule 121 (args_list)


State 277

  145 factor: ABS LP args_list RP •

    $default  reduce using rule 145 (factor)


State 278

  146 factor: CHR LP args_list RP •

    $default  reduce using rule 146 (factor)


State 279

  147 factor: ODD LP args_list RP •

    $default  reduce using rule 147 (factor)


State 280

  148 factor: ORD LP args_list RP •

    $default  reduce using rule 148 (factor)


State 281

  149 factor: PRED LP args_list RP •

    $default  reduce using rule 149 (factor)


State 282

  150 factor: SUCC LP args_list RP •

    $default  reduce using rule 150 (factor)


State 283

  151 factor: TOINT LP args_list RP •

    $default  reduce using rule 151 (factor)


State 284

  152 factor: TOCHAR LP args_list RP •

    $default  reduce using rule 152 (factor)


State 285

  153 factor: TOBOOL LP args_list RP •

    $default  reduce using rule 153 (factor)


State 286

  139 factor: identifier LP args_list RP •

    $default  reduce using rule 139 (factor)


State 287

   94 if_stmt: IF expression THEN stmt else_clause •

    $default  reduce using rule 94 (if_stmt)


State 288

   97 else_clause: ELSE stmt •

    $default  reduce using rule 97 (else_clause)


State 289

  106 case_expr: OTHERWISE stmt • SEMICOLON

    SEMICOLON  shift, and go to state 303


State 290

  104 case_expr: const_value COLON • stmt SEMICOLON

    BBEGIN       shift, and go to state 16
    IDENT_NAME   shift, and go to state 10
    INTEGER      shift, and go to state 39
    READ         shift, and go to state 40
    READLN       shift, and go to state 41
    WRITE        shift, and go to state 42
    WRITELN      shift, and go to state 43
    MEMORYREAD   shift, and go to state 44
    MEMORYWRITE  shift, and go to state 45
    STACKREAD    shift, and go to state 46
    STACKWRITE   shift, and go to state 47
    IF           shift, and go to state 48
    REPEAT       shift, and go to state 49
    WHILE        shift, and go to state 50
    CASE         shift, and go to state 51
    FOR          shift, and go to state 52
    GOTO         shift, and go to state 53
    BREAK        shift, and go to state 54
    CONTINUE     shift, and go to state 55

    $default  reduce using rule 99 (repeat_stmt)

    identifier     go to state 56
    compound_stmt  go to state 57
    stmt           go to state 304
    no_label_stmt  go to state 59
    assign_stmt    go to state 60
    goto_stmt      go to state 61
    if_stmt        go to state 62
    repeat_stmt    go to state 63
    while_stmt     go to state 64
    case_stmt      go to state 65
    for_stmt       go to state 66
    for_head       go to state 67
    proc_stmt      go to state 68
    lvalue         go to state 69


State 291

  105 case_expr: identifier COLON • stmt SEMICOLON

    BBEGIN       shift, and go to state 16
    IDENT_NAME   shift, and go to state 10
    INTEGER      shift, and go to state 39
    READ         shift, and go to state 40
    READLN       shift, and go to state 41
    WRITE        shift, and go to state 42
    WRITELN      shift, and go to state 43
    MEMORYREAD   shift, and go to state 44
    MEMORYWRITE  shift, and go to state 45
    STACKREAD    shift, and go to state 46
    STACKWRITE   shift, and go to state 47
    IF           shift, and go to state 48
    REPEAT       shift, and go to state 49
    WHILE        shift, and go to state 50
    CASE         shift, and go to state 51
    FOR          shift, and go to state 52
    GOTO         shift, and go to state 53
    BREAK        shift, and go to state 54
    CONTINUE     shift, and go to state 55

    $default  reduce using rule 99 (repeat_stmt)

    identifier     go to state 56
    compound_stmt  go to state 57
    stmt           go to state 305
    no_label_stmt  go to state 59
    assign_stmt    go to state 60
    goto_stmt      go to state 61
    if_stmt        go to state 62
    repeat_stmt    go to state 63
    while_stmt     go to state 64
    case_stmt      go to state 65
    for_stmt       go to state 66
    for_head       go to state 67
    proc_stmt      go to state 68
    lvalue         go to state 69


State 292

  101 case_stmt: CASE expression OF case_expr_list END •

    $default  reduce using rule 101 (case_stmt)


State 293

  102 case_expr_list: case_expr_list case_expr •

    $default  reduce using rule 102 (case_expr_list)


State 294

  108 for_head: FOR identifier ASSIGN expression TO • expression DO

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 94
    CHR         shift, and go to state 95
    ODD         shift, and go to state 96
    ORD         shift, and go to state 97
    PRED        shift, and go to state 98
    SUCC        shift, and go to state 99
    TOINT       shift, and go to state 100
    TOCHAR      shift, and go to state 101
    TOBOOL      shift, and go to state 102
    MINUS       shift, and go to state 103
    NOT         shift, and go to state 104
    LP          shift, and go to state 105

    const_value  go to state 106
    identifier   go to state 107
    expression   go to state 306
    expr         go to state 109
    term         go to state 110
    factor       go to state 111
    lvalue       go to state 112


State 295

  109 for_head: FOR identifier ASSIGN expression DOWNTO • expression DO

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 94
    CHR         shift, and go to state 95
    ODD         shift, and go to state 96
    ORD         shift, and go to state 97
    PRED        shift, and go to state 98
    SUCC        shift, and go to state 99
    TOINT       shift, and go to state 100
    TOCHAR      shift, and go to state 101
    TOBOOL      shift, and go to state 102
    MINUS       shift, and go to state 103
    NOT         shift, and go to state 104
    LP          shift, and go to state 105

    const_value  go to state 106
    identifier   go to state 107
    expression   go to state 307
    expr         go to state 109
    term         go to state 110
    factor       go to state 111
    lvalue       go to state 112


State 296

   62 array_type_decl: ARRAY LB simple_type RB • OF type_decl

    OF  shift, and go to state 308


State 297

   60 field_decl: name_list COLON type_decl • SEMICOLON
   61           | name_list COLON type_decl •

    SEMICOLON  shift, and go to state 309

    $default  reduce using rule 61 (field_decl)


State 298

   26 params_type: VAR name_list • COLON simple_type
   70 name_list: name_list • COMMA identifier

    COMMA  shift, and go to state 139
    COLON  shift, and go to state 310


State 299

   23 params: LP params_decl RP •

    $default  reduce using rule 23 (params)


State 300

   24 params_decl: params_decl SEMICOLON • params_type

    VAR         shift, and go to state 269
    IDENT_NAME  shift, and go to state 10

    params_type  go to state 311
    name_list    go to state 272
    identifier   go to state 75


State 301

   27 params_type: name_list COLON • simple_type

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    MINUS       shift, and go to state 36
    LP          shift, and go to state 126
    INT_TYPE    shift, and go to state 127
    BOOL_TYPE   shift, and go to state 128
    CHAR_TYPE   shift, and go to state 129

    const_value  go to state 132
    simple_type  go to state 312
    identifier   go to state 137


State 302

   16 fun_head: FUNCTION IDENT_NAME params COLON simple_type •

    $default  reduce using rule 16 (fun_head)


State 303

  106 case_expr: OTHERWISE stmt SEMICOLON •

    $default  reduce using rule 106 (case_expr)


State 304

  104 case_expr: const_value COLON stmt • SEMICOLON

    SEMICOLON  shift, and go to state 313


State 305

  105 case_expr: identifier COLON stmt • SEMICOLON

    SEMICOLON  shift, and go to state 314


State 306

  108 for_head: FOR identifier ASSIGN expression TO expression • DO
  123 expression: expression • GE expr
  124           | expression • GT expr
  125           | expression • LE expr
  126           | expression • LT expr
  127           | expression • EQUAL expr
  128           | expression • UNEQUAL expr

    DO       shift, and go to state 315
    EQUAL    shift, and go to state 174
    UNEQUAL  shift, and go to state 175
    GE       shift, and go to state 176
    GT       shift, and go to state 177
    LE       shift, and go to state 178
    LT       shift, and go to state 179


State 307

  109 for_head: FOR identifier ASSIGN expression DOWNTO expression • DO
  123 expression: expression • GE expr
  124           | expression • GT expr
  125           | expression • LE expr
  126           | expression • LT expr
  127           | expression • EQUAL expr
  128           | expression • UNEQUAL expr

    DO       shift, and go to state 316
    EQUAL    shift, and go to state 174
    UNEQUAL  shift, and go to state 175
    GE       shift, and go to state 176
    GT       shift, and go to state 177
    LE       shift, and go to state 178
    LT       shift, and go to state 179


State 308

   62 array_type_decl: ARRAY LB simple_type RB OF • type_decl

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    MINUS       shift, and go to state 36
    LP          shift, and go to state 126
    INT_TYPE    shift, and go to state 127
    BOOL_TYPE   shift, and go to state 128
    CHAR_TYPE   shift, and go to state 129
    ARRAY       shift, and go to state 130
    RECORD      shift, and go to state 131

    const_value       go to state 132
    type_decl         go to state 317
    record_type_decl  go to state 134
    array_type_decl   go to state 135
    simple_type       go to state 136
    identifier        go to state 137


State 309

   60 field_decl: name_list COLON type_decl SEMICOLON •

    $default  reduce using rule 60 (field_decl)


State 310

   26 params_type: VAR name_list COLON • simple_type

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    MINUS       shift, and go to state 36
    LP          shift, and go to state 126
    INT_TYPE    shift, and go to state 127
    BOOL_TYPE   shift, and go to state 128
    CHAR_TYPE   shift, and go to state 129

    const_value  go to state 132
    simple_type  go to state 318
    identifier   go to state 137


State 311

   24 params_decl: params_decl SEMICOLON params_type •

    $default  reduce using rule 24 (params_decl)


State 312

   27 params_type: name_list COLON simple_type •

    $default  reduce using rule 27 (params_type)


State 313

  104 case_expr: const_value COLON stmt SEMICOLON •

    $default  reduce using rule 104 (case_expr)


State 314

  105 case_expr: identifier COLON stmt SEMICOLON •

    $default  reduce using rule 105 (case_expr)


State 315

  108 for_head: FOR identifier ASSIGN expression TO expression DO •

    $default  reduce using rule 108 (for_head)


State 316

  109 for_head: FOR identifier ASSIGN expression DOWNTO expression DO •

    $default  reduce using rule 109 (for_head)


State 317

   62 array_type_decl: ARRAY LB simple_type RB OF type_decl •

    $default  reduce using rule 62 (array_type_decl)


State 318

   26 params_type: VAR name_list COLON simple_type •

    $default  reduce using rule 26 (params_type)
