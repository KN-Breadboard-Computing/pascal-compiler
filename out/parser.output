Terminals unused in grammar

    BOOLEAN
    STRING_TYPE
    ERROR


State 24 conflicts: 13 shift/reduce, 20 reduce/reduce
State 29 conflicts: 2 shift/reduce
State 48 conflicts: 1 shift/reduce
State 50 conflicts: 1 shift/reduce
State 74 conflicts: 11 shift/reduce
State 88 conflicts: 1 shift/reduce
State 89 conflicts: 12 shift/reduce
State 93 conflicts: 13 shift/reduce
State 143 conflicts: 12 shift/reduce
State 150 conflicts: 1 shift/reduce
State 159 conflicts: 12 shift/reduce
State 197 conflicts: 1 shift/reduce
State 204 conflicts: 12 shift/reduce
State 280 conflicts: 12 shift/reduce
State 281 conflicts: 12 shift/reduce


Grammar

    0 $accept: program $end

    1 program: PROGRAM IDENT_NAME SEMICOLON routine DOT
    2        | PROGRAM IDENT_NAME SEMICOLON routine
    3        | PROGRAM IDENT_NAME routine DOT
    4        | PROGRAM IDENT_NAME routine

    5 routine: routine_head routine_body

    6 routine_head: const_part type_part var_part routine_part

    7 routine_part: ε
    8             | routine_part fun_decl
    9             | routine_part proc_decl
   10             | fun_decl
   11             | proc_decl

   12 fun_decl: fun_head SEMICOLON routine SEMICOLON
   13         | fun_head SEMICOLON routine
   14         | fun_head routine SEMICOLON
   15         | fun_head routine

   16 fun_head: FUNCTION IDENT_NAME params COLON simple_type

   17 proc_decl: proc_head SEMICOLON routine SEMICOLON

   18 proc_head: PROCEDURE IDENT_NAME params

   19 params: ε
   20       | LP params_decl RP

   21 params_decl: params_decl SEMICOLON params_type
   22            | params_type

   23 params_type: VAR name_list COLON simple_type
   24            | name_list COLON simple_type

   25 var_part: ε
   26         | VAR var_decl_list

   27 var_decl_list: var_decl_list var_decl
   28              | var_decl

   29 var_decl: name_list COLON type_decl SEMICOLON
   30         | name_list COLON type_decl

   31 const_part: ε
   32           | CONST const_expr_list

   33 const_expr_list: const_expr_list const_expr
   34                | const_expr

   35 const_expr: identifier EQUAL const_value SEMICOLON
   36           | identifier EQUAL const_value

   37 const_value: INTEGER
   38            | CHAR
   39            | STRING
   40            | TRUE
   41            | FALSE
   42            | MAXINT

   43 type_part: ε
   44          | TYPE type_decl_list

   45 type_decl_list: type_decl_list type_def
   46               | type_def

   47 type_def: identifier EQUAL type_decl SEMICOLON
   48         | identifier EQUAL type_decl

   49 type_decl: simple_type
   50          | array_type_decl
   51          | record_type_decl

   52 record_type_decl: RECORD field_decl_list END

   53 field_decl_list: field_decl_list field_decl
   54                | field_decl

   55 field_decl: name_list COLON type_decl SEMICOLON
   56           | name_list COLON type_decl

   57 array_type_decl: ARRAY LB simple_type RB OF type_decl

   58 simple_type: identifier
   59            | LP name_list RP
   60            | const_value DOUBLEDOT const_value
   61            | MINUS const_value DOUBLEDOT const_value
   62            | MINUS const_value DOUBLEDOT MINUS const_value
   63            | identifier DOUBLEDOT identifier
   64            | INT_TYPE
   65            | BOOL_TYPE
   66            | CHAR_TYPE

   67 name_list: name_list COMMA identifier
   68          | identifier

   69 identifier: IDENT_NAME

   70 routine_body: compound_stmt

   71 compound_stmt: BBEGIN stmt_list END
   72              | BBEGIN stmt_list

   73 stmt_list: ε
   74          | stmt_list stmt SEMICOLON
   75          | stmt_list stmt

   76 stmt: INTEGER COLON no_label_stmt
   77     | no_label_stmt

   78 no_label_stmt: assign_stmt
   79              | compound_stmt
   80              | goto_stmt
   81              | if_stmt
   82              | repeat_stmt
   83              | while_stmt
   84              | case_stmt
   85              | for_stmt
   86              | proc_stmt

   87 assign_stmt: identifier ASSIGN expression
   88            | identifier LB expression RB ASSIGN expression
   89            | identifier DOT identifier ASSIGN expression

   90 goto_stmt: GOTO INTEGER

   91 if_stmt: IF expression THEN stmt else_clause
   92        | IF expression stmt else_clause

   93 else_clause: ε
   94            | ELSE stmt

   95 repeat_stmt: REPEAT stmt_list UNTIL expression
   96            | ε

   97 while_stmt: WHILE expression DO stmt

   98 case_stmt: CASE expression OF case_expr_list END

   99 case_expr_list: case_expr_list case_expr
  100               | case_expr

  101 case_expr: const_value COLON stmt SEMICOLON
  102          | identifier COLON stmt SEMICOLON

  103 for_stmt: FOR identifier ASSIGN expression TO expression DO stmt
  104         | FOR identifier ASSIGN expression DOWNTO expression DO stmt

  105 proc_stmt: identifier
  106          | identifier LP args_list RP
  107          | READ LP factor RP
  108          | WRITE LP args_list RP
  109          | WRITELN
  110          | WRITELN LP args_list RP

  111 args_list: args_list COMMA expression
  112          | expression

  113 expression: expression GE expr
  114           | expression GT expr
  115           | expression LE expr
  116           | expression LT expr
  117           | expression EQUAL expr
  118           | expression UNEQUAL expr
  119           | expr

  120 expr: expr PLUS term
  121     | expr MINUS term
  122     | expr OR term
  123     | term

  124 term: term MUL factor
  125     | term DIV factor
  126     | term MOD factor
  127     | term AND factor
  128     | factor

  129 factor: identifier
  130       | identifier LP args_list RP
  131       | const_value
  132       | LP expression RP
  133       | NOT factor
  134       | MINUS factor
  135       | identifier LB expression RB
  136       | identifier DOT identifier
  137       | ABS LP args_list RP
  138       | CHR LP args_list RP
  139       | ODD LP args_list RP
  140       | ORD LP args_list RP
  141       | PRED LP args_list RP
  142       | SUCC LP args_list RP


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    PROGRAM <token> (258) 1 2 3 4
    FUNCTION <token> (259) 16
    PROCEDURE <token> (260) 18
    CONST <token> (261) 32
    TYPE <token> (262) 44
    VAR <token> (263) 23 26
    BBEGIN <token> (264) 71 72
    END <token> (265) 52 71 98
    IDENT_NAME <token> (266) 1 2 3 4 16 18 69
    INTEGER <token> (267) 37 76 90
    BOOLEAN <token> (268)
    CHAR <token> (269) 38
    STRING <token> (270) 39
    TRUE <token> (271) 40
    FALSE <token> (272) 41
    MAXINT <token> (273) 42
    READ <token> (274) 107
    WRITE <token> (275) 108
    WRITELN <token> (276) 109 110
    ABS <token> (277) 137
    CHR <token> (278) 138
    ODD <token> (279) 139
    ORD <token> (280) 140
    PRED <token> (281) 141
    SUCC <token> (282) 142
    IF <token> (283) 91 92
    THEN <token> (284) 91
    ELSE <token> (285) 94
    REPEAT <token> (286) 95
    UNTIL <token> (287) 95
    WHILE <token> (288) 97
    DO <token> (289) 97 103 104
    CASE <token> (290) 98
    TO <token> (291) 103
    DOWNTO <token> (292) 104
    FOR <token> (293) 103 104
    EQUAL <token> (294) 35 36 47 48 117
    UNEQUAL <token> (295) 118
    GE <token> (296) 113
    GT <token> (297) 114
    LE <token> (298) 115
    LT <token> (299) 116
    ASSIGN <token> (300) 87 88 89 103 104
    PLUS <token> (301) 120
    MINUS <token> (302) 61 62 121 134
    MUL <token> (303) 124
    DIV <token> (304) 125
    OR <token> (305) 122
    AND <token> (306) 127
    NOT <token> (307) 133
    MOD <token> (308) 126
    LB <token> (309) 57 88 135
    RB <token> (310) 57 88 135
    LP <token> (311) 20 59 106 107 108 110 130 132 137 138 139 140 141 142
    RP <token> (312) 20 59 106 107 108 110 130 132 137 138 139 140 141 142
    SEMICOLON <token> (313) 1 2 12 13 14 17 21 29 35 47 55 74 101 102
    DOT <token> (314) 1 3 89 136
    DOUBLEDOT <token> (315) 60 61 62 63
    COMMA <token> (316) 67 111
    COLON <token> (317) 16 23 24 29 30 55 56 76 101 102
    INT_TYPE <token> (318) 64
    BOOL_TYPE <token> (319) 65
    CHAR_TYPE <token> (320) 66
    STRING_TYPE <token> (321)
    ARRAY <token> (322) 57
    OF <token> (323) 57 98
    RECORD <token> (324) 52
    GOTO <token> (325) 90
    ERROR <token> (326)


Nonterminals, with rules where they appear

    $accept (72)
        on left: 0
    program <programNode> (73)
        on left: 1 2 3 4
        on right: 0
    routine <routineNode> (74)
        on left: 5
        on right: 1 2 3 4 12 13 14 15 17
    routine_head <routineHeadNode> (75)
        on left: 6
        on right: 5
    routine_part <routinePartList> (76)
        on left: 7 8 9 10 11
        on right: 6 8 9
    fun_decl <routineDeclarationNode> (77)
        on left: 12 13 14 15
        on right: 8 10
    fun_head <routineDeclarationNode> (78)
        on left: 16
        on right: 12 13 14 15
    proc_decl <routineDeclarationNode> (79)
        on left: 17
        on right: 9 11
    proc_head <routineDeclarationNode> (80)
        on left: 18
        on right: 17
    params <paramsNode> (81)
        on left: 19 20
        on right: 16 18
    params_decl <paramsGroupList> (82)
        on left: 21 22
        on right: 20 21
    params_type <paramsGroupNode> (83)
        on left: 23 24
        on right: 21 22
    var_part <varPartList> (84)
        on left: 25 26
        on right: 6
    var_decl_list <varPartList> (85)
        on left: 27 28
        on right: 26 27
    var_decl <varPartListElement> (86)
        on left: 29 30
        on right: 27 28
    const_part <constPartList> (87)
        on left: 31 32
        on right: 6
    const_expr_list <constPartList> (88)
        on left: 33 34
        on right: 32 33
    const_expr <constPartListElement> (89)
        on left: 35 36
        on right: 33 34
    const_value <constantNode> (90)
        on left: 37 38 39 40 41 42
        on right: 35 36 60 61 62 101 131
    type_part <typePartList> (91)
        on left: 43 44
        on right: 6
    type_decl_list <typePartList> (92)
        on left: 45 46
        on right: 44 45
    type_def <typePartListElement> (93)
        on left: 47 48
        on right: 45 46
    type_decl <typeNode> (94)
        on left: 49 50 51
        on right: 29 30 47 48 55 56 57
    record_type_decl <recordTypeNode> (95)
        on left: 52
        on right: 51
    field_decl_list <fieldDeclList> (96)
        on left: 53 54
        on right: 52 53
    field_decl <fieldDeclListElement> (97)
        on left: 55 56
        on right: 53 54
    array_type_decl <arrayTypeNode> (98)
        on left: 57
        on right: 50
    simple_type <simpleTypeNode> (99)
        on left: 58 59 60 61 62 63 64 65 66
        on right: 16 23 24 49 57
    name_list <identifierList> (100)
        on left: 67 68
        on right: 23 24 29 30 55 56 59 67
    identifier <identifierNode> (101)
        on left: 69
        on right: 35 36 47 48 58 63 67 68 87 88 89 102 103 104 105 106 129 130 135 136
    routine_body <routineBodyNode> (102)
        on left: 70
        on right: 5
    compound_stmt <statementNodeList> (103)
        on left: 71 72
        on right: 70 79
    stmt_list <statementNodeList> (104)
        on left: 73 74 75
        on right: 71 72 74 75 95
    stmt <statementNode> (105)
        on left: 76 77
        on right: 74 75 91 92 94 97 101 102 103 104
    no_label_stmt <statementNode> (106)
        on left: 78 79 80 81 82 83 84 85 86
        on right: 76 77
    assign_stmt <token> (107)
        on left: 87 88 89
        on right: 78
    goto_stmt <token> (108)
        on left: 90
        on right: 80
    if_stmt <token> (109)
        on left: 91 92
        on right: 81
    else_clause <token> (110)
        on left: 93 94
        on right: 91 92
    repeat_stmt <token> (111)
        on left: 95 96
        on right: 82
    while_stmt <token> (112)
        on left: 97
        on right: 83
    case_stmt <token> (113)
        on left: 98
        on right: 84
    case_expr_list <token> (114)
        on left: 99 100
        on right: 98 99
    case_expr <token> (115)
        on left: 101 102
        on right: 99 100
    for_stmt <token> (116)
        on left: 103 104
        on right: 85
    proc_stmt <token> (117)
        on left: 105 106 107 108 109 110
        on right: 86
    args_list <token> (118)
        on left: 111 112
        on right: 106 108 110 111 130 137 138 139 140 141 142
    expression <token> (119)
        on left: 113 114 115 116 117 118 119
        on right: 87 88 89 91 92 95 97 98 103 104 111 112 113 114 115 116 117 118 132 135
    expr <token> (120)
        on left: 120 121 122 123
        on right: 113 114 115 116 117 118 119 120 121 122
    term <token> (121)
        on left: 124 125 126 127 128
        on right: 120 121 122 123 124 125 126 127
    factor <token> (122)
        on left: 129 130 131 132 133 134 135 136 137 138 139 140 141 142
        on right: 107 124 125 126 127 128 133 134


State 0

    0 $accept: • program $end

    PROGRAM  shift, and go to state 1

    program  go to state 2


State 1

    1 program: PROGRAM • IDENT_NAME SEMICOLON routine DOT
    2        | PROGRAM • IDENT_NAME SEMICOLON routine
    3        | PROGRAM • IDENT_NAME routine DOT
    4        | PROGRAM • IDENT_NAME routine

    IDENT_NAME  shift, and go to state 3


State 2

    0 $accept: program • $end

    $end  shift, and go to state 4


State 3

    1 program: PROGRAM IDENT_NAME • SEMICOLON routine DOT
    2        | PROGRAM IDENT_NAME • SEMICOLON routine
    3        | PROGRAM IDENT_NAME • routine DOT
    4        | PROGRAM IDENT_NAME • routine

    CONST      shift, and go to state 5
    SEMICOLON  shift, and go to state 6

    $default  reduce using rule 31 (const_part)

    routine       go to state 7
    routine_head  go to state 8
    const_part    go to state 9


State 4

    0 $accept: program $end •

    $default  accept


State 5

   32 const_part: CONST • const_expr_list

    IDENT_NAME  shift, and go to state 10

    const_expr_list  go to state 11
    const_expr       go to state 12
    identifier       go to state 13


State 6

    1 program: PROGRAM IDENT_NAME SEMICOLON • routine DOT
    2        | PROGRAM IDENT_NAME SEMICOLON • routine

    CONST  shift, and go to state 5

    $default  reduce using rule 31 (const_part)

    routine       go to state 14
    routine_head  go to state 8
    const_part    go to state 9


State 7

    3 program: PROGRAM IDENT_NAME routine • DOT
    4        | PROGRAM IDENT_NAME routine •

    DOT  shift, and go to state 15

    $default  reduce using rule 4 (program)


State 8

    5 routine: routine_head • routine_body

    BBEGIN  shift, and go to state 16

    routine_body   go to state 17
    compound_stmt  go to state 18


State 9

    6 routine_head: const_part • type_part var_part routine_part

    TYPE  shift, and go to state 19

    $default  reduce using rule 43 (type_part)

    type_part  go to state 20


State 10

   69 identifier: IDENT_NAME •

    $default  reduce using rule 69 (identifier)


State 11

   32 const_part: CONST const_expr_list •
   33 const_expr_list: const_expr_list • const_expr

    IDENT_NAME  shift, and go to state 10

    $default  reduce using rule 32 (const_part)

    const_expr  go to state 21
    identifier  go to state 13


State 12

   34 const_expr_list: const_expr •

    $default  reduce using rule 34 (const_expr_list)


State 13

   35 const_expr: identifier • EQUAL const_value SEMICOLON
   36           | identifier • EQUAL const_value

    EQUAL  shift, and go to state 22


State 14

    1 program: PROGRAM IDENT_NAME SEMICOLON routine • DOT
    2        | PROGRAM IDENT_NAME SEMICOLON routine •

    DOT  shift, and go to state 23

    $default  reduce using rule 2 (program)


State 15

    3 program: PROGRAM IDENT_NAME routine DOT •

    $default  reduce using rule 3 (program)


State 16

   71 compound_stmt: BBEGIN • stmt_list END
   72              | BBEGIN • stmt_list

    $default  reduce using rule 73 (stmt_list)

    stmt_list  go to state 24


State 17

    5 routine: routine_head routine_body •

    $default  reduce using rule 5 (routine)


State 18

   70 routine_body: compound_stmt •

    $default  reduce using rule 70 (routine_body)


State 19

   44 type_part: TYPE • type_decl_list

    IDENT_NAME  shift, and go to state 10

    type_decl_list  go to state 25
    type_def        go to state 26
    identifier      go to state 27


State 20

    6 routine_head: const_part type_part • var_part routine_part

    VAR  shift, and go to state 28

    $default  reduce using rule 25 (var_part)

    var_part  go to state 29


State 21

   33 const_expr_list: const_expr_list const_expr •

    $default  reduce using rule 33 (const_expr_list)


State 22

   35 const_expr: identifier EQUAL • const_value SEMICOLON
   36           | identifier EQUAL • const_value

    INTEGER  shift, and go to state 30
    CHAR     shift, and go to state 31
    STRING   shift, and go to state 32
    TRUE     shift, and go to state 33
    FALSE    shift, and go to state 34
    MAXINT   shift, and go to state 35

    const_value  go to state 36


State 23

    1 program: PROGRAM IDENT_NAME SEMICOLON routine DOT •

    $default  reduce using rule 1 (program)


State 24

   71 compound_stmt: BBEGIN stmt_list • END
   72              | BBEGIN stmt_list •
   74 stmt_list: stmt_list • stmt SEMICOLON
   75          | stmt_list • stmt

    BBEGIN      shift, and go to state 16
    END         shift, and go to state 37
    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 38
    READ        shift, and go to state 39
    WRITE       shift, and go to state 40
    WRITELN     shift, and go to state 41
    IF          shift, and go to state 42
    REPEAT      shift, and go to state 43
    WHILE       shift, and go to state 44
    CASE        shift, and go to state 45
    FOR         shift, and go to state 46
    GOTO        shift, and go to state 47

    $end        reduce using rule 72 (compound_stmt)
    $end        [reduce using rule 96 (repeat_stmt)]
    FUNCTION    reduce using rule 72 (compound_stmt)
    FUNCTION    [reduce using rule 96 (repeat_stmt)]
    PROCEDURE   reduce using rule 72 (compound_stmt)
    PROCEDURE   [reduce using rule 96 (repeat_stmt)]
    BBEGIN      [reduce using rule 72 (compound_stmt)]
    BBEGIN      [reduce using rule 96 (repeat_stmt)]
    END         [reduce using rule 72 (compound_stmt)]
    END         [reduce using rule 96 (repeat_stmt)]
    IDENT_NAME  [reduce using rule 72 (compound_stmt)]
    IDENT_NAME  [reduce using rule 96 (repeat_stmt)]
    INTEGER     [reduce using rule 72 (compound_stmt)]
    INTEGER     [reduce using rule 96 (repeat_stmt)]
    READ        [reduce using rule 72 (compound_stmt)]
    READ        [reduce using rule 96 (repeat_stmt)]
    WRITE       [reduce using rule 72 (compound_stmt)]
    WRITE       [reduce using rule 96 (repeat_stmt)]
    WRITELN     [reduce using rule 72 (compound_stmt)]
    WRITELN     [reduce using rule 96 (repeat_stmt)]
    IF          [reduce using rule 72 (compound_stmt)]
    IF          [reduce using rule 96 (repeat_stmt)]
    ELSE        reduce using rule 72 (compound_stmt)
    ELSE        [reduce using rule 96 (repeat_stmt)]
    REPEAT      [reduce using rule 72 (compound_stmt)]
    REPEAT      [reduce using rule 96 (repeat_stmt)]
    UNTIL       reduce using rule 72 (compound_stmt)
    UNTIL       [reduce using rule 96 (repeat_stmt)]
    WHILE       [reduce using rule 72 (compound_stmt)]
    WHILE       [reduce using rule 96 (repeat_stmt)]
    CASE        [reduce using rule 72 (compound_stmt)]
    CASE        [reduce using rule 96 (repeat_stmt)]
    FOR         [reduce using rule 72 (compound_stmt)]
    FOR         [reduce using rule 96 (repeat_stmt)]
    SEMICOLON   reduce using rule 72 (compound_stmt)
    SEMICOLON   [reduce using rule 96 (repeat_stmt)]
    DOT         reduce using rule 72 (compound_stmt)
    DOT         [reduce using rule 96 (repeat_stmt)]
    GOTO        [reduce using rule 72 (compound_stmt)]
    GOTO        [reduce using rule 96 (repeat_stmt)]
    $default    reduce using rule 72 (compound_stmt)

    identifier     go to state 48
    compound_stmt  go to state 49
    stmt           go to state 50
    no_label_stmt  go to state 51
    assign_stmt    go to state 52
    goto_stmt      go to state 53
    if_stmt        go to state 54
    repeat_stmt    go to state 55
    while_stmt     go to state 56
    case_stmt      go to state 57
    for_stmt       go to state 58
    proc_stmt      go to state 59


State 25

   44 type_part: TYPE type_decl_list •
   45 type_decl_list: type_decl_list • type_def

    IDENT_NAME  shift, and go to state 10

    $default  reduce using rule 44 (type_part)

    type_def    go to state 60
    identifier  go to state 27


State 26

   46 type_decl_list: type_def •

    $default  reduce using rule 46 (type_decl_list)


State 27

   47 type_def: identifier • EQUAL type_decl SEMICOLON
   48         | identifier • EQUAL type_decl

    EQUAL  shift, and go to state 61


State 28

   26 var_part: VAR • var_decl_list

    IDENT_NAME  shift, and go to state 10

    var_decl_list  go to state 62
    var_decl       go to state 63
    name_list      go to state 64
    identifier     go to state 65


State 29

    6 routine_head: const_part type_part var_part • routine_part

    FUNCTION   shift, and go to state 66
    PROCEDURE  shift, and go to state 67

    FUNCTION   [reduce using rule 7 (routine_part)]
    PROCEDURE  [reduce using rule 7 (routine_part)]
    $default   reduce using rule 7 (routine_part)

    routine_part  go to state 68
    fun_decl      go to state 69
    fun_head      go to state 70
    proc_decl     go to state 71
    proc_head     go to state 72


State 30

   37 const_value: INTEGER •

    $default  reduce using rule 37 (const_value)


State 31

   38 const_value: CHAR •

    $default  reduce using rule 38 (const_value)


State 32

   39 const_value: STRING •

    $default  reduce using rule 39 (const_value)


State 33

   40 const_value: TRUE •

    $default  reduce using rule 40 (const_value)


State 34

   41 const_value: FALSE •

    $default  reduce using rule 41 (const_value)


State 35

   42 const_value: MAXINT •

    $default  reduce using rule 42 (const_value)


State 36

   35 const_expr: identifier EQUAL const_value • SEMICOLON
   36           | identifier EQUAL const_value •

    SEMICOLON  shift, and go to state 73

    $default  reduce using rule 36 (const_expr)


State 37

   71 compound_stmt: BBEGIN stmt_list END •

    $default  reduce using rule 71 (compound_stmt)


State 38

   76 stmt: INTEGER • COLON no_label_stmt

    COLON  shift, and go to state 74


State 39

  107 proc_stmt: READ • LP factor RP

    LP  shift, and go to state 75


State 40

  108 proc_stmt: WRITE • LP args_list RP

    LP  shift, and go to state 76


State 41

  109 proc_stmt: WRITELN •
  110          | WRITELN • LP args_list RP

    LP  shift, and go to state 77

    $default  reduce using rule 109 (proc_stmt)


State 42

   91 if_stmt: IF • expression THEN stmt else_clause
   92        | IF • expression stmt else_clause

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 78
    CHR         shift, and go to state 79
    ODD         shift, and go to state 80
    ORD         shift, and go to state 81
    PRED        shift, and go to state 82
    SUCC        shift, and go to state 83
    MINUS       shift, and go to state 84
    NOT         shift, and go to state 85
    LP          shift, and go to state 86

    const_value  go to state 87
    identifier   go to state 88
    expression   go to state 89
    expr         go to state 90
    term         go to state 91
    factor       go to state 92


State 43

   95 repeat_stmt: REPEAT • stmt_list UNTIL expression

    $default  reduce using rule 73 (stmt_list)

    stmt_list  go to state 93


State 44

   97 while_stmt: WHILE • expression DO stmt

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 78
    CHR         shift, and go to state 79
    ODD         shift, and go to state 80
    ORD         shift, and go to state 81
    PRED        shift, and go to state 82
    SUCC        shift, and go to state 83
    MINUS       shift, and go to state 84
    NOT         shift, and go to state 85
    LP          shift, and go to state 86

    const_value  go to state 87
    identifier   go to state 88
    expression   go to state 94
    expr         go to state 90
    term         go to state 91
    factor       go to state 92


State 45

   98 case_stmt: CASE • expression OF case_expr_list END

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 78
    CHR         shift, and go to state 79
    ODD         shift, and go to state 80
    ORD         shift, and go to state 81
    PRED        shift, and go to state 82
    SUCC        shift, and go to state 83
    MINUS       shift, and go to state 84
    NOT         shift, and go to state 85
    LP          shift, and go to state 86

    const_value  go to state 87
    identifier   go to state 88
    expression   go to state 95
    expr         go to state 90
    term         go to state 91
    factor       go to state 92


State 46

  103 for_stmt: FOR • identifier ASSIGN expression TO expression DO stmt
  104         | FOR • identifier ASSIGN expression DOWNTO expression DO stmt

    IDENT_NAME  shift, and go to state 10

    identifier  go to state 96


State 47

   90 goto_stmt: GOTO • INTEGER

    INTEGER  shift, and go to state 97


State 48

   87 assign_stmt: identifier • ASSIGN expression
   88            | identifier • LB expression RB ASSIGN expression
   89            | identifier • DOT identifier ASSIGN expression
  105 proc_stmt: identifier •
  106          | identifier • LP args_list RP

    ASSIGN  shift, and go to state 98
    LB      shift, and go to state 99
    LP      shift, and go to state 100
    DOT     shift, and go to state 101

    DOT       [reduce using rule 105 (proc_stmt)]
    $default  reduce using rule 105 (proc_stmt)


State 49

   79 no_label_stmt: compound_stmt •

    $default  reduce using rule 79 (no_label_stmt)


State 50

   74 stmt_list: stmt_list stmt • SEMICOLON
   75          | stmt_list stmt •

    SEMICOLON  shift, and go to state 102

    SEMICOLON  [reduce using rule 75 (stmt_list)]
    $default   reduce using rule 75 (stmt_list)


State 51

   77 stmt: no_label_stmt •

    $default  reduce using rule 77 (stmt)


State 52

   78 no_label_stmt: assign_stmt •

    $default  reduce using rule 78 (no_label_stmt)


State 53

   80 no_label_stmt: goto_stmt •

    $default  reduce using rule 80 (no_label_stmt)


State 54

   81 no_label_stmt: if_stmt •

    $default  reduce using rule 81 (no_label_stmt)


State 55

   82 no_label_stmt: repeat_stmt •

    $default  reduce using rule 82 (no_label_stmt)


State 56

   83 no_label_stmt: while_stmt •

    $default  reduce using rule 83 (no_label_stmt)


State 57

   84 no_label_stmt: case_stmt •

    $default  reduce using rule 84 (no_label_stmt)


State 58

   85 no_label_stmt: for_stmt •

    $default  reduce using rule 85 (no_label_stmt)


State 59

   86 no_label_stmt: proc_stmt •

    $default  reduce using rule 86 (no_label_stmt)


State 60

   45 type_decl_list: type_decl_list type_def •

    $default  reduce using rule 45 (type_decl_list)


State 61

   47 type_def: identifier EQUAL • type_decl SEMICOLON
   48         | identifier EQUAL • type_decl

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    MINUS       shift, and go to state 103
    LP          shift, and go to state 104
    INT_TYPE    shift, and go to state 105
    BOOL_TYPE   shift, and go to state 106
    CHAR_TYPE   shift, and go to state 107
    ARRAY       shift, and go to state 108
    RECORD      shift, and go to state 109

    const_value       go to state 110
    type_decl         go to state 111
    record_type_decl  go to state 112
    array_type_decl   go to state 113
    simple_type       go to state 114
    identifier        go to state 115


State 62

   26 var_part: VAR var_decl_list •
   27 var_decl_list: var_decl_list • var_decl

    IDENT_NAME  shift, and go to state 10

    $default  reduce using rule 26 (var_part)

    var_decl    go to state 116
    name_list   go to state 64
    identifier  go to state 65


State 63

   28 var_decl_list: var_decl •

    $default  reduce using rule 28 (var_decl_list)


State 64

   29 var_decl: name_list • COLON type_decl SEMICOLON
   30         | name_list • COLON type_decl
   67 name_list: name_list • COMMA identifier

    COMMA  shift, and go to state 117
    COLON  shift, and go to state 118


State 65

   68 name_list: identifier •

    $default  reduce using rule 68 (name_list)


State 66

   16 fun_head: FUNCTION • IDENT_NAME params COLON simple_type

    IDENT_NAME  shift, and go to state 119


State 67

   18 proc_head: PROCEDURE • IDENT_NAME params

    IDENT_NAME  shift, and go to state 120


State 68

    6 routine_head: const_part type_part var_part routine_part •
    8 routine_part: routine_part • fun_decl
    9             | routine_part • proc_decl

    FUNCTION   shift, and go to state 66
    PROCEDURE  shift, and go to state 67

    $default  reduce using rule 6 (routine_head)

    fun_decl   go to state 121
    fun_head   go to state 70
    proc_decl  go to state 122
    proc_head  go to state 72


State 69

   10 routine_part: fun_decl •

    $default  reduce using rule 10 (routine_part)


State 70

   12 fun_decl: fun_head • SEMICOLON routine SEMICOLON
   13         | fun_head • SEMICOLON routine
   14         | fun_head • routine SEMICOLON
   15         | fun_head • routine

    CONST      shift, and go to state 5
    SEMICOLON  shift, and go to state 123

    $default  reduce using rule 31 (const_part)

    routine       go to state 124
    routine_head  go to state 8
    const_part    go to state 9


State 71

   11 routine_part: proc_decl •

    $default  reduce using rule 11 (routine_part)


State 72

   17 proc_decl: proc_head • SEMICOLON routine SEMICOLON

    SEMICOLON  shift, and go to state 125


State 73

   35 const_expr: identifier EQUAL const_value SEMICOLON •

    $default  reduce using rule 35 (const_expr)


State 74

   76 stmt: INTEGER COLON • no_label_stmt

    BBEGIN      shift, and go to state 16
    IDENT_NAME  shift, and go to state 10
    READ        shift, and go to state 39
    WRITE       shift, and go to state 40
    WRITELN     shift, and go to state 41
    IF          shift, and go to state 42
    REPEAT      shift, and go to state 43
    WHILE       shift, and go to state 44
    CASE        shift, and go to state 45
    FOR         shift, and go to state 46
    GOTO        shift, and go to state 47

    BBEGIN      [reduce using rule 96 (repeat_stmt)]
    IDENT_NAME  [reduce using rule 96 (repeat_stmt)]
    READ        [reduce using rule 96 (repeat_stmt)]
    WRITE       [reduce using rule 96 (repeat_stmt)]
    WRITELN     [reduce using rule 96 (repeat_stmt)]
    IF          [reduce using rule 96 (repeat_stmt)]
    REPEAT      [reduce using rule 96 (repeat_stmt)]
    WHILE       [reduce using rule 96 (repeat_stmt)]
    CASE        [reduce using rule 96 (repeat_stmt)]
    FOR         [reduce using rule 96 (repeat_stmt)]
    GOTO        [reduce using rule 96 (repeat_stmt)]
    $default    reduce using rule 96 (repeat_stmt)

    identifier     go to state 48
    compound_stmt  go to state 49
    no_label_stmt  go to state 126
    assign_stmt    go to state 52
    goto_stmt      go to state 53
    if_stmt        go to state 54
    repeat_stmt    go to state 55
    while_stmt     go to state 56
    case_stmt      go to state 57
    for_stmt       go to state 58
    proc_stmt      go to state 59


State 75

  107 proc_stmt: READ LP • factor RP

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 78
    CHR         shift, and go to state 79
    ODD         shift, and go to state 80
    ORD         shift, and go to state 81
    PRED        shift, and go to state 82
    SUCC        shift, and go to state 83
    MINUS       shift, and go to state 84
    NOT         shift, and go to state 85
    LP          shift, and go to state 86

    const_value  go to state 87
    identifier   go to state 88
    factor       go to state 127


State 76

  108 proc_stmt: WRITE LP • args_list RP

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 78
    CHR         shift, and go to state 79
    ODD         shift, and go to state 80
    ORD         shift, and go to state 81
    PRED        shift, and go to state 82
    SUCC        shift, and go to state 83
    MINUS       shift, and go to state 84
    NOT         shift, and go to state 85
    LP          shift, and go to state 86

    const_value  go to state 87
    identifier   go to state 88
    args_list    go to state 128
    expression   go to state 129
    expr         go to state 90
    term         go to state 91
    factor       go to state 92


State 77

  110 proc_stmt: WRITELN LP • args_list RP

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 78
    CHR         shift, and go to state 79
    ODD         shift, and go to state 80
    ORD         shift, and go to state 81
    PRED        shift, and go to state 82
    SUCC        shift, and go to state 83
    MINUS       shift, and go to state 84
    NOT         shift, and go to state 85
    LP          shift, and go to state 86

    const_value  go to state 87
    identifier   go to state 88
    args_list    go to state 130
    expression   go to state 129
    expr         go to state 90
    term         go to state 91
    factor       go to state 92


State 78

  137 factor: ABS • LP args_list RP

    LP  shift, and go to state 131


State 79

  138 factor: CHR • LP args_list RP

    LP  shift, and go to state 132


State 80

  139 factor: ODD • LP args_list RP

    LP  shift, and go to state 133


State 81

  140 factor: ORD • LP args_list RP

    LP  shift, and go to state 134


State 82

  141 factor: PRED • LP args_list RP

    LP  shift, and go to state 135


State 83

  142 factor: SUCC • LP args_list RP

    LP  shift, and go to state 136


State 84

  134 factor: MINUS • factor

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 78
    CHR         shift, and go to state 79
    ODD         shift, and go to state 80
    ORD         shift, and go to state 81
    PRED        shift, and go to state 82
    SUCC        shift, and go to state 83
    MINUS       shift, and go to state 84
    NOT         shift, and go to state 85
    LP          shift, and go to state 86

    const_value  go to state 87
    identifier   go to state 88
    factor       go to state 137


State 85

  133 factor: NOT • factor

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 78
    CHR         shift, and go to state 79
    ODD         shift, and go to state 80
    ORD         shift, and go to state 81
    PRED        shift, and go to state 82
    SUCC        shift, and go to state 83
    MINUS       shift, and go to state 84
    NOT         shift, and go to state 85
    LP          shift, and go to state 86

    const_value  go to state 87
    identifier   go to state 88
    factor       go to state 138


State 86

  132 factor: LP • expression RP

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 78
    CHR         shift, and go to state 79
    ODD         shift, and go to state 80
    ORD         shift, and go to state 81
    PRED        shift, and go to state 82
    SUCC        shift, and go to state 83
    MINUS       shift, and go to state 84
    NOT         shift, and go to state 85
    LP          shift, and go to state 86

    const_value  go to state 87
    identifier   go to state 88
    expression   go to state 139
    expr         go to state 90
    term         go to state 91
    factor       go to state 92


State 87

  131 factor: const_value •

    $default  reduce using rule 131 (factor)


State 88

  129 factor: identifier •
  130       | identifier • LP args_list RP
  135       | identifier • LB expression RB
  136       | identifier • DOT identifier

    LB   shift, and go to state 140
    LP   shift, and go to state 141
    DOT  shift, and go to state 142

    DOT       [reduce using rule 129 (factor)]
    $default  reduce using rule 129 (factor)


State 89

   91 if_stmt: IF expression • THEN stmt else_clause
   92        | IF expression • stmt else_clause
  113 expression: expression • GE expr
  114           | expression • GT expr
  115           | expression • LE expr
  116           | expression • LT expr
  117           | expression • EQUAL expr
  118           | expression • UNEQUAL expr

    BBEGIN      shift, and go to state 16
    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 38
    READ        shift, and go to state 39
    WRITE       shift, and go to state 40
    WRITELN     shift, and go to state 41
    IF          shift, and go to state 42
    THEN        shift, and go to state 143
    REPEAT      shift, and go to state 43
    WHILE       shift, and go to state 44
    CASE        shift, and go to state 45
    FOR         shift, and go to state 46
    EQUAL       shift, and go to state 144
    UNEQUAL     shift, and go to state 145
    GE          shift, and go to state 146
    GT          shift, and go to state 147
    LE          shift, and go to state 148
    LT          shift, and go to state 149
    GOTO        shift, and go to state 47

    BBEGIN      [reduce using rule 96 (repeat_stmt)]
    IDENT_NAME  [reduce using rule 96 (repeat_stmt)]
    INTEGER     [reduce using rule 96 (repeat_stmt)]
    READ        [reduce using rule 96 (repeat_stmt)]
    WRITE       [reduce using rule 96 (repeat_stmt)]
    WRITELN     [reduce using rule 96 (repeat_stmt)]
    IF          [reduce using rule 96 (repeat_stmt)]
    REPEAT      [reduce using rule 96 (repeat_stmt)]
    WHILE       [reduce using rule 96 (repeat_stmt)]
    CASE        [reduce using rule 96 (repeat_stmt)]
    FOR         [reduce using rule 96 (repeat_stmt)]
    GOTO        [reduce using rule 96 (repeat_stmt)]
    $default    reduce using rule 96 (repeat_stmt)

    identifier     go to state 48
    compound_stmt  go to state 49
    stmt           go to state 150
    no_label_stmt  go to state 51
    assign_stmt    go to state 52
    goto_stmt      go to state 53
    if_stmt        go to state 54
    repeat_stmt    go to state 55
    while_stmt     go to state 56
    case_stmt      go to state 57
    for_stmt       go to state 58
    proc_stmt      go to state 59


State 90

  119 expression: expr •
  120 expr: expr • PLUS term
  121     | expr • MINUS term
  122     | expr • OR term

    PLUS   shift, and go to state 151
    MINUS  shift, and go to state 152
    OR     shift, and go to state 153

    $default  reduce using rule 119 (expression)


State 91

  123 expr: term •
  124 term: term • MUL factor
  125     | term • DIV factor
  126     | term • MOD factor
  127     | term • AND factor

    MUL  shift, and go to state 154
    DIV  shift, and go to state 155
    AND  shift, and go to state 156
    MOD  shift, and go to state 157

    $default  reduce using rule 123 (expr)


State 92

  128 term: factor •

    $default  reduce using rule 128 (term)


State 93

   74 stmt_list: stmt_list • stmt SEMICOLON
   75          | stmt_list • stmt
   95 repeat_stmt: REPEAT stmt_list • UNTIL expression

    BBEGIN      shift, and go to state 16
    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 38
    READ        shift, and go to state 39
    WRITE       shift, and go to state 40
    WRITELN     shift, and go to state 41
    IF          shift, and go to state 42
    REPEAT      shift, and go to state 43
    UNTIL       shift, and go to state 158
    WHILE       shift, and go to state 44
    CASE        shift, and go to state 45
    FOR         shift, and go to state 46
    GOTO        shift, and go to state 47

    BBEGIN      [reduce using rule 96 (repeat_stmt)]
    IDENT_NAME  [reduce using rule 96 (repeat_stmt)]
    INTEGER     [reduce using rule 96 (repeat_stmt)]
    READ        [reduce using rule 96 (repeat_stmt)]
    WRITE       [reduce using rule 96 (repeat_stmt)]
    WRITELN     [reduce using rule 96 (repeat_stmt)]
    IF          [reduce using rule 96 (repeat_stmt)]
    REPEAT      [reduce using rule 96 (repeat_stmt)]
    UNTIL       [reduce using rule 96 (repeat_stmt)]
    WHILE       [reduce using rule 96 (repeat_stmt)]
    CASE        [reduce using rule 96 (repeat_stmt)]
    FOR         [reduce using rule 96 (repeat_stmt)]
    GOTO        [reduce using rule 96 (repeat_stmt)]
    $default    reduce using rule 96 (repeat_stmt)

    identifier     go to state 48
    compound_stmt  go to state 49
    stmt           go to state 50
    no_label_stmt  go to state 51
    assign_stmt    go to state 52
    goto_stmt      go to state 53
    if_stmt        go to state 54
    repeat_stmt    go to state 55
    while_stmt     go to state 56
    case_stmt      go to state 57
    for_stmt       go to state 58
    proc_stmt      go to state 59


State 94

   97 while_stmt: WHILE expression • DO stmt
  113 expression: expression • GE expr
  114           | expression • GT expr
  115           | expression • LE expr
  116           | expression • LT expr
  117           | expression • EQUAL expr
  118           | expression • UNEQUAL expr

    DO       shift, and go to state 159
    EQUAL    shift, and go to state 144
    UNEQUAL  shift, and go to state 145
    GE       shift, and go to state 146
    GT       shift, and go to state 147
    LE       shift, and go to state 148
    LT       shift, and go to state 149


State 95

   98 case_stmt: CASE expression • OF case_expr_list END
  113 expression: expression • GE expr
  114           | expression • GT expr
  115           | expression • LE expr
  116           | expression • LT expr
  117           | expression • EQUAL expr
  118           | expression • UNEQUAL expr

    EQUAL    shift, and go to state 144
    UNEQUAL  shift, and go to state 145
    GE       shift, and go to state 146
    GT       shift, and go to state 147
    LE       shift, and go to state 148
    LT       shift, and go to state 149
    OF       shift, and go to state 160


State 96

  103 for_stmt: FOR identifier • ASSIGN expression TO expression DO stmt
  104         | FOR identifier • ASSIGN expression DOWNTO expression DO stmt

    ASSIGN  shift, and go to state 161


State 97

   90 goto_stmt: GOTO INTEGER •

    $default  reduce using rule 90 (goto_stmt)


State 98

   87 assign_stmt: identifier ASSIGN • expression

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 78
    CHR         shift, and go to state 79
    ODD         shift, and go to state 80
    ORD         shift, and go to state 81
    PRED        shift, and go to state 82
    SUCC        shift, and go to state 83
    MINUS       shift, and go to state 84
    NOT         shift, and go to state 85
    LP          shift, and go to state 86

    const_value  go to state 87
    identifier   go to state 88
    expression   go to state 162
    expr         go to state 90
    term         go to state 91
    factor       go to state 92


State 99

   88 assign_stmt: identifier LB • expression RB ASSIGN expression

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 78
    CHR         shift, and go to state 79
    ODD         shift, and go to state 80
    ORD         shift, and go to state 81
    PRED        shift, and go to state 82
    SUCC        shift, and go to state 83
    MINUS       shift, and go to state 84
    NOT         shift, and go to state 85
    LP          shift, and go to state 86

    const_value  go to state 87
    identifier   go to state 88
    expression   go to state 163
    expr         go to state 90
    term         go to state 91
    factor       go to state 92


State 100

  106 proc_stmt: identifier LP • args_list RP

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 78
    CHR         shift, and go to state 79
    ODD         shift, and go to state 80
    ORD         shift, and go to state 81
    PRED        shift, and go to state 82
    SUCC        shift, and go to state 83
    MINUS       shift, and go to state 84
    NOT         shift, and go to state 85
    LP          shift, and go to state 86

    const_value  go to state 87
    identifier   go to state 88
    args_list    go to state 164
    expression   go to state 129
    expr         go to state 90
    term         go to state 91
    factor       go to state 92


State 101

   89 assign_stmt: identifier DOT • identifier ASSIGN expression

    IDENT_NAME  shift, and go to state 10

    identifier  go to state 165


State 102

   74 stmt_list: stmt_list stmt SEMICOLON •

    $default  reduce using rule 74 (stmt_list)


State 103

   61 simple_type: MINUS • const_value DOUBLEDOT const_value
   62            | MINUS • const_value DOUBLEDOT MINUS const_value

    INTEGER  shift, and go to state 30
    CHAR     shift, and go to state 31
    STRING   shift, and go to state 32
    TRUE     shift, and go to state 33
    FALSE    shift, and go to state 34
    MAXINT   shift, and go to state 35

    const_value  go to state 166


State 104

   59 simple_type: LP • name_list RP

    IDENT_NAME  shift, and go to state 10

    name_list   go to state 167
    identifier  go to state 65


State 105

   64 simple_type: INT_TYPE •

    $default  reduce using rule 64 (simple_type)


State 106

   65 simple_type: BOOL_TYPE •

    $default  reduce using rule 65 (simple_type)


State 107

   66 simple_type: CHAR_TYPE •

    $default  reduce using rule 66 (simple_type)


State 108

   57 array_type_decl: ARRAY • LB simple_type RB OF type_decl

    LB  shift, and go to state 168


State 109

   52 record_type_decl: RECORD • field_decl_list END

    IDENT_NAME  shift, and go to state 10

    field_decl_list  go to state 169
    field_decl       go to state 170
    name_list        go to state 171
    identifier       go to state 65


State 110

   60 simple_type: const_value • DOUBLEDOT const_value

    DOUBLEDOT  shift, and go to state 172


State 111

   47 type_def: identifier EQUAL type_decl • SEMICOLON
   48         | identifier EQUAL type_decl •

    SEMICOLON  shift, and go to state 173

    $default  reduce using rule 48 (type_def)


State 112

   51 type_decl: record_type_decl •

    $default  reduce using rule 51 (type_decl)


State 113

   50 type_decl: array_type_decl •

    $default  reduce using rule 50 (type_decl)


State 114

   49 type_decl: simple_type •

    $default  reduce using rule 49 (type_decl)


State 115

   58 simple_type: identifier •
   63            | identifier • DOUBLEDOT identifier

    DOUBLEDOT  shift, and go to state 174

    $default  reduce using rule 58 (simple_type)


State 116

   27 var_decl_list: var_decl_list var_decl •

    $default  reduce using rule 27 (var_decl_list)


State 117

   67 name_list: name_list COMMA • identifier

    IDENT_NAME  shift, and go to state 10

    identifier  go to state 175


State 118

   29 var_decl: name_list COLON • type_decl SEMICOLON
   30         | name_list COLON • type_decl

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    MINUS       shift, and go to state 103
    LP          shift, and go to state 104
    INT_TYPE    shift, and go to state 105
    BOOL_TYPE   shift, and go to state 106
    CHAR_TYPE   shift, and go to state 107
    ARRAY       shift, and go to state 108
    RECORD      shift, and go to state 109

    const_value       go to state 110
    type_decl         go to state 176
    record_type_decl  go to state 112
    array_type_decl   go to state 113
    simple_type       go to state 114
    identifier        go to state 115


State 119

   16 fun_head: FUNCTION IDENT_NAME • params COLON simple_type

    LP  shift, and go to state 177

    $default  reduce using rule 19 (params)

    params  go to state 178


State 120

   18 proc_head: PROCEDURE IDENT_NAME • params

    LP  shift, and go to state 177

    $default  reduce using rule 19 (params)

    params  go to state 179


State 121

    8 routine_part: routine_part fun_decl •

    $default  reduce using rule 8 (routine_part)


State 122

    9 routine_part: routine_part proc_decl •

    $default  reduce using rule 9 (routine_part)


State 123

   12 fun_decl: fun_head SEMICOLON • routine SEMICOLON
   13         | fun_head SEMICOLON • routine

    CONST  shift, and go to state 5

    $default  reduce using rule 31 (const_part)

    routine       go to state 180
    routine_head  go to state 8
    const_part    go to state 9


State 124

   14 fun_decl: fun_head routine • SEMICOLON
   15         | fun_head routine •

    SEMICOLON  shift, and go to state 181

    $default  reduce using rule 15 (fun_decl)


State 125

   17 proc_decl: proc_head SEMICOLON • routine SEMICOLON

    CONST  shift, and go to state 5

    $default  reduce using rule 31 (const_part)

    routine       go to state 182
    routine_head  go to state 8
    const_part    go to state 9


State 126

   76 stmt: INTEGER COLON no_label_stmt •

    $default  reduce using rule 76 (stmt)


State 127

  107 proc_stmt: READ LP factor • RP

    RP  shift, and go to state 183


State 128

  108 proc_stmt: WRITE LP args_list • RP
  111 args_list: args_list • COMMA expression

    RP     shift, and go to state 184
    COMMA  shift, and go to state 185


State 129

  112 args_list: expression •
  113 expression: expression • GE expr
  114           | expression • GT expr
  115           | expression • LE expr
  116           | expression • LT expr
  117           | expression • EQUAL expr
  118           | expression • UNEQUAL expr

    EQUAL    shift, and go to state 144
    UNEQUAL  shift, and go to state 145
    GE       shift, and go to state 146
    GT       shift, and go to state 147
    LE       shift, and go to state 148
    LT       shift, and go to state 149

    $default  reduce using rule 112 (args_list)


State 130

  110 proc_stmt: WRITELN LP args_list • RP
  111 args_list: args_list • COMMA expression

    RP     shift, and go to state 186
    COMMA  shift, and go to state 185


State 131

  137 factor: ABS LP • args_list RP

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 78
    CHR         shift, and go to state 79
    ODD         shift, and go to state 80
    ORD         shift, and go to state 81
    PRED        shift, and go to state 82
    SUCC        shift, and go to state 83
    MINUS       shift, and go to state 84
    NOT         shift, and go to state 85
    LP          shift, and go to state 86

    const_value  go to state 87
    identifier   go to state 88
    args_list    go to state 187
    expression   go to state 129
    expr         go to state 90
    term         go to state 91
    factor       go to state 92


State 132

  138 factor: CHR LP • args_list RP

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 78
    CHR         shift, and go to state 79
    ODD         shift, and go to state 80
    ORD         shift, and go to state 81
    PRED        shift, and go to state 82
    SUCC        shift, and go to state 83
    MINUS       shift, and go to state 84
    NOT         shift, and go to state 85
    LP          shift, and go to state 86

    const_value  go to state 87
    identifier   go to state 88
    args_list    go to state 188
    expression   go to state 129
    expr         go to state 90
    term         go to state 91
    factor       go to state 92


State 133

  139 factor: ODD LP • args_list RP

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 78
    CHR         shift, and go to state 79
    ODD         shift, and go to state 80
    ORD         shift, and go to state 81
    PRED        shift, and go to state 82
    SUCC        shift, and go to state 83
    MINUS       shift, and go to state 84
    NOT         shift, and go to state 85
    LP          shift, and go to state 86

    const_value  go to state 87
    identifier   go to state 88
    args_list    go to state 189
    expression   go to state 129
    expr         go to state 90
    term         go to state 91
    factor       go to state 92


State 134

  140 factor: ORD LP • args_list RP

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 78
    CHR         shift, and go to state 79
    ODD         shift, and go to state 80
    ORD         shift, and go to state 81
    PRED        shift, and go to state 82
    SUCC        shift, and go to state 83
    MINUS       shift, and go to state 84
    NOT         shift, and go to state 85
    LP          shift, and go to state 86

    const_value  go to state 87
    identifier   go to state 88
    args_list    go to state 190
    expression   go to state 129
    expr         go to state 90
    term         go to state 91
    factor       go to state 92


State 135

  141 factor: PRED LP • args_list RP

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 78
    CHR         shift, and go to state 79
    ODD         shift, and go to state 80
    ORD         shift, and go to state 81
    PRED        shift, and go to state 82
    SUCC        shift, and go to state 83
    MINUS       shift, and go to state 84
    NOT         shift, and go to state 85
    LP          shift, and go to state 86

    const_value  go to state 87
    identifier   go to state 88
    args_list    go to state 191
    expression   go to state 129
    expr         go to state 90
    term         go to state 91
    factor       go to state 92


State 136

  142 factor: SUCC LP • args_list RP

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 78
    CHR         shift, and go to state 79
    ODD         shift, and go to state 80
    ORD         shift, and go to state 81
    PRED        shift, and go to state 82
    SUCC        shift, and go to state 83
    MINUS       shift, and go to state 84
    NOT         shift, and go to state 85
    LP          shift, and go to state 86

    const_value  go to state 87
    identifier   go to state 88
    args_list    go to state 192
    expression   go to state 129
    expr         go to state 90
    term         go to state 91
    factor       go to state 92


State 137

  134 factor: MINUS factor •

    $default  reduce using rule 134 (factor)


State 138

  133 factor: NOT factor •

    $default  reduce using rule 133 (factor)


State 139

  113 expression: expression • GE expr
  114           | expression • GT expr
  115           | expression • LE expr
  116           | expression • LT expr
  117           | expression • EQUAL expr
  118           | expression • UNEQUAL expr
  132 factor: LP expression • RP

    EQUAL    shift, and go to state 144
    UNEQUAL  shift, and go to state 145
    GE       shift, and go to state 146
    GT       shift, and go to state 147
    LE       shift, and go to state 148
    LT       shift, and go to state 149
    RP       shift, and go to state 193


State 140

  135 factor: identifier LB • expression RB

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 78
    CHR         shift, and go to state 79
    ODD         shift, and go to state 80
    ORD         shift, and go to state 81
    PRED        shift, and go to state 82
    SUCC        shift, and go to state 83
    MINUS       shift, and go to state 84
    NOT         shift, and go to state 85
    LP          shift, and go to state 86

    const_value  go to state 87
    identifier   go to state 88
    expression   go to state 194
    expr         go to state 90
    term         go to state 91
    factor       go to state 92


State 141

  130 factor: identifier LP • args_list RP

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 78
    CHR         shift, and go to state 79
    ODD         shift, and go to state 80
    ORD         shift, and go to state 81
    PRED        shift, and go to state 82
    SUCC        shift, and go to state 83
    MINUS       shift, and go to state 84
    NOT         shift, and go to state 85
    LP          shift, and go to state 86

    const_value  go to state 87
    identifier   go to state 88
    args_list    go to state 195
    expression   go to state 129
    expr         go to state 90
    term         go to state 91
    factor       go to state 92


State 142

  136 factor: identifier DOT • identifier

    IDENT_NAME  shift, and go to state 10

    identifier  go to state 196


State 143

   91 if_stmt: IF expression THEN • stmt else_clause

    BBEGIN      shift, and go to state 16
    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 38
    READ        shift, and go to state 39
    WRITE       shift, and go to state 40
    WRITELN     shift, and go to state 41
    IF          shift, and go to state 42
    REPEAT      shift, and go to state 43
    WHILE       shift, and go to state 44
    CASE        shift, and go to state 45
    FOR         shift, and go to state 46
    GOTO        shift, and go to state 47

    BBEGIN      [reduce using rule 96 (repeat_stmt)]
    IDENT_NAME  [reduce using rule 96 (repeat_stmt)]
    INTEGER     [reduce using rule 96 (repeat_stmt)]
    READ        [reduce using rule 96 (repeat_stmt)]
    WRITE       [reduce using rule 96 (repeat_stmt)]
    WRITELN     [reduce using rule 96 (repeat_stmt)]
    IF          [reduce using rule 96 (repeat_stmt)]
    REPEAT      [reduce using rule 96 (repeat_stmt)]
    WHILE       [reduce using rule 96 (repeat_stmt)]
    CASE        [reduce using rule 96 (repeat_stmt)]
    FOR         [reduce using rule 96 (repeat_stmt)]
    GOTO        [reduce using rule 96 (repeat_stmt)]
    $default    reduce using rule 96 (repeat_stmt)

    identifier     go to state 48
    compound_stmt  go to state 49
    stmt           go to state 197
    no_label_stmt  go to state 51
    assign_stmt    go to state 52
    goto_stmt      go to state 53
    if_stmt        go to state 54
    repeat_stmt    go to state 55
    while_stmt     go to state 56
    case_stmt      go to state 57
    for_stmt       go to state 58
    proc_stmt      go to state 59


State 144

  117 expression: expression EQUAL • expr

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 78
    CHR         shift, and go to state 79
    ODD         shift, and go to state 80
    ORD         shift, and go to state 81
    PRED        shift, and go to state 82
    SUCC        shift, and go to state 83
    MINUS       shift, and go to state 84
    NOT         shift, and go to state 85
    LP          shift, and go to state 86

    const_value  go to state 87
    identifier   go to state 88
    expr         go to state 198
    term         go to state 91
    factor       go to state 92


State 145

  118 expression: expression UNEQUAL • expr

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 78
    CHR         shift, and go to state 79
    ODD         shift, and go to state 80
    ORD         shift, and go to state 81
    PRED        shift, and go to state 82
    SUCC        shift, and go to state 83
    MINUS       shift, and go to state 84
    NOT         shift, and go to state 85
    LP          shift, and go to state 86

    const_value  go to state 87
    identifier   go to state 88
    expr         go to state 199
    term         go to state 91
    factor       go to state 92


State 146

  113 expression: expression GE • expr

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 78
    CHR         shift, and go to state 79
    ODD         shift, and go to state 80
    ORD         shift, and go to state 81
    PRED        shift, and go to state 82
    SUCC        shift, and go to state 83
    MINUS       shift, and go to state 84
    NOT         shift, and go to state 85
    LP          shift, and go to state 86

    const_value  go to state 87
    identifier   go to state 88
    expr         go to state 200
    term         go to state 91
    factor       go to state 92


State 147

  114 expression: expression GT • expr

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 78
    CHR         shift, and go to state 79
    ODD         shift, and go to state 80
    ORD         shift, and go to state 81
    PRED        shift, and go to state 82
    SUCC        shift, and go to state 83
    MINUS       shift, and go to state 84
    NOT         shift, and go to state 85
    LP          shift, and go to state 86

    const_value  go to state 87
    identifier   go to state 88
    expr         go to state 201
    term         go to state 91
    factor       go to state 92


State 148

  115 expression: expression LE • expr

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 78
    CHR         shift, and go to state 79
    ODD         shift, and go to state 80
    ORD         shift, and go to state 81
    PRED        shift, and go to state 82
    SUCC        shift, and go to state 83
    MINUS       shift, and go to state 84
    NOT         shift, and go to state 85
    LP          shift, and go to state 86

    const_value  go to state 87
    identifier   go to state 88
    expr         go to state 202
    term         go to state 91
    factor       go to state 92


State 149

  116 expression: expression LT • expr

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 78
    CHR         shift, and go to state 79
    ODD         shift, and go to state 80
    ORD         shift, and go to state 81
    PRED        shift, and go to state 82
    SUCC        shift, and go to state 83
    MINUS       shift, and go to state 84
    NOT         shift, and go to state 85
    LP          shift, and go to state 86

    const_value  go to state 87
    identifier   go to state 88
    expr         go to state 203
    term         go to state 91
    factor       go to state 92


State 150

   92 if_stmt: IF expression stmt • else_clause

    ELSE  shift, and go to state 204

    ELSE      [reduce using rule 93 (else_clause)]
    $default  reduce using rule 93 (else_clause)

    else_clause  go to state 205


State 151

  120 expr: expr PLUS • term

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 78
    CHR         shift, and go to state 79
    ODD         shift, and go to state 80
    ORD         shift, and go to state 81
    PRED        shift, and go to state 82
    SUCC        shift, and go to state 83
    MINUS       shift, and go to state 84
    NOT         shift, and go to state 85
    LP          shift, and go to state 86

    const_value  go to state 87
    identifier   go to state 88
    term         go to state 206
    factor       go to state 92


State 152

  121 expr: expr MINUS • term

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 78
    CHR         shift, and go to state 79
    ODD         shift, and go to state 80
    ORD         shift, and go to state 81
    PRED        shift, and go to state 82
    SUCC        shift, and go to state 83
    MINUS       shift, and go to state 84
    NOT         shift, and go to state 85
    LP          shift, and go to state 86

    const_value  go to state 87
    identifier   go to state 88
    term         go to state 207
    factor       go to state 92


State 153

  122 expr: expr OR • term

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 78
    CHR         shift, and go to state 79
    ODD         shift, and go to state 80
    ORD         shift, and go to state 81
    PRED        shift, and go to state 82
    SUCC        shift, and go to state 83
    MINUS       shift, and go to state 84
    NOT         shift, and go to state 85
    LP          shift, and go to state 86

    const_value  go to state 87
    identifier   go to state 88
    term         go to state 208
    factor       go to state 92


State 154

  124 term: term MUL • factor

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 78
    CHR         shift, and go to state 79
    ODD         shift, and go to state 80
    ORD         shift, and go to state 81
    PRED        shift, and go to state 82
    SUCC        shift, and go to state 83
    MINUS       shift, and go to state 84
    NOT         shift, and go to state 85
    LP          shift, and go to state 86

    const_value  go to state 87
    identifier   go to state 88
    factor       go to state 209


State 155

  125 term: term DIV • factor

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 78
    CHR         shift, and go to state 79
    ODD         shift, and go to state 80
    ORD         shift, and go to state 81
    PRED        shift, and go to state 82
    SUCC        shift, and go to state 83
    MINUS       shift, and go to state 84
    NOT         shift, and go to state 85
    LP          shift, and go to state 86

    const_value  go to state 87
    identifier   go to state 88
    factor       go to state 210


State 156

  127 term: term AND • factor

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 78
    CHR         shift, and go to state 79
    ODD         shift, and go to state 80
    ORD         shift, and go to state 81
    PRED        shift, and go to state 82
    SUCC        shift, and go to state 83
    MINUS       shift, and go to state 84
    NOT         shift, and go to state 85
    LP          shift, and go to state 86

    const_value  go to state 87
    identifier   go to state 88
    factor       go to state 211


State 157

  126 term: term MOD • factor

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 78
    CHR         shift, and go to state 79
    ODD         shift, and go to state 80
    ORD         shift, and go to state 81
    PRED        shift, and go to state 82
    SUCC        shift, and go to state 83
    MINUS       shift, and go to state 84
    NOT         shift, and go to state 85
    LP          shift, and go to state 86

    const_value  go to state 87
    identifier   go to state 88
    factor       go to state 212


State 158

   95 repeat_stmt: REPEAT stmt_list UNTIL • expression

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 78
    CHR         shift, and go to state 79
    ODD         shift, and go to state 80
    ORD         shift, and go to state 81
    PRED        shift, and go to state 82
    SUCC        shift, and go to state 83
    MINUS       shift, and go to state 84
    NOT         shift, and go to state 85
    LP          shift, and go to state 86

    const_value  go to state 87
    identifier   go to state 88
    expression   go to state 213
    expr         go to state 90
    term         go to state 91
    factor       go to state 92


State 159

   97 while_stmt: WHILE expression DO • stmt

    BBEGIN      shift, and go to state 16
    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 38
    READ        shift, and go to state 39
    WRITE       shift, and go to state 40
    WRITELN     shift, and go to state 41
    IF          shift, and go to state 42
    REPEAT      shift, and go to state 43
    WHILE       shift, and go to state 44
    CASE        shift, and go to state 45
    FOR         shift, and go to state 46
    GOTO        shift, and go to state 47

    BBEGIN      [reduce using rule 96 (repeat_stmt)]
    IDENT_NAME  [reduce using rule 96 (repeat_stmt)]
    INTEGER     [reduce using rule 96 (repeat_stmt)]
    READ        [reduce using rule 96 (repeat_stmt)]
    WRITE       [reduce using rule 96 (repeat_stmt)]
    WRITELN     [reduce using rule 96 (repeat_stmt)]
    IF          [reduce using rule 96 (repeat_stmt)]
    REPEAT      [reduce using rule 96 (repeat_stmt)]
    WHILE       [reduce using rule 96 (repeat_stmt)]
    CASE        [reduce using rule 96 (repeat_stmt)]
    FOR         [reduce using rule 96 (repeat_stmt)]
    GOTO        [reduce using rule 96 (repeat_stmt)]
    $default    reduce using rule 96 (repeat_stmt)

    identifier     go to state 48
    compound_stmt  go to state 49
    stmt           go to state 214
    no_label_stmt  go to state 51
    assign_stmt    go to state 52
    goto_stmt      go to state 53
    if_stmt        go to state 54
    repeat_stmt    go to state 55
    while_stmt     go to state 56
    case_stmt      go to state 57
    for_stmt       go to state 58
    proc_stmt      go to state 59


State 160

   98 case_stmt: CASE expression OF • case_expr_list END

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35

    const_value     go to state 215
    identifier      go to state 216
    case_expr_list  go to state 217
    case_expr       go to state 218


State 161

  103 for_stmt: FOR identifier ASSIGN • expression TO expression DO stmt
  104         | FOR identifier ASSIGN • expression DOWNTO expression DO stmt

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 78
    CHR         shift, and go to state 79
    ODD         shift, and go to state 80
    ORD         shift, and go to state 81
    PRED        shift, and go to state 82
    SUCC        shift, and go to state 83
    MINUS       shift, and go to state 84
    NOT         shift, and go to state 85
    LP          shift, and go to state 86

    const_value  go to state 87
    identifier   go to state 88
    expression   go to state 219
    expr         go to state 90
    term         go to state 91
    factor       go to state 92


State 162

   87 assign_stmt: identifier ASSIGN expression •
  113 expression: expression • GE expr
  114           | expression • GT expr
  115           | expression • LE expr
  116           | expression • LT expr
  117           | expression • EQUAL expr
  118           | expression • UNEQUAL expr

    EQUAL    shift, and go to state 144
    UNEQUAL  shift, and go to state 145
    GE       shift, and go to state 146
    GT       shift, and go to state 147
    LE       shift, and go to state 148
    LT       shift, and go to state 149

    $default  reduce using rule 87 (assign_stmt)


State 163

   88 assign_stmt: identifier LB expression • RB ASSIGN expression
  113 expression: expression • GE expr
  114           | expression • GT expr
  115           | expression • LE expr
  116           | expression • LT expr
  117           | expression • EQUAL expr
  118           | expression • UNEQUAL expr

    EQUAL    shift, and go to state 144
    UNEQUAL  shift, and go to state 145
    GE       shift, and go to state 146
    GT       shift, and go to state 147
    LE       shift, and go to state 148
    LT       shift, and go to state 149
    RB       shift, and go to state 220


State 164

  106 proc_stmt: identifier LP args_list • RP
  111 args_list: args_list • COMMA expression

    RP     shift, and go to state 221
    COMMA  shift, and go to state 185


State 165

   89 assign_stmt: identifier DOT identifier • ASSIGN expression

    ASSIGN  shift, and go to state 222


State 166

   61 simple_type: MINUS const_value • DOUBLEDOT const_value
   62            | MINUS const_value • DOUBLEDOT MINUS const_value

    DOUBLEDOT  shift, and go to state 223


State 167

   59 simple_type: LP name_list • RP
   67 name_list: name_list • COMMA identifier

    RP     shift, and go to state 224
    COMMA  shift, and go to state 117


State 168

   57 array_type_decl: ARRAY LB • simple_type RB OF type_decl

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    MINUS       shift, and go to state 103
    LP          shift, and go to state 104
    INT_TYPE    shift, and go to state 105
    BOOL_TYPE   shift, and go to state 106
    CHAR_TYPE   shift, and go to state 107

    const_value  go to state 110
    simple_type  go to state 225
    identifier   go to state 115


State 169

   52 record_type_decl: RECORD field_decl_list • END
   53 field_decl_list: field_decl_list • field_decl

    END         shift, and go to state 226
    IDENT_NAME  shift, and go to state 10

    field_decl  go to state 227
    name_list   go to state 171
    identifier  go to state 65


State 170

   54 field_decl_list: field_decl •

    $default  reduce using rule 54 (field_decl_list)


State 171

   55 field_decl: name_list • COLON type_decl SEMICOLON
   56           | name_list • COLON type_decl
   67 name_list: name_list • COMMA identifier

    COMMA  shift, and go to state 117
    COLON  shift, and go to state 228


State 172

   60 simple_type: const_value DOUBLEDOT • const_value

    INTEGER  shift, and go to state 30
    CHAR     shift, and go to state 31
    STRING   shift, and go to state 32
    TRUE     shift, and go to state 33
    FALSE    shift, and go to state 34
    MAXINT   shift, and go to state 35

    const_value  go to state 229


State 173

   47 type_def: identifier EQUAL type_decl SEMICOLON •

    $default  reduce using rule 47 (type_def)


State 174

   63 simple_type: identifier DOUBLEDOT • identifier

    IDENT_NAME  shift, and go to state 10

    identifier  go to state 230


State 175

   67 name_list: name_list COMMA identifier •

    $default  reduce using rule 67 (name_list)


State 176

   29 var_decl: name_list COLON type_decl • SEMICOLON
   30         | name_list COLON type_decl •

    SEMICOLON  shift, and go to state 231

    $default  reduce using rule 30 (var_decl)


State 177

   20 params: LP • params_decl RP

    VAR         shift, and go to state 232
    IDENT_NAME  shift, and go to state 10

    params_decl  go to state 233
    params_type  go to state 234
    name_list    go to state 235
    identifier   go to state 65


State 178

   16 fun_head: FUNCTION IDENT_NAME params • COLON simple_type

    COLON  shift, and go to state 236


State 179

   18 proc_head: PROCEDURE IDENT_NAME params •

    $default  reduce using rule 18 (proc_head)


State 180

   12 fun_decl: fun_head SEMICOLON routine • SEMICOLON
   13         | fun_head SEMICOLON routine •

    SEMICOLON  shift, and go to state 237

    $default  reduce using rule 13 (fun_decl)


State 181

   14 fun_decl: fun_head routine SEMICOLON •

    $default  reduce using rule 14 (fun_decl)


State 182

   17 proc_decl: proc_head SEMICOLON routine • SEMICOLON

    SEMICOLON  shift, and go to state 238


State 183

  107 proc_stmt: READ LP factor RP •

    $default  reduce using rule 107 (proc_stmt)


State 184

  108 proc_stmt: WRITE LP args_list RP •

    $default  reduce using rule 108 (proc_stmt)


State 185

  111 args_list: args_list COMMA • expression

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 78
    CHR         shift, and go to state 79
    ODD         shift, and go to state 80
    ORD         shift, and go to state 81
    PRED        shift, and go to state 82
    SUCC        shift, and go to state 83
    MINUS       shift, and go to state 84
    NOT         shift, and go to state 85
    LP          shift, and go to state 86

    const_value  go to state 87
    identifier   go to state 88
    expression   go to state 239
    expr         go to state 90
    term         go to state 91
    factor       go to state 92


State 186

  110 proc_stmt: WRITELN LP args_list RP •

    $default  reduce using rule 110 (proc_stmt)


State 187

  111 args_list: args_list • COMMA expression
  137 factor: ABS LP args_list • RP

    RP     shift, and go to state 240
    COMMA  shift, and go to state 185


State 188

  111 args_list: args_list • COMMA expression
  138 factor: CHR LP args_list • RP

    RP     shift, and go to state 241
    COMMA  shift, and go to state 185


State 189

  111 args_list: args_list • COMMA expression
  139 factor: ODD LP args_list • RP

    RP     shift, and go to state 242
    COMMA  shift, and go to state 185


State 190

  111 args_list: args_list • COMMA expression
  140 factor: ORD LP args_list • RP

    RP     shift, and go to state 243
    COMMA  shift, and go to state 185


State 191

  111 args_list: args_list • COMMA expression
  141 factor: PRED LP args_list • RP

    RP     shift, and go to state 244
    COMMA  shift, and go to state 185


State 192

  111 args_list: args_list • COMMA expression
  142 factor: SUCC LP args_list • RP

    RP     shift, and go to state 245
    COMMA  shift, and go to state 185


State 193

  132 factor: LP expression RP •

    $default  reduce using rule 132 (factor)


State 194

  113 expression: expression • GE expr
  114           | expression • GT expr
  115           | expression • LE expr
  116           | expression • LT expr
  117           | expression • EQUAL expr
  118           | expression • UNEQUAL expr
  135 factor: identifier LB expression • RB

    EQUAL    shift, and go to state 144
    UNEQUAL  shift, and go to state 145
    GE       shift, and go to state 146
    GT       shift, and go to state 147
    LE       shift, and go to state 148
    LT       shift, and go to state 149
    RB       shift, and go to state 246


State 195

  111 args_list: args_list • COMMA expression
  130 factor: identifier LP args_list • RP

    RP     shift, and go to state 247
    COMMA  shift, and go to state 185


State 196

  136 factor: identifier DOT identifier •

    $default  reduce using rule 136 (factor)


State 197

   91 if_stmt: IF expression THEN stmt • else_clause

    ELSE  shift, and go to state 204

    ELSE      [reduce using rule 93 (else_clause)]
    $default  reduce using rule 93 (else_clause)

    else_clause  go to state 248


State 198

  117 expression: expression EQUAL expr •
  120 expr: expr • PLUS term
  121     | expr • MINUS term
  122     | expr • OR term

    PLUS   shift, and go to state 151
    MINUS  shift, and go to state 152
    OR     shift, and go to state 153

    $default  reduce using rule 117 (expression)


State 199

  118 expression: expression UNEQUAL expr •
  120 expr: expr • PLUS term
  121     | expr • MINUS term
  122     | expr • OR term

    PLUS   shift, and go to state 151
    MINUS  shift, and go to state 152
    OR     shift, and go to state 153

    $default  reduce using rule 118 (expression)


State 200

  113 expression: expression GE expr •
  120 expr: expr • PLUS term
  121     | expr • MINUS term
  122     | expr • OR term

    PLUS   shift, and go to state 151
    MINUS  shift, and go to state 152
    OR     shift, and go to state 153

    $default  reduce using rule 113 (expression)


State 201

  114 expression: expression GT expr •
  120 expr: expr • PLUS term
  121     | expr • MINUS term
  122     | expr • OR term

    PLUS   shift, and go to state 151
    MINUS  shift, and go to state 152
    OR     shift, and go to state 153

    $default  reduce using rule 114 (expression)


State 202

  115 expression: expression LE expr •
  120 expr: expr • PLUS term
  121     | expr • MINUS term
  122     | expr • OR term

    PLUS   shift, and go to state 151
    MINUS  shift, and go to state 152
    OR     shift, and go to state 153

    $default  reduce using rule 115 (expression)


State 203

  116 expression: expression LT expr •
  120 expr: expr • PLUS term
  121     | expr • MINUS term
  122     | expr • OR term

    PLUS   shift, and go to state 151
    MINUS  shift, and go to state 152
    OR     shift, and go to state 153

    $default  reduce using rule 116 (expression)


State 204

   94 else_clause: ELSE • stmt

    BBEGIN      shift, and go to state 16
    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 38
    READ        shift, and go to state 39
    WRITE       shift, and go to state 40
    WRITELN     shift, and go to state 41
    IF          shift, and go to state 42
    REPEAT      shift, and go to state 43
    WHILE       shift, and go to state 44
    CASE        shift, and go to state 45
    FOR         shift, and go to state 46
    GOTO        shift, and go to state 47

    BBEGIN      [reduce using rule 96 (repeat_stmt)]
    IDENT_NAME  [reduce using rule 96 (repeat_stmt)]
    INTEGER     [reduce using rule 96 (repeat_stmt)]
    READ        [reduce using rule 96 (repeat_stmt)]
    WRITE       [reduce using rule 96 (repeat_stmt)]
    WRITELN     [reduce using rule 96 (repeat_stmt)]
    IF          [reduce using rule 96 (repeat_stmt)]
    REPEAT      [reduce using rule 96 (repeat_stmt)]
    WHILE       [reduce using rule 96 (repeat_stmt)]
    CASE        [reduce using rule 96 (repeat_stmt)]
    FOR         [reduce using rule 96 (repeat_stmt)]
    GOTO        [reduce using rule 96 (repeat_stmt)]
    $default    reduce using rule 96 (repeat_stmt)

    identifier     go to state 48
    compound_stmt  go to state 49
    stmt           go to state 249
    no_label_stmt  go to state 51
    assign_stmt    go to state 52
    goto_stmt      go to state 53
    if_stmt        go to state 54
    repeat_stmt    go to state 55
    while_stmt     go to state 56
    case_stmt      go to state 57
    for_stmt       go to state 58
    proc_stmt      go to state 59


State 205

   92 if_stmt: IF expression stmt else_clause •

    $default  reduce using rule 92 (if_stmt)


State 206

  120 expr: expr PLUS term •
  124 term: term • MUL factor
  125     | term • DIV factor
  126     | term • MOD factor
  127     | term • AND factor

    MUL  shift, and go to state 154
    DIV  shift, and go to state 155
    AND  shift, and go to state 156
    MOD  shift, and go to state 157

    $default  reduce using rule 120 (expr)


State 207

  121 expr: expr MINUS term •
  124 term: term • MUL factor
  125     | term • DIV factor
  126     | term • MOD factor
  127     | term • AND factor

    MUL  shift, and go to state 154
    DIV  shift, and go to state 155
    AND  shift, and go to state 156
    MOD  shift, and go to state 157

    $default  reduce using rule 121 (expr)


State 208

  122 expr: expr OR term •
  124 term: term • MUL factor
  125     | term • DIV factor
  126     | term • MOD factor
  127     | term • AND factor

    MUL  shift, and go to state 154
    DIV  shift, and go to state 155
    AND  shift, and go to state 156
    MOD  shift, and go to state 157

    $default  reduce using rule 122 (expr)


State 209

  124 term: term MUL factor •

    $default  reduce using rule 124 (term)


State 210

  125 term: term DIV factor •

    $default  reduce using rule 125 (term)


State 211

  127 term: term AND factor •

    $default  reduce using rule 127 (term)


State 212

  126 term: term MOD factor •

    $default  reduce using rule 126 (term)


State 213

   95 repeat_stmt: REPEAT stmt_list UNTIL expression •
  113 expression: expression • GE expr
  114           | expression • GT expr
  115           | expression • LE expr
  116           | expression • LT expr
  117           | expression • EQUAL expr
  118           | expression • UNEQUAL expr

    EQUAL    shift, and go to state 144
    UNEQUAL  shift, and go to state 145
    GE       shift, and go to state 146
    GT       shift, and go to state 147
    LE       shift, and go to state 148
    LT       shift, and go to state 149

    $default  reduce using rule 95 (repeat_stmt)


State 214

   97 while_stmt: WHILE expression DO stmt •

    $default  reduce using rule 97 (while_stmt)


State 215

  101 case_expr: const_value • COLON stmt SEMICOLON

    COLON  shift, and go to state 250


State 216

  102 case_expr: identifier • COLON stmt SEMICOLON

    COLON  shift, and go to state 251


State 217

   98 case_stmt: CASE expression OF case_expr_list • END
   99 case_expr_list: case_expr_list • case_expr

    END         shift, and go to state 252
    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35

    const_value  go to state 215
    identifier   go to state 216
    case_expr    go to state 253


State 218

  100 case_expr_list: case_expr •

    $default  reduce using rule 100 (case_expr_list)


State 219

  103 for_stmt: FOR identifier ASSIGN expression • TO expression DO stmt
  104         | FOR identifier ASSIGN expression • DOWNTO expression DO stmt
  113 expression: expression • GE expr
  114           | expression • GT expr
  115           | expression • LE expr
  116           | expression • LT expr
  117           | expression • EQUAL expr
  118           | expression • UNEQUAL expr

    TO       shift, and go to state 254
    DOWNTO   shift, and go to state 255
    EQUAL    shift, and go to state 144
    UNEQUAL  shift, and go to state 145
    GE       shift, and go to state 146
    GT       shift, and go to state 147
    LE       shift, and go to state 148
    LT       shift, and go to state 149


State 220

   88 assign_stmt: identifier LB expression RB • ASSIGN expression

    ASSIGN  shift, and go to state 256


State 221

  106 proc_stmt: identifier LP args_list RP •

    $default  reduce using rule 106 (proc_stmt)


State 222

   89 assign_stmt: identifier DOT identifier ASSIGN • expression

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 78
    CHR         shift, and go to state 79
    ODD         shift, and go to state 80
    ORD         shift, and go to state 81
    PRED        shift, and go to state 82
    SUCC        shift, and go to state 83
    MINUS       shift, and go to state 84
    NOT         shift, and go to state 85
    LP          shift, and go to state 86

    const_value  go to state 87
    identifier   go to state 88
    expression   go to state 257
    expr         go to state 90
    term         go to state 91
    factor       go to state 92


State 223

   61 simple_type: MINUS const_value DOUBLEDOT • const_value
   62            | MINUS const_value DOUBLEDOT • MINUS const_value

    INTEGER  shift, and go to state 30
    CHAR     shift, and go to state 31
    STRING   shift, and go to state 32
    TRUE     shift, and go to state 33
    FALSE    shift, and go to state 34
    MAXINT   shift, and go to state 35
    MINUS    shift, and go to state 258

    const_value  go to state 259


State 224

   59 simple_type: LP name_list RP •

    $default  reduce using rule 59 (simple_type)


State 225

   57 array_type_decl: ARRAY LB simple_type • RB OF type_decl

    RB  shift, and go to state 260


State 226

   52 record_type_decl: RECORD field_decl_list END •

    $default  reduce using rule 52 (record_type_decl)


State 227

   53 field_decl_list: field_decl_list field_decl •

    $default  reduce using rule 53 (field_decl_list)


State 228

   55 field_decl: name_list COLON • type_decl SEMICOLON
   56           | name_list COLON • type_decl

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    MINUS       shift, and go to state 103
    LP          shift, and go to state 104
    INT_TYPE    shift, and go to state 105
    BOOL_TYPE   shift, and go to state 106
    CHAR_TYPE   shift, and go to state 107
    ARRAY       shift, and go to state 108
    RECORD      shift, and go to state 109

    const_value       go to state 110
    type_decl         go to state 261
    record_type_decl  go to state 112
    array_type_decl   go to state 113
    simple_type       go to state 114
    identifier        go to state 115


State 229

   60 simple_type: const_value DOUBLEDOT const_value •

    $default  reduce using rule 60 (simple_type)


State 230

   63 simple_type: identifier DOUBLEDOT identifier •

    $default  reduce using rule 63 (simple_type)


State 231

   29 var_decl: name_list COLON type_decl SEMICOLON •

    $default  reduce using rule 29 (var_decl)


State 232

   23 params_type: VAR • name_list COLON simple_type

    IDENT_NAME  shift, and go to state 10

    name_list   go to state 262
    identifier  go to state 65


State 233

   20 params: LP params_decl • RP
   21 params_decl: params_decl • SEMICOLON params_type

    RP         shift, and go to state 263
    SEMICOLON  shift, and go to state 264


State 234

   22 params_decl: params_type •

    $default  reduce using rule 22 (params_decl)


State 235

   24 params_type: name_list • COLON simple_type
   67 name_list: name_list • COMMA identifier

    COMMA  shift, and go to state 117
    COLON  shift, and go to state 265


State 236

   16 fun_head: FUNCTION IDENT_NAME params COLON • simple_type

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    MINUS       shift, and go to state 103
    LP          shift, and go to state 104
    INT_TYPE    shift, and go to state 105
    BOOL_TYPE   shift, and go to state 106
    CHAR_TYPE   shift, and go to state 107

    const_value  go to state 110
    simple_type  go to state 266
    identifier   go to state 115


State 237

   12 fun_decl: fun_head SEMICOLON routine SEMICOLON •

    $default  reduce using rule 12 (fun_decl)


State 238

   17 proc_decl: proc_head SEMICOLON routine SEMICOLON •

    $default  reduce using rule 17 (proc_decl)


State 239

  111 args_list: args_list COMMA expression •
  113 expression: expression • GE expr
  114           | expression • GT expr
  115           | expression • LE expr
  116           | expression • LT expr
  117           | expression • EQUAL expr
  118           | expression • UNEQUAL expr

    EQUAL    shift, and go to state 144
    UNEQUAL  shift, and go to state 145
    GE       shift, and go to state 146
    GT       shift, and go to state 147
    LE       shift, and go to state 148
    LT       shift, and go to state 149

    $default  reduce using rule 111 (args_list)


State 240

  137 factor: ABS LP args_list RP •

    $default  reduce using rule 137 (factor)


State 241

  138 factor: CHR LP args_list RP •

    $default  reduce using rule 138 (factor)


State 242

  139 factor: ODD LP args_list RP •

    $default  reduce using rule 139 (factor)


State 243

  140 factor: ORD LP args_list RP •

    $default  reduce using rule 140 (factor)


State 244

  141 factor: PRED LP args_list RP •

    $default  reduce using rule 141 (factor)


State 245

  142 factor: SUCC LP args_list RP •

    $default  reduce using rule 142 (factor)


State 246

  135 factor: identifier LB expression RB •

    $default  reduce using rule 135 (factor)


State 247

  130 factor: identifier LP args_list RP •

    $default  reduce using rule 130 (factor)


State 248

   91 if_stmt: IF expression THEN stmt else_clause •

    $default  reduce using rule 91 (if_stmt)


State 249

   94 else_clause: ELSE stmt •

    $default  reduce using rule 94 (else_clause)


State 250

  101 case_expr: const_value COLON • stmt SEMICOLON

    BBEGIN      shift, and go to state 16
    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 38
    READ        shift, and go to state 39
    WRITE       shift, and go to state 40
    WRITELN     shift, and go to state 41
    IF          shift, and go to state 42
    REPEAT      shift, and go to state 43
    WHILE       shift, and go to state 44
    CASE        shift, and go to state 45
    FOR         shift, and go to state 46
    GOTO        shift, and go to state 47

    $default  reduce using rule 96 (repeat_stmt)

    identifier     go to state 48
    compound_stmt  go to state 49
    stmt           go to state 267
    no_label_stmt  go to state 51
    assign_stmt    go to state 52
    goto_stmt      go to state 53
    if_stmt        go to state 54
    repeat_stmt    go to state 55
    while_stmt     go to state 56
    case_stmt      go to state 57
    for_stmt       go to state 58
    proc_stmt      go to state 59


State 251

  102 case_expr: identifier COLON • stmt SEMICOLON

    BBEGIN      shift, and go to state 16
    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 38
    READ        shift, and go to state 39
    WRITE       shift, and go to state 40
    WRITELN     shift, and go to state 41
    IF          shift, and go to state 42
    REPEAT      shift, and go to state 43
    WHILE       shift, and go to state 44
    CASE        shift, and go to state 45
    FOR         shift, and go to state 46
    GOTO        shift, and go to state 47

    $default  reduce using rule 96 (repeat_stmt)

    identifier     go to state 48
    compound_stmt  go to state 49
    stmt           go to state 268
    no_label_stmt  go to state 51
    assign_stmt    go to state 52
    goto_stmt      go to state 53
    if_stmt        go to state 54
    repeat_stmt    go to state 55
    while_stmt     go to state 56
    case_stmt      go to state 57
    for_stmt       go to state 58
    proc_stmt      go to state 59


State 252

   98 case_stmt: CASE expression OF case_expr_list END •

    $default  reduce using rule 98 (case_stmt)


State 253

   99 case_expr_list: case_expr_list case_expr •

    $default  reduce using rule 99 (case_expr_list)


State 254

  103 for_stmt: FOR identifier ASSIGN expression TO • expression DO stmt

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 78
    CHR         shift, and go to state 79
    ODD         shift, and go to state 80
    ORD         shift, and go to state 81
    PRED        shift, and go to state 82
    SUCC        shift, and go to state 83
    MINUS       shift, and go to state 84
    NOT         shift, and go to state 85
    LP          shift, and go to state 86

    const_value  go to state 87
    identifier   go to state 88
    expression   go to state 269
    expr         go to state 90
    term         go to state 91
    factor       go to state 92


State 255

  104 for_stmt: FOR identifier ASSIGN expression DOWNTO • expression DO stmt

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 78
    CHR         shift, and go to state 79
    ODD         shift, and go to state 80
    ORD         shift, and go to state 81
    PRED        shift, and go to state 82
    SUCC        shift, and go to state 83
    MINUS       shift, and go to state 84
    NOT         shift, and go to state 85
    LP          shift, and go to state 86

    const_value  go to state 87
    identifier   go to state 88
    expression   go to state 270
    expr         go to state 90
    term         go to state 91
    factor       go to state 92


State 256

   88 assign_stmt: identifier LB expression RB ASSIGN • expression

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 78
    CHR         shift, and go to state 79
    ODD         shift, and go to state 80
    ORD         shift, and go to state 81
    PRED        shift, and go to state 82
    SUCC        shift, and go to state 83
    MINUS       shift, and go to state 84
    NOT         shift, and go to state 85
    LP          shift, and go to state 86

    const_value  go to state 87
    identifier   go to state 88
    expression   go to state 271
    expr         go to state 90
    term         go to state 91
    factor       go to state 92


State 257

   89 assign_stmt: identifier DOT identifier ASSIGN expression •
  113 expression: expression • GE expr
  114           | expression • GT expr
  115           | expression • LE expr
  116           | expression • LT expr
  117           | expression • EQUAL expr
  118           | expression • UNEQUAL expr

    EQUAL    shift, and go to state 144
    UNEQUAL  shift, and go to state 145
    GE       shift, and go to state 146
    GT       shift, and go to state 147
    LE       shift, and go to state 148
    LT       shift, and go to state 149

    $default  reduce using rule 89 (assign_stmt)


State 258

   62 simple_type: MINUS const_value DOUBLEDOT MINUS • const_value

    INTEGER  shift, and go to state 30
    CHAR     shift, and go to state 31
    STRING   shift, and go to state 32
    TRUE     shift, and go to state 33
    FALSE    shift, and go to state 34
    MAXINT   shift, and go to state 35

    const_value  go to state 272


State 259

   61 simple_type: MINUS const_value DOUBLEDOT const_value •

    $default  reduce using rule 61 (simple_type)


State 260

   57 array_type_decl: ARRAY LB simple_type RB • OF type_decl

    OF  shift, and go to state 273


State 261

   55 field_decl: name_list COLON type_decl • SEMICOLON
   56           | name_list COLON type_decl •

    SEMICOLON  shift, and go to state 274

    $default  reduce using rule 56 (field_decl)


State 262

   23 params_type: VAR name_list • COLON simple_type
   67 name_list: name_list • COMMA identifier

    COMMA  shift, and go to state 117
    COLON  shift, and go to state 275


State 263

   20 params: LP params_decl RP •

    $default  reduce using rule 20 (params)


State 264

   21 params_decl: params_decl SEMICOLON • params_type

    VAR         shift, and go to state 232
    IDENT_NAME  shift, and go to state 10

    params_type  go to state 276
    name_list    go to state 235
    identifier   go to state 65


State 265

   24 params_type: name_list COLON • simple_type

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    MINUS       shift, and go to state 103
    LP          shift, and go to state 104
    INT_TYPE    shift, and go to state 105
    BOOL_TYPE   shift, and go to state 106
    CHAR_TYPE   shift, and go to state 107

    const_value  go to state 110
    simple_type  go to state 277
    identifier   go to state 115


State 266

   16 fun_head: FUNCTION IDENT_NAME params COLON simple_type •

    $default  reduce using rule 16 (fun_head)


State 267

  101 case_expr: const_value COLON stmt • SEMICOLON

    SEMICOLON  shift, and go to state 278


State 268

  102 case_expr: identifier COLON stmt • SEMICOLON

    SEMICOLON  shift, and go to state 279


State 269

  103 for_stmt: FOR identifier ASSIGN expression TO expression • DO stmt
  113 expression: expression • GE expr
  114           | expression • GT expr
  115           | expression • LE expr
  116           | expression • LT expr
  117           | expression • EQUAL expr
  118           | expression • UNEQUAL expr

    DO       shift, and go to state 280
    EQUAL    shift, and go to state 144
    UNEQUAL  shift, and go to state 145
    GE       shift, and go to state 146
    GT       shift, and go to state 147
    LE       shift, and go to state 148
    LT       shift, and go to state 149


State 270

  104 for_stmt: FOR identifier ASSIGN expression DOWNTO expression • DO stmt
  113 expression: expression • GE expr
  114           | expression • GT expr
  115           | expression • LE expr
  116           | expression • LT expr
  117           | expression • EQUAL expr
  118           | expression • UNEQUAL expr

    DO       shift, and go to state 281
    EQUAL    shift, and go to state 144
    UNEQUAL  shift, and go to state 145
    GE       shift, and go to state 146
    GT       shift, and go to state 147
    LE       shift, and go to state 148
    LT       shift, and go to state 149


State 271

   88 assign_stmt: identifier LB expression RB ASSIGN expression •
  113 expression: expression • GE expr
  114           | expression • GT expr
  115           | expression • LE expr
  116           | expression • LT expr
  117           | expression • EQUAL expr
  118           | expression • UNEQUAL expr

    EQUAL    shift, and go to state 144
    UNEQUAL  shift, and go to state 145
    GE       shift, and go to state 146
    GT       shift, and go to state 147
    LE       shift, and go to state 148
    LT       shift, and go to state 149

    $default  reduce using rule 88 (assign_stmt)


State 272

   62 simple_type: MINUS const_value DOUBLEDOT MINUS const_value •

    $default  reduce using rule 62 (simple_type)


State 273

   57 array_type_decl: ARRAY LB simple_type RB OF • type_decl

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    MINUS       shift, and go to state 103
    LP          shift, and go to state 104
    INT_TYPE    shift, and go to state 105
    BOOL_TYPE   shift, and go to state 106
    CHAR_TYPE   shift, and go to state 107
    ARRAY       shift, and go to state 108
    RECORD      shift, and go to state 109

    const_value       go to state 110
    type_decl         go to state 282
    record_type_decl  go to state 112
    array_type_decl   go to state 113
    simple_type       go to state 114
    identifier        go to state 115


State 274

   55 field_decl: name_list COLON type_decl SEMICOLON •

    $default  reduce using rule 55 (field_decl)


State 275

   23 params_type: VAR name_list COLON • simple_type

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    MINUS       shift, and go to state 103
    LP          shift, and go to state 104
    INT_TYPE    shift, and go to state 105
    BOOL_TYPE   shift, and go to state 106
    CHAR_TYPE   shift, and go to state 107

    const_value  go to state 110
    simple_type  go to state 283
    identifier   go to state 115


State 276

   21 params_decl: params_decl SEMICOLON params_type •

    $default  reduce using rule 21 (params_decl)


State 277

   24 params_type: name_list COLON simple_type •

    $default  reduce using rule 24 (params_type)


State 278

  101 case_expr: const_value COLON stmt SEMICOLON •

    $default  reduce using rule 101 (case_expr)


State 279

  102 case_expr: identifier COLON stmt SEMICOLON •

    $default  reduce using rule 102 (case_expr)


State 280

  103 for_stmt: FOR identifier ASSIGN expression TO expression DO • stmt

    BBEGIN      shift, and go to state 16
    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 38
    READ        shift, and go to state 39
    WRITE       shift, and go to state 40
    WRITELN     shift, and go to state 41
    IF          shift, and go to state 42
    REPEAT      shift, and go to state 43
    WHILE       shift, and go to state 44
    CASE        shift, and go to state 45
    FOR         shift, and go to state 46
    GOTO        shift, and go to state 47

    BBEGIN      [reduce using rule 96 (repeat_stmt)]
    IDENT_NAME  [reduce using rule 96 (repeat_stmt)]
    INTEGER     [reduce using rule 96 (repeat_stmt)]
    READ        [reduce using rule 96 (repeat_stmt)]
    WRITE       [reduce using rule 96 (repeat_stmt)]
    WRITELN     [reduce using rule 96 (repeat_stmt)]
    IF          [reduce using rule 96 (repeat_stmt)]
    REPEAT      [reduce using rule 96 (repeat_stmt)]
    WHILE       [reduce using rule 96 (repeat_stmt)]
    CASE        [reduce using rule 96 (repeat_stmt)]
    FOR         [reduce using rule 96 (repeat_stmt)]
    GOTO        [reduce using rule 96 (repeat_stmt)]
    $default    reduce using rule 96 (repeat_stmt)

    identifier     go to state 48
    compound_stmt  go to state 49
    stmt           go to state 284
    no_label_stmt  go to state 51
    assign_stmt    go to state 52
    goto_stmt      go to state 53
    if_stmt        go to state 54
    repeat_stmt    go to state 55
    while_stmt     go to state 56
    case_stmt      go to state 57
    for_stmt       go to state 58
    proc_stmt      go to state 59


State 281

  104 for_stmt: FOR identifier ASSIGN expression DOWNTO expression DO • stmt

    BBEGIN      shift, and go to state 16
    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 38
    READ        shift, and go to state 39
    WRITE       shift, and go to state 40
    WRITELN     shift, and go to state 41
    IF          shift, and go to state 42
    REPEAT      shift, and go to state 43
    WHILE       shift, and go to state 44
    CASE        shift, and go to state 45
    FOR         shift, and go to state 46
    GOTO        shift, and go to state 47

    BBEGIN      [reduce using rule 96 (repeat_stmt)]
    IDENT_NAME  [reduce using rule 96 (repeat_stmt)]
    INTEGER     [reduce using rule 96 (repeat_stmt)]
    READ        [reduce using rule 96 (repeat_stmt)]
    WRITE       [reduce using rule 96 (repeat_stmt)]
    WRITELN     [reduce using rule 96 (repeat_stmt)]
    IF          [reduce using rule 96 (repeat_stmt)]
    REPEAT      [reduce using rule 96 (repeat_stmt)]
    WHILE       [reduce using rule 96 (repeat_stmt)]
    CASE        [reduce using rule 96 (repeat_stmt)]
    FOR         [reduce using rule 96 (repeat_stmt)]
    GOTO        [reduce using rule 96 (repeat_stmt)]
    $default    reduce using rule 96 (repeat_stmt)

    identifier     go to state 48
    compound_stmt  go to state 49
    stmt           go to state 285
    no_label_stmt  go to state 51
    assign_stmt    go to state 52
    goto_stmt      go to state 53
    if_stmt        go to state 54
    repeat_stmt    go to state 55
    while_stmt     go to state 56
    case_stmt      go to state 57
    for_stmt       go to state 58
    proc_stmt      go to state 59


State 282

   57 array_type_decl: ARRAY LB simple_type RB OF type_decl •

    $default  reduce using rule 57 (array_type_decl)


State 283

   23 params_type: VAR name_list COLON simple_type •

    $default  reduce using rule 23 (params_type)


State 284

  103 for_stmt: FOR identifier ASSIGN expression TO expression DO stmt •

    $default  reduce using rule 103 (for_stmt)


State 285

  104 for_stmt: FOR identifier ASSIGN expression DOWNTO expression DO stmt •

    $default  reduce using rule 104 (for_stmt)
