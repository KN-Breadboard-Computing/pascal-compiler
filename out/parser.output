Terminals unused in grammar

    BOOLEAN
    ERROR


State 24 conflicts: 20 shift/reduce, 27 reduce/reduce
State 29 conflicts: 2 shift/reduce
State 56 conflicts: 2 shift/reduce, 1 reduce/reduce
State 58 conflicts: 1 shift/reduce
State 85 conflicts: 18 shift/reduce
State 103 conflicts: 2 shift/reduce
State 104 conflicts: 19 shift/reduce
State 108 conflicts: 1 shift/reduce
State 109 conflicts: 20 shift/reduce
State 160 conflicts: 48 reduce/reduce
State 161 conflicts: 48 reduce/reduce
State 166 conflicts: 19 shift/reduce
State 173 conflicts: 1 shift/reduce
State 182 conflicts: 19 shift/reduce
State 224 conflicts: 1 shift/reduce
State 231 conflicts: 19 shift/reduce
State 302 conflicts: 19 shift/reduce
State 303 conflicts: 19 shift/reduce


Grammar

    0 $accept: program $end

    1 program: PROGRAM IDENT_NAME SEMICOLON routine DOT
    2        | PROGRAM IDENT_NAME SEMICOLON routine
    3        | PROGRAM IDENT_NAME routine DOT
    4        | PROGRAM IDENT_NAME routine

    5 routine: routine_head routine_body

    6 routine_head: const_part type_part var_part routine_part

    7 routine_part: ε
    8             | routine_part fun_decl
    9             | routine_part proc_decl
   10             | fun_decl
   11             | proc_decl

   12 fun_decl: fun_head SEMICOLON routine SEMICOLON
   13         | fun_head SEMICOLON routine
   14         | fun_head routine SEMICOLON
   15         | fun_head routine

   16 fun_head: FUNCTION IDENT_NAME params COLON simple_type

   17 proc_decl: proc_head SEMICOLON routine SEMICOLON
   18          | proc_head routine SEMICOLON
   19          | proc_head SEMICOLON routine
   20          | proc_head routine

   21 proc_head: PROCEDURE IDENT_NAME params

   22 params: ε
   23       | LP params_decl RP

   24 params_decl: params_decl SEMICOLON params_type
   25            | params_type

   26 params_type: VAR name_list COLON simple_type
   27            | name_list COLON simple_type

   28 var_part: ε
   29         | VAR var_decl_list

   30 var_decl_list: var_decl_list var_decl
   31              | var_decl

   32 var_decl: name_list COLON type_decl SEMICOLON
   33         | name_list COLON type_decl

   34 const_part: ε
   35           | CONST const_expr_list

   36 const_expr_list: const_expr_list const_expr
   37                | const_expr

   38 const_expr: identifier EQUAL const_value SEMICOLON
   39           | identifier EQUAL const_value

   40 const_value: INTEGER
   41            | MINUS INTEGER
   42            | CHAR
   43            | STRING
   44            | TRUE
   45            | FALSE
   46            | MAXINT
   47            | MINUS MAXINT

   48 type_part: ε
   49          | TYPE type_decl_list

   50 type_decl_list: type_decl_list type_def
   51               | type_def

   52 type_def: identifier EQUAL type_decl SEMICOLON
   53         | identifier EQUAL type_decl

   54 type_decl: simple_type
   55          | array_type_decl
   56          | record_type_decl

   57 record_type_decl: RECORD field_decl_list END

   58 field_decl_list: field_decl_list field_decl
   59                | field_decl

   60 field_decl: name_list COLON type_decl SEMICOLON
   61           | name_list COLON type_decl

   62 array_type_decl: ARRAY LB simple_type RB OF type_decl

   63 simple_type: identifier
   64            | LP name_list RP
   65            | const_value DOUBLEDOT const_value
   66            | identifier DOUBLEDOT identifier
   67            | INT_TYPE
   68            | UNSIGNED_TYPE
   69            | BOOL_TYPE
   70            | CHAR_TYPE

   71 name_list: name_list COMMA identifier
   72          | identifier

   73 identifier: IDENT_NAME

   74 routine_body: compound_stmt

   75 compound_stmt: BBEGIN stmt_list END
   76              | BBEGIN stmt_list

   77 stmt_list: ε
   78          | stmt_list stmt SEMICOLON
   79          | stmt_list stmt

   80 stmt: INTEGER COLON no_label_stmt
   81     | no_label_stmt

   82 no_label_stmt: assign_stmt
   83              | compound_stmt
   84              | goto_stmt
   85              | if_stmt
   86              | repeat_stmt
   87              | while_stmt
   88              | case_stmt
   89              | for_stmt
   90              | proc_stmt
   91              | BREAK
   92              | CONTINUE

   93 assign_stmt: lvalue ASSIGN expression

   94 goto_stmt: GOTO INTEGER

   95 if_stmt: IF expression THEN stmt else_clause
   96        | IF expression stmt else_clause

   97 else_clause: ε
   98            | ELSE stmt

   99 repeat_stmt: REPEAT stmt_list UNTIL expression
  100            | ε

  101 while_stmt: WHILE expression DO stmt

  102 case_stmt: CASE expression OF case_expr_list END

  103 case_expr_list: case_expr_list case_expr
  104               | case_expr

  105 case_expr: const_value COLON stmt SEMICOLON
  106          | identifier COLON stmt SEMICOLON
  107          | OTHERWISE stmt SEMICOLON

  108 for_stmt: FOR identifier ASSIGN expression TO expression DO stmt
  109         | FOR identifier ASSIGN expression DOWNTO expression DO stmt

  110 proc_stmt: identifier
  111          | identifier LP args_list RP
  112          | READ LP factor RP
  113          | READLN
  114          | WRITE LP args_list RP
  115          | WRITELN
  116          | WRITELN LP args_list RP
  117          | MEMORYREAD LP args_list RP
  118          | MEMORYWRITE LP args_list RP
  119          | STACKREAD LP args_list RP
  120          | STACKWRITE LP args_list RP

  121 args_list: args_list COMMA expression
  122          | expression

  123 expression: expression GE expr
  124           | expression GT expr
  125           | expression LE expr
  126           | expression LT expr
  127           | expression EQUAL expr
  128           | expression UNEQUAL expr
  129           | expr

  130 expr: expr PLUS term
  131     | expr MINUS term
  132     | expr OR term
  133     | term

  134 term: term MUL factor
  135     | term DIV factor
  136     | term MOD factor
  137     | term AND factor
  138     | factor

  139 factor: identifier LP args_list RP
  140       | lvalue
  141       | const_value
  142       | LP expression RP
  143       | NOT factor
  144       | MINUS factor
  145       | ABS LP args_list RP
  146       | CHR LP args_list RP
  147       | ODD LP args_list RP
  148       | ORD LP args_list RP
  149       | PRED LP args_list RP
  150       | SUCC LP args_list RP

  151 lvalue: identifier
  152       | identifier LB expression RB
  153       | lvalue LB expression RB
  154       | identifier DOT identifier
  155       | lvalue DOT identifier


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    PROGRAM <token> (258) 1 2 3 4
    FUNCTION <token> (259) 16
    PROCEDURE <token> (260) 21
    CONST <token> (261) 35
    TYPE <token> (262) 49
    VAR <token> (263) 26 29
    BBEGIN <token> (264) 75 76
    END <token> (265) 57 75 102
    IDENT_NAME <token> (266) 1 2 3 4 16 21 73
    INTEGER <token> (267) 40 41 80 94
    BOOLEAN <token> (268)
    CHAR <token> (269) 42
    STRING <token> (270) 43
    TRUE <token> (271) 44
    FALSE <token> (272) 45
    MAXINT <token> (273) 46 47
    READ <token> (274) 112
    READLN <token> (275) 113
    WRITE <token> (276) 114
    WRITELN <token> (277) 115 116
    MEMORYREAD <token> (278) 117
    MEMORYWRITE <token> (279) 118
    STACKREAD <token> (280) 119
    STACKWRITE <token> (281) 120
    ABS <token> (282) 145
    CHR <token> (283) 146
    ODD <token> (284) 147
    ORD <token> (285) 148
    PRED <token> (286) 149
    SUCC <token> (287) 150
    IF <token> (288) 95 96
    THEN <token> (289) 95
    ELSE <token> (290) 98
    REPEAT <token> (291) 99
    UNTIL <token> (292) 99
    WHILE <token> (293) 101
    DO <token> (294) 101 108 109
    CASE <token> (295) 102
    TO <token> (296) 108
    DOWNTO <token> (297) 109
    FOR <token> (298) 108 109
    EQUAL <token> (299) 38 39 52 53 127
    UNEQUAL <token> (300) 128
    GE <token> (301) 123
    GT <token> (302) 124
    LE <token> (303) 125
    LT <token> (304) 126
    ASSIGN <token> (305) 93 108 109
    PLUS <token> (306) 130
    MINUS <token> (307) 41 47 131 144
    MUL <token> (308) 134
    DIV <token> (309) 135
    OR <token> (310) 132
    AND <token> (311) 137
    NOT <token> (312) 143
    MOD <token> (313) 136
    LB <token> (314) 62 152 153
    RB <token> (315) 62 152 153
    LP <token> (316) 23 64 111 112 114 116 117 118 119 120 139 142 145 146 147 148 149 150
    RP <token> (317) 23 64 111 112 114 116 117 118 119 120 139 142 145 146 147 148 149 150
    SEMICOLON <token> (318) 1 2 12 13 14 17 18 19 24 32 38 52 60 78 105 106 107
    DOT <token> (319) 1 3 154 155
    DOUBLEDOT <token> (320) 65 66
    COMMA <token> (321) 71 121
    COLON <token> (322) 16 26 27 32 33 60 61 80 105 106
    INT_TYPE <token> (323) 67
    UNSIGNED_TYPE <token> (324) 68
    BOOL_TYPE <token> (325) 69
    CHAR_TYPE <token> (326) 70
    ARRAY <token> (327) 62
    OF <token> (328) 62 102
    RECORD <token> (329) 57
    GOTO <token> (330) 94
    BREAK <token> (331) 91
    CONTINUE <token> (332) 92
    OTHERWISE (333) 107
    ERROR <token> (334)


Nonterminals, with rules where they appear

    $accept (80)
        on left: 0
    program <programNode> (81)
        on left: 1 2 3 4
        on right: 0
    routine <routineNode> (82)
        on left: 5
        on right: 1 2 3 4 12 13 14 15 17 18 19 20
    routine_head <routineHeadNode> (83)
        on left: 6
        on right: 5
    routine_part <routinePartList> (84)
        on left: 7 8 9 10 11
        on right: 6 8 9
    fun_decl <routineDeclarationNode> (85)
        on left: 12 13 14 15
        on right: 8 10
    fun_head <routineDeclarationNode> (86)
        on left: 16
        on right: 12 13 14 15
    proc_decl <routineDeclarationNode> (87)
        on left: 17 18 19 20
        on right: 9 11
    proc_head <routineDeclarationNode> (88)
        on left: 21
        on right: 17 18 19 20
    params <paramsNode> (89)
        on left: 22 23
        on right: 16 21
    params_decl <paramsGroupList> (90)
        on left: 24 25
        on right: 23 24
    params_type <paramsGroupNode> (91)
        on left: 26 27
        on right: 24 25
    var_part <varPartList> (92)
        on left: 28 29
        on right: 6
    var_decl_list <varPartList> (93)
        on left: 30 31
        on right: 29 30
    var_decl <varPartListElement> (94)
        on left: 32 33
        on right: 30 31
    const_part <constPartList> (95)
        on left: 34 35
        on right: 6
    const_expr_list <constPartList> (96)
        on left: 36 37
        on right: 35 36
    const_expr <constPartListElement> (97)
        on left: 38 39
        on right: 36 37
    const_value <constantNode> (98)
        on left: 40 41 42 43 44 45 46 47
        on right: 38 39 65 105 141
    type_part <typePartList> (99)
        on left: 48 49
        on right: 6
    type_decl_list <typePartList> (100)
        on left: 50 51
        on right: 49 50
    type_def <typePartListElement> (101)
        on left: 52 53
        on right: 50 51
    type_decl <typeNode> (102)
        on left: 54 55 56
        on right: 32 33 52 53 60 61 62
    record_type_decl <recordTypeNode> (103)
        on left: 57
        on right: 56
    field_decl_list <fieldDeclList> (104)
        on left: 58 59
        on right: 57 58
    field_decl <fieldDeclListElement> (105)
        on left: 60 61
        on right: 58 59
    array_type_decl <arrayTypeNode> (106)
        on left: 62
        on right: 55
    simple_type <simpleTypeNode> (107)
        on left: 63 64 65 66 67 68 69 70
        on right: 16 26 27 54 62
    name_list <identifierList> (108)
        on left: 71 72
        on right: 26 27 32 33 60 61 64 71
    identifier <identifierNode> (109)
        on left: 73
        on right: 38 39 52 53 63 66 71 72 106 108 109 110 111 139 151 152 154 155
    routine_body <routineBodyNode> (110)
        on left: 74
        on right: 5
    compound_stmt <compoundStatementNode> (111)
        on left: 75 76
        on right: 74 83
    stmt_list <statementNodeList> (112)
        on left: 77 78 79
        on right: 75 76 78 79 99
    stmt <statementNode> (113)
        on left: 80 81
        on right: 78 79 95 96 98 101 105 106 107 108 109
    no_label_stmt <statementNode> (114)
        on left: 82 83 84 85 86 87 88 89 90 91 92
        on right: 80 81
    assign_stmt <assignNode> (115)
        on left: 93
        on right: 82
    goto_stmt <gotoNode> (116)
        on left: 94
        on right: 84
    if_stmt <ifNode> (117)
        on left: 95 96
        on right: 85
    else_clause <ifNode> (118)
        on left: 97 98
        on right: 95 96
    repeat_stmt <repeatNode> (119)
        on left: 99 100
        on right: 86
    while_stmt <whileNode> (120)
        on left: 101
        on right: 87
    case_stmt <caseNode> (121)
        on left: 102
        on right: 88
    case_expr_list <caseExprList> (122)
        on left: 103 104
        on right: 102 103
    case_expr <caseExpr> (123)
        on left: 105 106 107
        on right: 103 104
    for_stmt <forNode> (124)
        on left: 108 109
        on right: 89
    proc_stmt <callNode> (125)
        on left: 110 111 112 113 114 115 116 117 118 119 120
        on right: 90
    args_list <argsList> (126)
        on left: 121 122
        on right: 111 114 116 117 118 119 120 121 139 145 146 147 148 149 150
    expression <expressionNode> (127)
        on left: 123 124 125 126 127 128 129
        on right: 93 95 96 99 101 102 108 109 121 122 123 124 125 126 127 128 142 152 153
    expr <expressionNode> (128)
        on left: 130 131 132 133
        on right: 123 124 125 126 127 128 129 130 131 132
    term <expressionNode> (129)
        on left: 134 135 136 137 138
        on right: 130 131 132 133 134 135 136 137
    factor <expressionNode> (130)
        on left: 139 140 141 142 143 144 145 146 147 148 149 150
        on right: 112 134 135 136 137 138 143 144
    lvalue <expressionNode> (131)
        on left: 151 152 153 154 155
        on right: 93 140 153 155


State 0

    0 $accept: • program $end

    PROGRAM  shift, and go to state 1

    program  go to state 2


State 1

    1 program: PROGRAM • IDENT_NAME SEMICOLON routine DOT
    2        | PROGRAM • IDENT_NAME SEMICOLON routine
    3        | PROGRAM • IDENT_NAME routine DOT
    4        | PROGRAM • IDENT_NAME routine

    IDENT_NAME  shift, and go to state 3


State 2

    0 $accept: program • $end

    $end  shift, and go to state 4


State 3

    1 program: PROGRAM IDENT_NAME • SEMICOLON routine DOT
    2        | PROGRAM IDENT_NAME • SEMICOLON routine
    3        | PROGRAM IDENT_NAME • routine DOT
    4        | PROGRAM IDENT_NAME • routine

    CONST      shift, and go to state 5
    SEMICOLON  shift, and go to state 6

    $default  reduce using rule 34 (const_part)

    routine       go to state 7
    routine_head  go to state 8
    const_part    go to state 9


State 4

    0 $accept: program $end •

    $default  accept


State 5

   35 const_part: CONST • const_expr_list

    IDENT_NAME  shift, and go to state 10

    const_expr_list  go to state 11
    const_expr       go to state 12
    identifier       go to state 13


State 6

    1 program: PROGRAM IDENT_NAME SEMICOLON • routine DOT
    2        | PROGRAM IDENT_NAME SEMICOLON • routine

    CONST  shift, and go to state 5

    $default  reduce using rule 34 (const_part)

    routine       go to state 14
    routine_head  go to state 8
    const_part    go to state 9


State 7

    3 program: PROGRAM IDENT_NAME routine • DOT
    4        | PROGRAM IDENT_NAME routine •

    DOT  shift, and go to state 15

    $default  reduce using rule 4 (program)


State 8

    5 routine: routine_head • routine_body

    BBEGIN  shift, and go to state 16

    routine_body   go to state 17
    compound_stmt  go to state 18


State 9

    6 routine_head: const_part • type_part var_part routine_part

    TYPE  shift, and go to state 19

    $default  reduce using rule 48 (type_part)

    type_part  go to state 20


State 10

   73 identifier: IDENT_NAME •

    $default  reduce using rule 73 (identifier)


State 11

   35 const_part: CONST const_expr_list •
   36 const_expr_list: const_expr_list • const_expr

    IDENT_NAME  shift, and go to state 10

    $default  reduce using rule 35 (const_part)

    const_expr  go to state 21
    identifier  go to state 13


State 12

   37 const_expr_list: const_expr •

    $default  reduce using rule 37 (const_expr_list)


State 13

   38 const_expr: identifier • EQUAL const_value SEMICOLON
   39           | identifier • EQUAL const_value

    EQUAL  shift, and go to state 22


State 14

    1 program: PROGRAM IDENT_NAME SEMICOLON routine • DOT
    2        | PROGRAM IDENT_NAME SEMICOLON routine •

    DOT  shift, and go to state 23

    $default  reduce using rule 2 (program)


State 15

    3 program: PROGRAM IDENT_NAME routine DOT •

    $default  reduce using rule 3 (program)


State 16

   75 compound_stmt: BBEGIN • stmt_list END
   76              | BBEGIN • stmt_list

    $default  reduce using rule 77 (stmt_list)

    stmt_list  go to state 24


State 17

    5 routine: routine_head routine_body •

    $default  reduce using rule 5 (routine)


State 18

   74 routine_body: compound_stmt •

    $default  reduce using rule 74 (routine_body)


State 19

   49 type_part: TYPE • type_decl_list

    IDENT_NAME  shift, and go to state 10

    type_decl_list  go to state 25
    type_def        go to state 26
    identifier      go to state 27


State 20

    6 routine_head: const_part type_part • var_part routine_part

    VAR  shift, and go to state 28

    $default  reduce using rule 28 (var_part)

    var_part  go to state 29


State 21

   36 const_expr_list: const_expr_list const_expr •

    $default  reduce using rule 36 (const_expr_list)


State 22

   38 const_expr: identifier EQUAL • const_value SEMICOLON
   39           | identifier EQUAL • const_value

    INTEGER  shift, and go to state 30
    CHAR     shift, and go to state 31
    STRING   shift, and go to state 32
    TRUE     shift, and go to state 33
    FALSE    shift, and go to state 34
    MAXINT   shift, and go to state 35
    MINUS    shift, and go to state 36

    const_value  go to state 37


State 23

    1 program: PROGRAM IDENT_NAME SEMICOLON routine DOT •

    $default  reduce using rule 1 (program)


State 24

   75 compound_stmt: BBEGIN stmt_list • END
   76              | BBEGIN stmt_list •
   78 stmt_list: stmt_list • stmt SEMICOLON
   79          | stmt_list • stmt

    BBEGIN       shift, and go to state 16
    END          shift, and go to state 38
    IDENT_NAME   shift, and go to state 10
    INTEGER      shift, and go to state 39
    READ         shift, and go to state 40
    READLN       shift, and go to state 41
    WRITE        shift, and go to state 42
    WRITELN      shift, and go to state 43
    MEMORYREAD   shift, and go to state 44
    MEMORYWRITE  shift, and go to state 45
    STACKREAD    shift, and go to state 46
    STACKWRITE   shift, and go to state 47
    IF           shift, and go to state 48
    REPEAT       shift, and go to state 49
    WHILE        shift, and go to state 50
    CASE         shift, and go to state 51
    FOR          shift, and go to state 52
    GOTO         shift, and go to state 53
    BREAK        shift, and go to state 54
    CONTINUE     shift, and go to state 55

    $end         reduce using rule 76 (compound_stmt)
    $end         [reduce using rule 100 (repeat_stmt)]
    FUNCTION     reduce using rule 76 (compound_stmt)
    FUNCTION     [reduce using rule 100 (repeat_stmt)]
    PROCEDURE    reduce using rule 76 (compound_stmt)
    PROCEDURE    [reduce using rule 100 (repeat_stmt)]
    BBEGIN       [reduce using rule 76 (compound_stmt)]
    BBEGIN       [reduce using rule 100 (repeat_stmt)]
    END          [reduce using rule 76 (compound_stmt)]
    END          [reduce using rule 100 (repeat_stmt)]
    IDENT_NAME   [reduce using rule 76 (compound_stmt)]
    IDENT_NAME   [reduce using rule 100 (repeat_stmt)]
    INTEGER      [reduce using rule 76 (compound_stmt)]
    INTEGER      [reduce using rule 100 (repeat_stmt)]
    READ         [reduce using rule 76 (compound_stmt)]
    READ         [reduce using rule 100 (repeat_stmt)]
    READLN       [reduce using rule 76 (compound_stmt)]
    READLN       [reduce using rule 100 (repeat_stmt)]
    WRITE        [reduce using rule 76 (compound_stmt)]
    WRITE        [reduce using rule 100 (repeat_stmt)]
    WRITELN      [reduce using rule 76 (compound_stmt)]
    WRITELN      [reduce using rule 100 (repeat_stmt)]
    MEMORYREAD   [reduce using rule 76 (compound_stmt)]
    MEMORYREAD   [reduce using rule 100 (repeat_stmt)]
    MEMORYWRITE  [reduce using rule 76 (compound_stmt)]
    MEMORYWRITE  [reduce using rule 100 (repeat_stmt)]
    STACKREAD    [reduce using rule 76 (compound_stmt)]
    STACKREAD    [reduce using rule 100 (repeat_stmt)]
    STACKWRITE   [reduce using rule 76 (compound_stmt)]
    STACKWRITE   [reduce using rule 100 (repeat_stmt)]
    IF           [reduce using rule 76 (compound_stmt)]
    IF           [reduce using rule 100 (repeat_stmt)]
    ELSE         reduce using rule 76 (compound_stmt)
    ELSE         [reduce using rule 100 (repeat_stmt)]
    REPEAT       [reduce using rule 76 (compound_stmt)]
    REPEAT       [reduce using rule 100 (repeat_stmt)]
    UNTIL        reduce using rule 76 (compound_stmt)
    UNTIL        [reduce using rule 100 (repeat_stmt)]
    WHILE        [reduce using rule 76 (compound_stmt)]
    WHILE        [reduce using rule 100 (repeat_stmt)]
    CASE         [reduce using rule 76 (compound_stmt)]
    CASE         [reduce using rule 100 (repeat_stmt)]
    FOR          [reduce using rule 76 (compound_stmt)]
    FOR          [reduce using rule 100 (repeat_stmt)]
    SEMICOLON    reduce using rule 76 (compound_stmt)
    SEMICOLON    [reduce using rule 100 (repeat_stmt)]
    DOT          reduce using rule 76 (compound_stmt)
    DOT          [reduce using rule 100 (repeat_stmt)]
    GOTO         [reduce using rule 76 (compound_stmt)]
    GOTO         [reduce using rule 100 (repeat_stmt)]
    BREAK        [reduce using rule 76 (compound_stmt)]
    BREAK        [reduce using rule 100 (repeat_stmt)]
    CONTINUE     [reduce using rule 76 (compound_stmt)]
    CONTINUE     [reduce using rule 100 (repeat_stmt)]
    $default     reduce using rule 76 (compound_stmt)

    identifier     go to state 56
    compound_stmt  go to state 57
    stmt           go to state 58
    no_label_stmt  go to state 59
    assign_stmt    go to state 60
    goto_stmt      go to state 61
    if_stmt        go to state 62
    repeat_stmt    go to state 63
    while_stmt     go to state 64
    case_stmt      go to state 65
    for_stmt       go to state 66
    proc_stmt      go to state 67
    lvalue         go to state 68


State 25

   49 type_part: TYPE type_decl_list •
   50 type_decl_list: type_decl_list • type_def

    IDENT_NAME  shift, and go to state 10

    $default  reduce using rule 49 (type_part)

    type_def    go to state 69
    identifier  go to state 27


State 26

   51 type_decl_list: type_def •

    $default  reduce using rule 51 (type_decl_list)


State 27

   52 type_def: identifier • EQUAL type_decl SEMICOLON
   53         | identifier • EQUAL type_decl

    EQUAL  shift, and go to state 70


State 28

   29 var_part: VAR • var_decl_list

    IDENT_NAME  shift, and go to state 10

    var_decl_list  go to state 71
    var_decl       go to state 72
    name_list      go to state 73
    identifier     go to state 74


State 29

    6 routine_head: const_part type_part var_part • routine_part

    FUNCTION   shift, and go to state 75
    PROCEDURE  shift, and go to state 76

    FUNCTION   [reduce using rule 7 (routine_part)]
    PROCEDURE  [reduce using rule 7 (routine_part)]
    $default   reduce using rule 7 (routine_part)

    routine_part  go to state 77
    fun_decl      go to state 78
    fun_head      go to state 79
    proc_decl     go to state 80
    proc_head     go to state 81


State 30

   40 const_value: INTEGER •

    $default  reduce using rule 40 (const_value)


State 31

   42 const_value: CHAR •

    $default  reduce using rule 42 (const_value)


State 32

   43 const_value: STRING •

    $default  reduce using rule 43 (const_value)


State 33

   44 const_value: TRUE •

    $default  reduce using rule 44 (const_value)


State 34

   45 const_value: FALSE •

    $default  reduce using rule 45 (const_value)


State 35

   46 const_value: MAXINT •

    $default  reduce using rule 46 (const_value)


State 36

   41 const_value: MINUS • INTEGER
   47            | MINUS • MAXINT

    INTEGER  shift, and go to state 82
    MAXINT   shift, and go to state 83


State 37

   38 const_expr: identifier EQUAL const_value • SEMICOLON
   39           | identifier EQUAL const_value •

    SEMICOLON  shift, and go to state 84

    $default  reduce using rule 39 (const_expr)


State 38

   75 compound_stmt: BBEGIN stmt_list END •

    $default  reduce using rule 75 (compound_stmt)


State 39

   80 stmt: INTEGER • COLON no_label_stmt

    COLON  shift, and go to state 85


State 40

  112 proc_stmt: READ • LP factor RP

    LP  shift, and go to state 86


State 41

  113 proc_stmt: READLN •

    $default  reduce using rule 113 (proc_stmt)


State 42

  114 proc_stmt: WRITE • LP args_list RP

    LP  shift, and go to state 87


State 43

  115 proc_stmt: WRITELN •
  116          | WRITELN • LP args_list RP

    LP  shift, and go to state 88

    $default  reduce using rule 115 (proc_stmt)


State 44

  117 proc_stmt: MEMORYREAD • LP args_list RP

    LP  shift, and go to state 89


State 45

  118 proc_stmt: MEMORYWRITE • LP args_list RP

    LP  shift, and go to state 90


State 46

  119 proc_stmt: STACKREAD • LP args_list RP

    LP  shift, and go to state 91


State 47

  120 proc_stmt: STACKWRITE • LP args_list RP

    LP  shift, and go to state 92


State 48

   95 if_stmt: IF • expression THEN stmt else_clause
   96        | IF • expression stmt else_clause

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 93
    CHR         shift, and go to state 94
    ODD         shift, and go to state 95
    ORD         shift, and go to state 96
    PRED        shift, and go to state 97
    SUCC        shift, and go to state 98
    MINUS       shift, and go to state 99
    NOT         shift, and go to state 100
    LP          shift, and go to state 101

    const_value  go to state 102
    identifier   go to state 103
    expression   go to state 104
    expr         go to state 105
    term         go to state 106
    factor       go to state 107
    lvalue       go to state 108


State 49

   99 repeat_stmt: REPEAT • stmt_list UNTIL expression

    $default  reduce using rule 77 (stmt_list)

    stmt_list  go to state 109


State 50

  101 while_stmt: WHILE • expression DO stmt

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 93
    CHR         shift, and go to state 94
    ODD         shift, and go to state 95
    ORD         shift, and go to state 96
    PRED        shift, and go to state 97
    SUCC        shift, and go to state 98
    MINUS       shift, and go to state 99
    NOT         shift, and go to state 100
    LP          shift, and go to state 101

    const_value  go to state 102
    identifier   go to state 103
    expression   go to state 110
    expr         go to state 105
    term         go to state 106
    factor       go to state 107
    lvalue       go to state 108


State 51

  102 case_stmt: CASE • expression OF case_expr_list END

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 93
    CHR         shift, and go to state 94
    ODD         shift, and go to state 95
    ORD         shift, and go to state 96
    PRED        shift, and go to state 97
    SUCC        shift, and go to state 98
    MINUS       shift, and go to state 99
    NOT         shift, and go to state 100
    LP          shift, and go to state 101

    const_value  go to state 102
    identifier   go to state 103
    expression   go to state 111
    expr         go to state 105
    term         go to state 106
    factor       go to state 107
    lvalue       go to state 108


State 52

  108 for_stmt: FOR • identifier ASSIGN expression TO expression DO stmt
  109         | FOR • identifier ASSIGN expression DOWNTO expression DO stmt

    IDENT_NAME  shift, and go to state 10

    identifier  go to state 112


State 53

   94 goto_stmt: GOTO • INTEGER

    INTEGER  shift, and go to state 113


State 54

   91 no_label_stmt: BREAK •

    $default  reduce using rule 91 (no_label_stmt)


State 55

   92 no_label_stmt: CONTINUE •

    $default  reduce using rule 92 (no_label_stmt)


State 56

  110 proc_stmt: identifier •
  111          | identifier • LP args_list RP
  151 lvalue: identifier •
  152       | identifier • LB expression RB
  154       | identifier • DOT identifier

    LB   shift, and go to state 114
    LP   shift, and go to state 115
    DOT  shift, and go to state 116

    ASSIGN    reduce using rule 151 (lvalue)
    LB        [reduce using rule 151 (lvalue)]
    DOT       [reduce using rule 110 (proc_stmt)]
    DOT       [reduce using rule 151 (lvalue)]
    $default  reduce using rule 110 (proc_stmt)


State 57

   83 no_label_stmt: compound_stmt •

    $default  reduce using rule 83 (no_label_stmt)


State 58

   78 stmt_list: stmt_list stmt • SEMICOLON
   79          | stmt_list stmt •

    SEMICOLON  shift, and go to state 117

    SEMICOLON  [reduce using rule 79 (stmt_list)]
    $default   reduce using rule 79 (stmt_list)


State 59

   81 stmt: no_label_stmt •

    $default  reduce using rule 81 (stmt)


State 60

   82 no_label_stmt: assign_stmt •

    $default  reduce using rule 82 (no_label_stmt)


State 61

   84 no_label_stmt: goto_stmt •

    $default  reduce using rule 84 (no_label_stmt)


State 62

   85 no_label_stmt: if_stmt •

    $default  reduce using rule 85 (no_label_stmt)


State 63

   86 no_label_stmt: repeat_stmt •

    $default  reduce using rule 86 (no_label_stmt)


State 64

   87 no_label_stmt: while_stmt •

    $default  reduce using rule 87 (no_label_stmt)


State 65

   88 no_label_stmt: case_stmt •

    $default  reduce using rule 88 (no_label_stmt)


State 66

   89 no_label_stmt: for_stmt •

    $default  reduce using rule 89 (no_label_stmt)


State 67

   90 no_label_stmt: proc_stmt •

    $default  reduce using rule 90 (no_label_stmt)


State 68

   93 assign_stmt: lvalue • ASSIGN expression
  153 lvalue: lvalue • LB expression RB
  155       | lvalue • DOT identifier

    ASSIGN  shift, and go to state 118
    LB      shift, and go to state 119
    DOT     shift, and go to state 120


State 69

   50 type_decl_list: type_decl_list type_def •

    $default  reduce using rule 50 (type_decl_list)


State 70

   52 type_def: identifier EQUAL • type_decl SEMICOLON
   53         | identifier EQUAL • type_decl

    IDENT_NAME     shift, and go to state 10
    INTEGER        shift, and go to state 30
    CHAR           shift, and go to state 31
    STRING         shift, and go to state 32
    TRUE           shift, and go to state 33
    FALSE          shift, and go to state 34
    MAXINT         shift, and go to state 35
    MINUS          shift, and go to state 36
    LP             shift, and go to state 121
    INT_TYPE       shift, and go to state 122
    UNSIGNED_TYPE  shift, and go to state 123
    BOOL_TYPE      shift, and go to state 124
    CHAR_TYPE      shift, and go to state 125
    ARRAY          shift, and go to state 126
    RECORD         shift, and go to state 127

    const_value       go to state 128
    type_decl         go to state 129
    record_type_decl  go to state 130
    array_type_decl   go to state 131
    simple_type       go to state 132
    identifier        go to state 133


State 71

   29 var_part: VAR var_decl_list •
   30 var_decl_list: var_decl_list • var_decl

    IDENT_NAME  shift, and go to state 10

    $default  reduce using rule 29 (var_part)

    var_decl    go to state 134
    name_list   go to state 73
    identifier  go to state 74


State 72

   31 var_decl_list: var_decl •

    $default  reduce using rule 31 (var_decl_list)


State 73

   32 var_decl: name_list • COLON type_decl SEMICOLON
   33         | name_list • COLON type_decl
   71 name_list: name_list • COMMA identifier

    COMMA  shift, and go to state 135
    COLON  shift, and go to state 136


State 74

   72 name_list: identifier •

    $default  reduce using rule 72 (name_list)


State 75

   16 fun_head: FUNCTION • IDENT_NAME params COLON simple_type

    IDENT_NAME  shift, and go to state 137


State 76

   21 proc_head: PROCEDURE • IDENT_NAME params

    IDENT_NAME  shift, and go to state 138


State 77

    6 routine_head: const_part type_part var_part routine_part •
    8 routine_part: routine_part • fun_decl
    9             | routine_part • proc_decl

    FUNCTION   shift, and go to state 75
    PROCEDURE  shift, and go to state 76

    $default  reduce using rule 6 (routine_head)

    fun_decl   go to state 139
    fun_head   go to state 79
    proc_decl  go to state 140
    proc_head  go to state 81


State 78

   10 routine_part: fun_decl •

    $default  reduce using rule 10 (routine_part)


State 79

   12 fun_decl: fun_head • SEMICOLON routine SEMICOLON
   13         | fun_head • SEMICOLON routine
   14         | fun_head • routine SEMICOLON
   15         | fun_head • routine

    CONST      shift, and go to state 5
    SEMICOLON  shift, and go to state 141

    $default  reduce using rule 34 (const_part)

    routine       go to state 142
    routine_head  go to state 8
    const_part    go to state 9


State 80

   11 routine_part: proc_decl •

    $default  reduce using rule 11 (routine_part)


State 81

   17 proc_decl: proc_head • SEMICOLON routine SEMICOLON
   18          | proc_head • routine SEMICOLON
   19          | proc_head • SEMICOLON routine
   20          | proc_head • routine

    CONST      shift, and go to state 5
    SEMICOLON  shift, and go to state 143

    $default  reduce using rule 34 (const_part)

    routine       go to state 144
    routine_head  go to state 8
    const_part    go to state 9


State 82

   41 const_value: MINUS INTEGER •

    $default  reduce using rule 41 (const_value)


State 83

   47 const_value: MINUS MAXINT •

    $default  reduce using rule 47 (const_value)


State 84

   38 const_expr: identifier EQUAL const_value SEMICOLON •

    $default  reduce using rule 38 (const_expr)


State 85

   80 stmt: INTEGER COLON • no_label_stmt

    BBEGIN       shift, and go to state 16
    IDENT_NAME   shift, and go to state 10
    READ         shift, and go to state 40
    READLN       shift, and go to state 41
    WRITE        shift, and go to state 42
    WRITELN      shift, and go to state 43
    MEMORYREAD   shift, and go to state 44
    MEMORYWRITE  shift, and go to state 45
    STACKREAD    shift, and go to state 46
    STACKWRITE   shift, and go to state 47
    IF           shift, and go to state 48
    REPEAT       shift, and go to state 49
    WHILE        shift, and go to state 50
    CASE         shift, and go to state 51
    FOR          shift, and go to state 52
    GOTO         shift, and go to state 53
    BREAK        shift, and go to state 54
    CONTINUE     shift, and go to state 55

    BBEGIN       [reduce using rule 100 (repeat_stmt)]
    IDENT_NAME   [reduce using rule 100 (repeat_stmt)]
    READ         [reduce using rule 100 (repeat_stmt)]
    READLN       [reduce using rule 100 (repeat_stmt)]
    WRITE        [reduce using rule 100 (repeat_stmt)]
    WRITELN      [reduce using rule 100 (repeat_stmt)]
    MEMORYREAD   [reduce using rule 100 (repeat_stmt)]
    MEMORYWRITE  [reduce using rule 100 (repeat_stmt)]
    STACKREAD    [reduce using rule 100 (repeat_stmt)]
    STACKWRITE   [reduce using rule 100 (repeat_stmt)]
    IF           [reduce using rule 100 (repeat_stmt)]
    REPEAT       [reduce using rule 100 (repeat_stmt)]
    WHILE        [reduce using rule 100 (repeat_stmt)]
    CASE         [reduce using rule 100 (repeat_stmt)]
    FOR          [reduce using rule 100 (repeat_stmt)]
    GOTO         [reduce using rule 100 (repeat_stmt)]
    BREAK        [reduce using rule 100 (repeat_stmt)]
    CONTINUE     [reduce using rule 100 (repeat_stmt)]
    $default     reduce using rule 100 (repeat_stmt)

    identifier     go to state 56
    compound_stmt  go to state 57
    no_label_stmt  go to state 145
    assign_stmt    go to state 60
    goto_stmt      go to state 61
    if_stmt        go to state 62
    repeat_stmt    go to state 63
    while_stmt     go to state 64
    case_stmt      go to state 65
    for_stmt       go to state 66
    proc_stmt      go to state 67
    lvalue         go to state 68


State 86

  112 proc_stmt: READ LP • factor RP

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 93
    CHR         shift, and go to state 94
    ODD         shift, and go to state 95
    ORD         shift, and go to state 96
    PRED        shift, and go to state 97
    SUCC        shift, and go to state 98
    MINUS       shift, and go to state 99
    NOT         shift, and go to state 100
    LP          shift, and go to state 101

    const_value  go to state 102
    identifier   go to state 103
    factor       go to state 146
    lvalue       go to state 108


State 87

  114 proc_stmt: WRITE LP • args_list RP

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 93
    CHR         shift, and go to state 94
    ODD         shift, and go to state 95
    ORD         shift, and go to state 96
    PRED        shift, and go to state 97
    SUCC        shift, and go to state 98
    MINUS       shift, and go to state 99
    NOT         shift, and go to state 100
    LP          shift, and go to state 101

    const_value  go to state 102
    identifier   go to state 103
    args_list    go to state 147
    expression   go to state 148
    expr         go to state 105
    term         go to state 106
    factor       go to state 107
    lvalue       go to state 108


State 88

  116 proc_stmt: WRITELN LP • args_list RP

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 93
    CHR         shift, and go to state 94
    ODD         shift, and go to state 95
    ORD         shift, and go to state 96
    PRED        shift, and go to state 97
    SUCC        shift, and go to state 98
    MINUS       shift, and go to state 99
    NOT         shift, and go to state 100
    LP          shift, and go to state 101

    const_value  go to state 102
    identifier   go to state 103
    args_list    go to state 149
    expression   go to state 148
    expr         go to state 105
    term         go to state 106
    factor       go to state 107
    lvalue       go to state 108


State 89

  117 proc_stmt: MEMORYREAD LP • args_list RP

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 93
    CHR         shift, and go to state 94
    ODD         shift, and go to state 95
    ORD         shift, and go to state 96
    PRED        shift, and go to state 97
    SUCC        shift, and go to state 98
    MINUS       shift, and go to state 99
    NOT         shift, and go to state 100
    LP          shift, and go to state 101

    const_value  go to state 102
    identifier   go to state 103
    args_list    go to state 150
    expression   go to state 148
    expr         go to state 105
    term         go to state 106
    factor       go to state 107
    lvalue       go to state 108


State 90

  118 proc_stmt: MEMORYWRITE LP • args_list RP

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 93
    CHR         shift, and go to state 94
    ODD         shift, and go to state 95
    ORD         shift, and go to state 96
    PRED        shift, and go to state 97
    SUCC        shift, and go to state 98
    MINUS       shift, and go to state 99
    NOT         shift, and go to state 100
    LP          shift, and go to state 101

    const_value  go to state 102
    identifier   go to state 103
    args_list    go to state 151
    expression   go to state 148
    expr         go to state 105
    term         go to state 106
    factor       go to state 107
    lvalue       go to state 108


State 91

  119 proc_stmt: STACKREAD LP • args_list RP

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 93
    CHR         shift, and go to state 94
    ODD         shift, and go to state 95
    ORD         shift, and go to state 96
    PRED        shift, and go to state 97
    SUCC        shift, and go to state 98
    MINUS       shift, and go to state 99
    NOT         shift, and go to state 100
    LP          shift, and go to state 101

    const_value  go to state 102
    identifier   go to state 103
    args_list    go to state 152
    expression   go to state 148
    expr         go to state 105
    term         go to state 106
    factor       go to state 107
    lvalue       go to state 108


State 92

  120 proc_stmt: STACKWRITE LP • args_list RP

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 93
    CHR         shift, and go to state 94
    ODD         shift, and go to state 95
    ORD         shift, and go to state 96
    PRED        shift, and go to state 97
    SUCC        shift, and go to state 98
    MINUS       shift, and go to state 99
    NOT         shift, and go to state 100
    LP          shift, and go to state 101

    const_value  go to state 102
    identifier   go to state 103
    args_list    go to state 153
    expression   go to state 148
    expr         go to state 105
    term         go to state 106
    factor       go to state 107
    lvalue       go to state 108


State 93

  145 factor: ABS • LP args_list RP

    LP  shift, and go to state 154


State 94

  146 factor: CHR • LP args_list RP

    LP  shift, and go to state 155


State 95

  147 factor: ODD • LP args_list RP

    LP  shift, and go to state 156


State 96

  148 factor: ORD • LP args_list RP

    LP  shift, and go to state 157


State 97

  149 factor: PRED • LP args_list RP

    LP  shift, and go to state 158


State 98

  150 factor: SUCC • LP args_list RP

    LP  shift, and go to state 159


State 99

   41 const_value: MINUS • INTEGER
   47            | MINUS • MAXINT
  144 factor: MINUS • factor

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 160
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 161
    ABS         shift, and go to state 93
    CHR         shift, and go to state 94
    ODD         shift, and go to state 95
    ORD         shift, and go to state 96
    PRED        shift, and go to state 97
    SUCC        shift, and go to state 98
    MINUS       shift, and go to state 99
    NOT         shift, and go to state 100
    LP          shift, and go to state 101

    const_value  go to state 102
    identifier   go to state 103
    factor       go to state 162
    lvalue       go to state 108


State 100

  143 factor: NOT • factor

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 93
    CHR         shift, and go to state 94
    ODD         shift, and go to state 95
    ORD         shift, and go to state 96
    PRED        shift, and go to state 97
    SUCC        shift, and go to state 98
    MINUS       shift, and go to state 99
    NOT         shift, and go to state 100
    LP          shift, and go to state 101

    const_value  go to state 102
    identifier   go to state 103
    factor       go to state 163
    lvalue       go to state 108


State 101

  142 factor: LP • expression RP

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 93
    CHR         shift, and go to state 94
    ODD         shift, and go to state 95
    ORD         shift, and go to state 96
    PRED        shift, and go to state 97
    SUCC        shift, and go to state 98
    MINUS       shift, and go to state 99
    NOT         shift, and go to state 100
    LP          shift, and go to state 101

    const_value  go to state 102
    identifier   go to state 103
    expression   go to state 164
    expr         go to state 105
    term         go to state 106
    factor       go to state 107
    lvalue       go to state 108


State 102

  141 factor: const_value •

    $default  reduce using rule 141 (factor)


State 103

  139 factor: identifier • LP args_list RP
  151 lvalue: identifier •
  152       | identifier • LB expression RB
  154       | identifier • DOT identifier

    LB   shift, and go to state 114
    LP   shift, and go to state 165
    DOT  shift, and go to state 116

    LB        [reduce using rule 151 (lvalue)]
    DOT       [reduce using rule 151 (lvalue)]
    $default  reduce using rule 151 (lvalue)


State 104

   95 if_stmt: IF expression • THEN stmt else_clause
   96        | IF expression • stmt else_clause
  123 expression: expression • GE expr
  124           | expression • GT expr
  125           | expression • LE expr
  126           | expression • LT expr
  127           | expression • EQUAL expr
  128           | expression • UNEQUAL expr

    BBEGIN       shift, and go to state 16
    IDENT_NAME   shift, and go to state 10
    INTEGER      shift, and go to state 39
    READ         shift, and go to state 40
    READLN       shift, and go to state 41
    WRITE        shift, and go to state 42
    WRITELN      shift, and go to state 43
    MEMORYREAD   shift, and go to state 44
    MEMORYWRITE  shift, and go to state 45
    STACKREAD    shift, and go to state 46
    STACKWRITE   shift, and go to state 47
    IF           shift, and go to state 48
    THEN         shift, and go to state 166
    REPEAT       shift, and go to state 49
    WHILE        shift, and go to state 50
    CASE         shift, and go to state 51
    FOR          shift, and go to state 52
    EQUAL        shift, and go to state 167
    UNEQUAL      shift, and go to state 168
    GE           shift, and go to state 169
    GT           shift, and go to state 170
    LE           shift, and go to state 171
    LT           shift, and go to state 172
    GOTO         shift, and go to state 53
    BREAK        shift, and go to state 54
    CONTINUE     shift, and go to state 55

    BBEGIN       [reduce using rule 100 (repeat_stmt)]
    IDENT_NAME   [reduce using rule 100 (repeat_stmt)]
    INTEGER      [reduce using rule 100 (repeat_stmt)]
    READ         [reduce using rule 100 (repeat_stmt)]
    READLN       [reduce using rule 100 (repeat_stmt)]
    WRITE        [reduce using rule 100 (repeat_stmt)]
    WRITELN      [reduce using rule 100 (repeat_stmt)]
    MEMORYREAD   [reduce using rule 100 (repeat_stmt)]
    MEMORYWRITE  [reduce using rule 100 (repeat_stmt)]
    STACKREAD    [reduce using rule 100 (repeat_stmt)]
    STACKWRITE   [reduce using rule 100 (repeat_stmt)]
    IF           [reduce using rule 100 (repeat_stmt)]
    REPEAT       [reduce using rule 100 (repeat_stmt)]
    WHILE        [reduce using rule 100 (repeat_stmt)]
    CASE         [reduce using rule 100 (repeat_stmt)]
    FOR          [reduce using rule 100 (repeat_stmt)]
    GOTO         [reduce using rule 100 (repeat_stmt)]
    BREAK        [reduce using rule 100 (repeat_stmt)]
    CONTINUE     [reduce using rule 100 (repeat_stmt)]
    $default     reduce using rule 100 (repeat_stmt)

    identifier     go to state 56
    compound_stmt  go to state 57
    stmt           go to state 173
    no_label_stmt  go to state 59
    assign_stmt    go to state 60
    goto_stmt      go to state 61
    if_stmt        go to state 62
    repeat_stmt    go to state 63
    while_stmt     go to state 64
    case_stmt      go to state 65
    for_stmt       go to state 66
    proc_stmt      go to state 67
    lvalue         go to state 68


State 105

  129 expression: expr •
  130 expr: expr • PLUS term
  131     | expr • MINUS term
  132     | expr • OR term

    PLUS   shift, and go to state 174
    MINUS  shift, and go to state 175
    OR     shift, and go to state 176

    $default  reduce using rule 129 (expression)


State 106

  133 expr: term •
  134 term: term • MUL factor
  135     | term • DIV factor
  136     | term • MOD factor
  137     | term • AND factor

    MUL  shift, and go to state 177
    DIV  shift, and go to state 178
    AND  shift, and go to state 179
    MOD  shift, and go to state 180

    $default  reduce using rule 133 (expr)


State 107

  138 term: factor •

    $default  reduce using rule 138 (term)


State 108

  140 factor: lvalue •
  153 lvalue: lvalue • LB expression RB
  155       | lvalue • DOT identifier

    LB   shift, and go to state 119
    DOT  shift, and go to state 120

    DOT       [reduce using rule 140 (factor)]
    $default  reduce using rule 140 (factor)


State 109

   78 stmt_list: stmt_list • stmt SEMICOLON
   79          | stmt_list • stmt
   99 repeat_stmt: REPEAT stmt_list • UNTIL expression

    BBEGIN       shift, and go to state 16
    IDENT_NAME   shift, and go to state 10
    INTEGER      shift, and go to state 39
    READ         shift, and go to state 40
    READLN       shift, and go to state 41
    WRITE        shift, and go to state 42
    WRITELN      shift, and go to state 43
    MEMORYREAD   shift, and go to state 44
    MEMORYWRITE  shift, and go to state 45
    STACKREAD    shift, and go to state 46
    STACKWRITE   shift, and go to state 47
    IF           shift, and go to state 48
    REPEAT       shift, and go to state 49
    UNTIL        shift, and go to state 181
    WHILE        shift, and go to state 50
    CASE         shift, and go to state 51
    FOR          shift, and go to state 52
    GOTO         shift, and go to state 53
    BREAK        shift, and go to state 54
    CONTINUE     shift, and go to state 55

    BBEGIN       [reduce using rule 100 (repeat_stmt)]
    IDENT_NAME   [reduce using rule 100 (repeat_stmt)]
    INTEGER      [reduce using rule 100 (repeat_stmt)]
    READ         [reduce using rule 100 (repeat_stmt)]
    READLN       [reduce using rule 100 (repeat_stmt)]
    WRITE        [reduce using rule 100 (repeat_stmt)]
    WRITELN      [reduce using rule 100 (repeat_stmt)]
    MEMORYREAD   [reduce using rule 100 (repeat_stmt)]
    MEMORYWRITE  [reduce using rule 100 (repeat_stmt)]
    STACKREAD    [reduce using rule 100 (repeat_stmt)]
    STACKWRITE   [reduce using rule 100 (repeat_stmt)]
    IF           [reduce using rule 100 (repeat_stmt)]
    REPEAT       [reduce using rule 100 (repeat_stmt)]
    UNTIL        [reduce using rule 100 (repeat_stmt)]
    WHILE        [reduce using rule 100 (repeat_stmt)]
    CASE         [reduce using rule 100 (repeat_stmt)]
    FOR          [reduce using rule 100 (repeat_stmt)]
    GOTO         [reduce using rule 100 (repeat_stmt)]
    BREAK        [reduce using rule 100 (repeat_stmt)]
    CONTINUE     [reduce using rule 100 (repeat_stmt)]
    $default     reduce using rule 100 (repeat_stmt)

    identifier     go to state 56
    compound_stmt  go to state 57
    stmt           go to state 58
    no_label_stmt  go to state 59
    assign_stmt    go to state 60
    goto_stmt      go to state 61
    if_stmt        go to state 62
    repeat_stmt    go to state 63
    while_stmt     go to state 64
    case_stmt      go to state 65
    for_stmt       go to state 66
    proc_stmt      go to state 67
    lvalue         go to state 68


State 110

  101 while_stmt: WHILE expression • DO stmt
  123 expression: expression • GE expr
  124           | expression • GT expr
  125           | expression • LE expr
  126           | expression • LT expr
  127           | expression • EQUAL expr
  128           | expression • UNEQUAL expr

    DO       shift, and go to state 182
    EQUAL    shift, and go to state 167
    UNEQUAL  shift, and go to state 168
    GE       shift, and go to state 169
    GT       shift, and go to state 170
    LE       shift, and go to state 171
    LT       shift, and go to state 172


State 111

  102 case_stmt: CASE expression • OF case_expr_list END
  123 expression: expression • GE expr
  124           | expression • GT expr
  125           | expression • LE expr
  126           | expression • LT expr
  127           | expression • EQUAL expr
  128           | expression • UNEQUAL expr

    EQUAL    shift, and go to state 167
    UNEQUAL  shift, and go to state 168
    GE       shift, and go to state 169
    GT       shift, and go to state 170
    LE       shift, and go to state 171
    LT       shift, and go to state 172
    OF       shift, and go to state 183


State 112

  108 for_stmt: FOR identifier • ASSIGN expression TO expression DO stmt
  109         | FOR identifier • ASSIGN expression DOWNTO expression DO stmt

    ASSIGN  shift, and go to state 184


State 113

   94 goto_stmt: GOTO INTEGER •

    $default  reduce using rule 94 (goto_stmt)


State 114

  152 lvalue: identifier LB • expression RB

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 93
    CHR         shift, and go to state 94
    ODD         shift, and go to state 95
    ORD         shift, and go to state 96
    PRED        shift, and go to state 97
    SUCC        shift, and go to state 98
    MINUS       shift, and go to state 99
    NOT         shift, and go to state 100
    LP          shift, and go to state 101

    const_value  go to state 102
    identifier   go to state 103
    expression   go to state 185
    expr         go to state 105
    term         go to state 106
    factor       go to state 107
    lvalue       go to state 108


State 115

  111 proc_stmt: identifier LP • args_list RP

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 93
    CHR         shift, and go to state 94
    ODD         shift, and go to state 95
    ORD         shift, and go to state 96
    PRED        shift, and go to state 97
    SUCC        shift, and go to state 98
    MINUS       shift, and go to state 99
    NOT         shift, and go to state 100
    LP          shift, and go to state 101

    const_value  go to state 102
    identifier   go to state 103
    args_list    go to state 186
    expression   go to state 148
    expr         go to state 105
    term         go to state 106
    factor       go to state 107
    lvalue       go to state 108


State 116

  154 lvalue: identifier DOT • identifier

    IDENT_NAME  shift, and go to state 10

    identifier  go to state 187


State 117

   78 stmt_list: stmt_list stmt SEMICOLON •

    $default  reduce using rule 78 (stmt_list)


State 118

   93 assign_stmt: lvalue ASSIGN • expression

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 93
    CHR         shift, and go to state 94
    ODD         shift, and go to state 95
    ORD         shift, and go to state 96
    PRED        shift, and go to state 97
    SUCC        shift, and go to state 98
    MINUS       shift, and go to state 99
    NOT         shift, and go to state 100
    LP          shift, and go to state 101

    const_value  go to state 102
    identifier   go to state 103
    expression   go to state 188
    expr         go to state 105
    term         go to state 106
    factor       go to state 107
    lvalue       go to state 108


State 119

  153 lvalue: lvalue LB • expression RB

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 93
    CHR         shift, and go to state 94
    ODD         shift, and go to state 95
    ORD         shift, and go to state 96
    PRED        shift, and go to state 97
    SUCC        shift, and go to state 98
    MINUS       shift, and go to state 99
    NOT         shift, and go to state 100
    LP          shift, and go to state 101

    const_value  go to state 102
    identifier   go to state 103
    expression   go to state 189
    expr         go to state 105
    term         go to state 106
    factor       go to state 107
    lvalue       go to state 108


State 120

  155 lvalue: lvalue DOT • identifier

    IDENT_NAME  shift, and go to state 10

    identifier  go to state 190


State 121

   64 simple_type: LP • name_list RP

    IDENT_NAME  shift, and go to state 10

    name_list   go to state 191
    identifier  go to state 74


State 122

   67 simple_type: INT_TYPE •

    $default  reduce using rule 67 (simple_type)


State 123

   68 simple_type: UNSIGNED_TYPE •

    $default  reduce using rule 68 (simple_type)


State 124

   69 simple_type: BOOL_TYPE •

    $default  reduce using rule 69 (simple_type)


State 125

   70 simple_type: CHAR_TYPE •

    $default  reduce using rule 70 (simple_type)


State 126

   62 array_type_decl: ARRAY • LB simple_type RB OF type_decl

    LB  shift, and go to state 192


State 127

   57 record_type_decl: RECORD • field_decl_list END

    IDENT_NAME  shift, and go to state 10

    field_decl_list  go to state 193
    field_decl       go to state 194
    name_list        go to state 195
    identifier       go to state 74


State 128

   65 simple_type: const_value • DOUBLEDOT const_value

    DOUBLEDOT  shift, and go to state 196


State 129

   52 type_def: identifier EQUAL type_decl • SEMICOLON
   53         | identifier EQUAL type_decl •

    SEMICOLON  shift, and go to state 197

    $default  reduce using rule 53 (type_def)


State 130

   56 type_decl: record_type_decl •

    $default  reduce using rule 56 (type_decl)


State 131

   55 type_decl: array_type_decl •

    $default  reduce using rule 55 (type_decl)


State 132

   54 type_decl: simple_type •

    $default  reduce using rule 54 (type_decl)


State 133

   63 simple_type: identifier •
   66            | identifier • DOUBLEDOT identifier

    DOUBLEDOT  shift, and go to state 198

    $default  reduce using rule 63 (simple_type)


State 134

   30 var_decl_list: var_decl_list var_decl •

    $default  reduce using rule 30 (var_decl_list)


State 135

   71 name_list: name_list COMMA • identifier

    IDENT_NAME  shift, and go to state 10

    identifier  go to state 199


State 136

   32 var_decl: name_list COLON • type_decl SEMICOLON
   33         | name_list COLON • type_decl

    IDENT_NAME     shift, and go to state 10
    INTEGER        shift, and go to state 30
    CHAR           shift, and go to state 31
    STRING         shift, and go to state 32
    TRUE           shift, and go to state 33
    FALSE          shift, and go to state 34
    MAXINT         shift, and go to state 35
    MINUS          shift, and go to state 36
    LP             shift, and go to state 121
    INT_TYPE       shift, and go to state 122
    UNSIGNED_TYPE  shift, and go to state 123
    BOOL_TYPE      shift, and go to state 124
    CHAR_TYPE      shift, and go to state 125
    ARRAY          shift, and go to state 126
    RECORD         shift, and go to state 127

    const_value       go to state 128
    type_decl         go to state 200
    record_type_decl  go to state 130
    array_type_decl   go to state 131
    simple_type       go to state 132
    identifier        go to state 133


State 137

   16 fun_head: FUNCTION IDENT_NAME • params COLON simple_type

    LP  shift, and go to state 201

    $default  reduce using rule 22 (params)

    params  go to state 202


State 138

   21 proc_head: PROCEDURE IDENT_NAME • params

    LP  shift, and go to state 201

    $default  reduce using rule 22 (params)

    params  go to state 203


State 139

    8 routine_part: routine_part fun_decl •

    $default  reduce using rule 8 (routine_part)


State 140

    9 routine_part: routine_part proc_decl •

    $default  reduce using rule 9 (routine_part)


State 141

   12 fun_decl: fun_head SEMICOLON • routine SEMICOLON
   13         | fun_head SEMICOLON • routine

    CONST  shift, and go to state 5

    $default  reduce using rule 34 (const_part)

    routine       go to state 204
    routine_head  go to state 8
    const_part    go to state 9


State 142

   14 fun_decl: fun_head routine • SEMICOLON
   15         | fun_head routine •

    SEMICOLON  shift, and go to state 205

    $default  reduce using rule 15 (fun_decl)


State 143

   17 proc_decl: proc_head SEMICOLON • routine SEMICOLON
   19          | proc_head SEMICOLON • routine

    CONST  shift, and go to state 5

    $default  reduce using rule 34 (const_part)

    routine       go to state 206
    routine_head  go to state 8
    const_part    go to state 9


State 144

   18 proc_decl: proc_head routine • SEMICOLON
   20          | proc_head routine •

    SEMICOLON  shift, and go to state 207

    $default  reduce using rule 20 (proc_decl)


State 145

   80 stmt: INTEGER COLON no_label_stmt •

    $default  reduce using rule 80 (stmt)


State 146

  112 proc_stmt: READ LP factor • RP

    RP  shift, and go to state 208


State 147

  114 proc_stmt: WRITE LP args_list • RP
  121 args_list: args_list • COMMA expression

    RP     shift, and go to state 209
    COMMA  shift, and go to state 210


State 148

  122 args_list: expression •
  123 expression: expression • GE expr
  124           | expression • GT expr
  125           | expression • LE expr
  126           | expression • LT expr
  127           | expression • EQUAL expr
  128           | expression • UNEQUAL expr

    EQUAL    shift, and go to state 167
    UNEQUAL  shift, and go to state 168
    GE       shift, and go to state 169
    GT       shift, and go to state 170
    LE       shift, and go to state 171
    LT       shift, and go to state 172

    $default  reduce using rule 122 (args_list)


State 149

  116 proc_stmt: WRITELN LP args_list • RP
  121 args_list: args_list • COMMA expression

    RP     shift, and go to state 211
    COMMA  shift, and go to state 210


State 150

  117 proc_stmt: MEMORYREAD LP args_list • RP
  121 args_list: args_list • COMMA expression

    RP     shift, and go to state 212
    COMMA  shift, and go to state 210


State 151

  118 proc_stmt: MEMORYWRITE LP args_list • RP
  121 args_list: args_list • COMMA expression

    RP     shift, and go to state 213
    COMMA  shift, and go to state 210


State 152

  119 proc_stmt: STACKREAD LP args_list • RP
  121 args_list: args_list • COMMA expression

    RP     shift, and go to state 214
    COMMA  shift, and go to state 210


State 153

  120 proc_stmt: STACKWRITE LP args_list • RP
  121 args_list: args_list • COMMA expression

    RP     shift, and go to state 215
    COMMA  shift, and go to state 210


State 154

  145 factor: ABS LP • args_list RP

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 93
    CHR         shift, and go to state 94
    ODD         shift, and go to state 95
    ORD         shift, and go to state 96
    PRED        shift, and go to state 97
    SUCC        shift, and go to state 98
    MINUS       shift, and go to state 99
    NOT         shift, and go to state 100
    LP          shift, and go to state 101

    const_value  go to state 102
    identifier   go to state 103
    args_list    go to state 216
    expression   go to state 148
    expr         go to state 105
    term         go to state 106
    factor       go to state 107
    lvalue       go to state 108


State 155

  146 factor: CHR LP • args_list RP

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 93
    CHR         shift, and go to state 94
    ODD         shift, and go to state 95
    ORD         shift, and go to state 96
    PRED        shift, and go to state 97
    SUCC        shift, and go to state 98
    MINUS       shift, and go to state 99
    NOT         shift, and go to state 100
    LP          shift, and go to state 101

    const_value  go to state 102
    identifier   go to state 103
    args_list    go to state 217
    expression   go to state 148
    expr         go to state 105
    term         go to state 106
    factor       go to state 107
    lvalue       go to state 108


State 156

  147 factor: ODD LP • args_list RP

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 93
    CHR         shift, and go to state 94
    ODD         shift, and go to state 95
    ORD         shift, and go to state 96
    PRED        shift, and go to state 97
    SUCC        shift, and go to state 98
    MINUS       shift, and go to state 99
    NOT         shift, and go to state 100
    LP          shift, and go to state 101

    const_value  go to state 102
    identifier   go to state 103
    args_list    go to state 218
    expression   go to state 148
    expr         go to state 105
    term         go to state 106
    factor       go to state 107
    lvalue       go to state 108


State 157

  148 factor: ORD LP • args_list RP

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 93
    CHR         shift, and go to state 94
    ODD         shift, and go to state 95
    ORD         shift, and go to state 96
    PRED        shift, and go to state 97
    SUCC        shift, and go to state 98
    MINUS       shift, and go to state 99
    NOT         shift, and go to state 100
    LP          shift, and go to state 101

    const_value  go to state 102
    identifier   go to state 103
    args_list    go to state 219
    expression   go to state 148
    expr         go to state 105
    term         go to state 106
    factor       go to state 107
    lvalue       go to state 108


State 158

  149 factor: PRED LP • args_list RP

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 93
    CHR         shift, and go to state 94
    ODD         shift, and go to state 95
    ORD         shift, and go to state 96
    PRED        shift, and go to state 97
    SUCC        shift, and go to state 98
    MINUS       shift, and go to state 99
    NOT         shift, and go to state 100
    LP          shift, and go to state 101

    const_value  go to state 102
    identifier   go to state 103
    args_list    go to state 220
    expression   go to state 148
    expr         go to state 105
    term         go to state 106
    factor       go to state 107
    lvalue       go to state 108


State 159

  150 factor: SUCC LP • args_list RP

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 93
    CHR         shift, and go to state 94
    ODD         shift, and go to state 95
    ORD         shift, and go to state 96
    PRED        shift, and go to state 97
    SUCC        shift, and go to state 98
    MINUS       shift, and go to state 99
    NOT         shift, and go to state 100
    LP          shift, and go to state 101

    const_value  go to state 102
    identifier   go to state 103
    args_list    go to state 221
    expression   go to state 148
    expr         go to state 105
    term         go to state 106
    factor       go to state 107
    lvalue       go to state 108


State 160

   40 const_value: INTEGER •
   41            | MINUS INTEGER •

    $end         reduce using rule 40 (const_value)
    $end         [reduce using rule 41 (const_value)]
    FUNCTION     reduce using rule 40 (const_value)
    FUNCTION     [reduce using rule 41 (const_value)]
    PROCEDURE    reduce using rule 40 (const_value)
    PROCEDURE    [reduce using rule 41 (const_value)]
    BBEGIN       reduce using rule 40 (const_value)
    BBEGIN       [reduce using rule 41 (const_value)]
    END          reduce using rule 40 (const_value)
    END          [reduce using rule 41 (const_value)]
    IDENT_NAME   reduce using rule 40 (const_value)
    IDENT_NAME   [reduce using rule 41 (const_value)]
    INTEGER      reduce using rule 40 (const_value)
    INTEGER      [reduce using rule 41 (const_value)]
    READ         reduce using rule 40 (const_value)
    READ         [reduce using rule 41 (const_value)]
    READLN       reduce using rule 40 (const_value)
    READLN       [reduce using rule 41 (const_value)]
    WRITE        reduce using rule 40 (const_value)
    WRITE        [reduce using rule 41 (const_value)]
    WRITELN      reduce using rule 40 (const_value)
    WRITELN      [reduce using rule 41 (const_value)]
    MEMORYREAD   reduce using rule 40 (const_value)
    MEMORYREAD   [reduce using rule 41 (const_value)]
    MEMORYWRITE  reduce using rule 40 (const_value)
    MEMORYWRITE  [reduce using rule 41 (const_value)]
    STACKREAD    reduce using rule 40 (const_value)
    STACKREAD    [reduce using rule 41 (const_value)]
    STACKWRITE   reduce using rule 40 (const_value)
    STACKWRITE   [reduce using rule 41 (const_value)]
    IF           reduce using rule 40 (const_value)
    IF           [reduce using rule 41 (const_value)]
    THEN         reduce using rule 40 (const_value)
    THEN         [reduce using rule 41 (const_value)]
    ELSE         reduce using rule 40 (const_value)
    ELSE         [reduce using rule 41 (const_value)]
    REPEAT       reduce using rule 40 (const_value)
    REPEAT       [reduce using rule 41 (const_value)]
    UNTIL        reduce using rule 40 (const_value)
    UNTIL        [reduce using rule 41 (const_value)]
    WHILE        reduce using rule 40 (const_value)
    WHILE        [reduce using rule 41 (const_value)]
    DO           reduce using rule 40 (const_value)
    DO           [reduce using rule 41 (const_value)]
    CASE         reduce using rule 40 (const_value)
    CASE         [reduce using rule 41 (const_value)]
    TO           reduce using rule 40 (const_value)
    TO           [reduce using rule 41 (const_value)]
    DOWNTO       reduce using rule 40 (const_value)
    DOWNTO       [reduce using rule 41 (const_value)]
    FOR          reduce using rule 40 (const_value)
    FOR          [reduce using rule 41 (const_value)]
    EQUAL        reduce using rule 40 (const_value)
    EQUAL        [reduce using rule 41 (const_value)]
    UNEQUAL      reduce using rule 40 (const_value)
    UNEQUAL      [reduce using rule 41 (const_value)]
    GE           reduce using rule 40 (const_value)
    GE           [reduce using rule 41 (const_value)]
    GT           reduce using rule 40 (const_value)
    GT           [reduce using rule 41 (const_value)]
    LE           reduce using rule 40 (const_value)
    LE           [reduce using rule 41 (const_value)]
    LT           reduce using rule 40 (const_value)
    LT           [reduce using rule 41 (const_value)]
    PLUS         reduce using rule 40 (const_value)
    PLUS         [reduce using rule 41 (const_value)]
    MINUS        reduce using rule 40 (const_value)
    MINUS        [reduce using rule 41 (const_value)]
    MUL          reduce using rule 40 (const_value)
    MUL          [reduce using rule 41 (const_value)]
    DIV          reduce using rule 40 (const_value)
    DIV          [reduce using rule 41 (const_value)]
    OR           reduce using rule 40 (const_value)
    OR           [reduce using rule 41 (const_value)]
    AND          reduce using rule 40 (const_value)
    AND          [reduce using rule 41 (const_value)]
    MOD          reduce using rule 40 (const_value)
    MOD          [reduce using rule 41 (const_value)]
    RB           reduce using rule 40 (const_value)
    RB           [reduce using rule 41 (const_value)]
    RP           reduce using rule 40 (const_value)
    RP           [reduce using rule 41 (const_value)]
    SEMICOLON    reduce using rule 40 (const_value)
    SEMICOLON    [reduce using rule 41 (const_value)]
    DOT          reduce using rule 40 (const_value)
    DOT          [reduce using rule 41 (const_value)]
    COMMA        reduce using rule 40 (const_value)
    COMMA        [reduce using rule 41 (const_value)]
    OF           reduce using rule 40 (const_value)
    OF           [reduce using rule 41 (const_value)]
    GOTO         reduce using rule 40 (const_value)
    GOTO         [reduce using rule 41 (const_value)]
    BREAK        reduce using rule 40 (const_value)
    BREAK        [reduce using rule 41 (const_value)]
    CONTINUE     reduce using rule 40 (const_value)
    CONTINUE     [reduce using rule 41 (const_value)]
    $default     reduce using rule 40 (const_value)


State 161

   46 const_value: MAXINT •
   47            | MINUS MAXINT •

    $end         reduce using rule 46 (const_value)
    $end         [reduce using rule 47 (const_value)]
    FUNCTION     reduce using rule 46 (const_value)
    FUNCTION     [reduce using rule 47 (const_value)]
    PROCEDURE    reduce using rule 46 (const_value)
    PROCEDURE    [reduce using rule 47 (const_value)]
    BBEGIN       reduce using rule 46 (const_value)
    BBEGIN       [reduce using rule 47 (const_value)]
    END          reduce using rule 46 (const_value)
    END          [reduce using rule 47 (const_value)]
    IDENT_NAME   reduce using rule 46 (const_value)
    IDENT_NAME   [reduce using rule 47 (const_value)]
    INTEGER      reduce using rule 46 (const_value)
    INTEGER      [reduce using rule 47 (const_value)]
    READ         reduce using rule 46 (const_value)
    READ         [reduce using rule 47 (const_value)]
    READLN       reduce using rule 46 (const_value)
    READLN       [reduce using rule 47 (const_value)]
    WRITE        reduce using rule 46 (const_value)
    WRITE        [reduce using rule 47 (const_value)]
    WRITELN      reduce using rule 46 (const_value)
    WRITELN      [reduce using rule 47 (const_value)]
    MEMORYREAD   reduce using rule 46 (const_value)
    MEMORYREAD   [reduce using rule 47 (const_value)]
    MEMORYWRITE  reduce using rule 46 (const_value)
    MEMORYWRITE  [reduce using rule 47 (const_value)]
    STACKREAD    reduce using rule 46 (const_value)
    STACKREAD    [reduce using rule 47 (const_value)]
    STACKWRITE   reduce using rule 46 (const_value)
    STACKWRITE   [reduce using rule 47 (const_value)]
    IF           reduce using rule 46 (const_value)
    IF           [reduce using rule 47 (const_value)]
    THEN         reduce using rule 46 (const_value)
    THEN         [reduce using rule 47 (const_value)]
    ELSE         reduce using rule 46 (const_value)
    ELSE         [reduce using rule 47 (const_value)]
    REPEAT       reduce using rule 46 (const_value)
    REPEAT       [reduce using rule 47 (const_value)]
    UNTIL        reduce using rule 46 (const_value)
    UNTIL        [reduce using rule 47 (const_value)]
    WHILE        reduce using rule 46 (const_value)
    WHILE        [reduce using rule 47 (const_value)]
    DO           reduce using rule 46 (const_value)
    DO           [reduce using rule 47 (const_value)]
    CASE         reduce using rule 46 (const_value)
    CASE         [reduce using rule 47 (const_value)]
    TO           reduce using rule 46 (const_value)
    TO           [reduce using rule 47 (const_value)]
    DOWNTO       reduce using rule 46 (const_value)
    DOWNTO       [reduce using rule 47 (const_value)]
    FOR          reduce using rule 46 (const_value)
    FOR          [reduce using rule 47 (const_value)]
    EQUAL        reduce using rule 46 (const_value)
    EQUAL        [reduce using rule 47 (const_value)]
    UNEQUAL      reduce using rule 46 (const_value)
    UNEQUAL      [reduce using rule 47 (const_value)]
    GE           reduce using rule 46 (const_value)
    GE           [reduce using rule 47 (const_value)]
    GT           reduce using rule 46 (const_value)
    GT           [reduce using rule 47 (const_value)]
    LE           reduce using rule 46 (const_value)
    LE           [reduce using rule 47 (const_value)]
    LT           reduce using rule 46 (const_value)
    LT           [reduce using rule 47 (const_value)]
    PLUS         reduce using rule 46 (const_value)
    PLUS         [reduce using rule 47 (const_value)]
    MINUS        reduce using rule 46 (const_value)
    MINUS        [reduce using rule 47 (const_value)]
    MUL          reduce using rule 46 (const_value)
    MUL          [reduce using rule 47 (const_value)]
    DIV          reduce using rule 46 (const_value)
    DIV          [reduce using rule 47 (const_value)]
    OR           reduce using rule 46 (const_value)
    OR           [reduce using rule 47 (const_value)]
    AND          reduce using rule 46 (const_value)
    AND          [reduce using rule 47 (const_value)]
    MOD          reduce using rule 46 (const_value)
    MOD          [reduce using rule 47 (const_value)]
    RB           reduce using rule 46 (const_value)
    RB           [reduce using rule 47 (const_value)]
    RP           reduce using rule 46 (const_value)
    RP           [reduce using rule 47 (const_value)]
    SEMICOLON    reduce using rule 46 (const_value)
    SEMICOLON    [reduce using rule 47 (const_value)]
    DOT          reduce using rule 46 (const_value)
    DOT          [reduce using rule 47 (const_value)]
    COMMA        reduce using rule 46 (const_value)
    COMMA        [reduce using rule 47 (const_value)]
    OF           reduce using rule 46 (const_value)
    OF           [reduce using rule 47 (const_value)]
    GOTO         reduce using rule 46 (const_value)
    GOTO         [reduce using rule 47 (const_value)]
    BREAK        reduce using rule 46 (const_value)
    BREAK        [reduce using rule 47 (const_value)]
    CONTINUE     reduce using rule 46 (const_value)
    CONTINUE     [reduce using rule 47 (const_value)]
    $default     reduce using rule 46 (const_value)


State 162

  144 factor: MINUS factor •

    $default  reduce using rule 144 (factor)


State 163

  143 factor: NOT factor •

    $default  reduce using rule 143 (factor)


State 164

  123 expression: expression • GE expr
  124           | expression • GT expr
  125           | expression • LE expr
  126           | expression • LT expr
  127           | expression • EQUAL expr
  128           | expression • UNEQUAL expr
  142 factor: LP expression • RP

    EQUAL    shift, and go to state 167
    UNEQUAL  shift, and go to state 168
    GE       shift, and go to state 169
    GT       shift, and go to state 170
    LE       shift, and go to state 171
    LT       shift, and go to state 172
    RP       shift, and go to state 222


State 165

  139 factor: identifier LP • args_list RP

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 93
    CHR         shift, and go to state 94
    ODD         shift, and go to state 95
    ORD         shift, and go to state 96
    PRED        shift, and go to state 97
    SUCC        shift, and go to state 98
    MINUS       shift, and go to state 99
    NOT         shift, and go to state 100
    LP          shift, and go to state 101

    const_value  go to state 102
    identifier   go to state 103
    args_list    go to state 223
    expression   go to state 148
    expr         go to state 105
    term         go to state 106
    factor       go to state 107
    lvalue       go to state 108


State 166

   95 if_stmt: IF expression THEN • stmt else_clause

    BBEGIN       shift, and go to state 16
    IDENT_NAME   shift, and go to state 10
    INTEGER      shift, and go to state 39
    READ         shift, and go to state 40
    READLN       shift, and go to state 41
    WRITE        shift, and go to state 42
    WRITELN      shift, and go to state 43
    MEMORYREAD   shift, and go to state 44
    MEMORYWRITE  shift, and go to state 45
    STACKREAD    shift, and go to state 46
    STACKWRITE   shift, and go to state 47
    IF           shift, and go to state 48
    REPEAT       shift, and go to state 49
    WHILE        shift, and go to state 50
    CASE         shift, and go to state 51
    FOR          shift, and go to state 52
    GOTO         shift, and go to state 53
    BREAK        shift, and go to state 54
    CONTINUE     shift, and go to state 55

    BBEGIN       [reduce using rule 100 (repeat_stmt)]
    IDENT_NAME   [reduce using rule 100 (repeat_stmt)]
    INTEGER      [reduce using rule 100 (repeat_stmt)]
    READ         [reduce using rule 100 (repeat_stmt)]
    READLN       [reduce using rule 100 (repeat_stmt)]
    WRITE        [reduce using rule 100 (repeat_stmt)]
    WRITELN      [reduce using rule 100 (repeat_stmt)]
    MEMORYREAD   [reduce using rule 100 (repeat_stmt)]
    MEMORYWRITE  [reduce using rule 100 (repeat_stmt)]
    STACKREAD    [reduce using rule 100 (repeat_stmt)]
    STACKWRITE   [reduce using rule 100 (repeat_stmt)]
    IF           [reduce using rule 100 (repeat_stmt)]
    REPEAT       [reduce using rule 100 (repeat_stmt)]
    WHILE        [reduce using rule 100 (repeat_stmt)]
    CASE         [reduce using rule 100 (repeat_stmt)]
    FOR          [reduce using rule 100 (repeat_stmt)]
    GOTO         [reduce using rule 100 (repeat_stmt)]
    BREAK        [reduce using rule 100 (repeat_stmt)]
    CONTINUE     [reduce using rule 100 (repeat_stmt)]
    $default     reduce using rule 100 (repeat_stmt)

    identifier     go to state 56
    compound_stmt  go to state 57
    stmt           go to state 224
    no_label_stmt  go to state 59
    assign_stmt    go to state 60
    goto_stmt      go to state 61
    if_stmt        go to state 62
    repeat_stmt    go to state 63
    while_stmt     go to state 64
    case_stmt      go to state 65
    for_stmt       go to state 66
    proc_stmt      go to state 67
    lvalue         go to state 68


State 167

  127 expression: expression EQUAL • expr

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 93
    CHR         shift, and go to state 94
    ODD         shift, and go to state 95
    ORD         shift, and go to state 96
    PRED        shift, and go to state 97
    SUCC        shift, and go to state 98
    MINUS       shift, and go to state 99
    NOT         shift, and go to state 100
    LP          shift, and go to state 101

    const_value  go to state 102
    identifier   go to state 103
    expr         go to state 225
    term         go to state 106
    factor       go to state 107
    lvalue       go to state 108


State 168

  128 expression: expression UNEQUAL • expr

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 93
    CHR         shift, and go to state 94
    ODD         shift, and go to state 95
    ORD         shift, and go to state 96
    PRED        shift, and go to state 97
    SUCC        shift, and go to state 98
    MINUS       shift, and go to state 99
    NOT         shift, and go to state 100
    LP          shift, and go to state 101

    const_value  go to state 102
    identifier   go to state 103
    expr         go to state 226
    term         go to state 106
    factor       go to state 107
    lvalue       go to state 108


State 169

  123 expression: expression GE • expr

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 93
    CHR         shift, and go to state 94
    ODD         shift, and go to state 95
    ORD         shift, and go to state 96
    PRED        shift, and go to state 97
    SUCC        shift, and go to state 98
    MINUS       shift, and go to state 99
    NOT         shift, and go to state 100
    LP          shift, and go to state 101

    const_value  go to state 102
    identifier   go to state 103
    expr         go to state 227
    term         go to state 106
    factor       go to state 107
    lvalue       go to state 108


State 170

  124 expression: expression GT • expr

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 93
    CHR         shift, and go to state 94
    ODD         shift, and go to state 95
    ORD         shift, and go to state 96
    PRED        shift, and go to state 97
    SUCC        shift, and go to state 98
    MINUS       shift, and go to state 99
    NOT         shift, and go to state 100
    LP          shift, and go to state 101

    const_value  go to state 102
    identifier   go to state 103
    expr         go to state 228
    term         go to state 106
    factor       go to state 107
    lvalue       go to state 108


State 171

  125 expression: expression LE • expr

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 93
    CHR         shift, and go to state 94
    ODD         shift, and go to state 95
    ORD         shift, and go to state 96
    PRED        shift, and go to state 97
    SUCC        shift, and go to state 98
    MINUS       shift, and go to state 99
    NOT         shift, and go to state 100
    LP          shift, and go to state 101

    const_value  go to state 102
    identifier   go to state 103
    expr         go to state 229
    term         go to state 106
    factor       go to state 107
    lvalue       go to state 108


State 172

  126 expression: expression LT • expr

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 93
    CHR         shift, and go to state 94
    ODD         shift, and go to state 95
    ORD         shift, and go to state 96
    PRED        shift, and go to state 97
    SUCC        shift, and go to state 98
    MINUS       shift, and go to state 99
    NOT         shift, and go to state 100
    LP          shift, and go to state 101

    const_value  go to state 102
    identifier   go to state 103
    expr         go to state 230
    term         go to state 106
    factor       go to state 107
    lvalue       go to state 108


State 173

   96 if_stmt: IF expression stmt • else_clause

    ELSE  shift, and go to state 231

    ELSE      [reduce using rule 97 (else_clause)]
    $default  reduce using rule 97 (else_clause)

    else_clause  go to state 232


State 174

  130 expr: expr PLUS • term

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 93
    CHR         shift, and go to state 94
    ODD         shift, and go to state 95
    ORD         shift, and go to state 96
    PRED        shift, and go to state 97
    SUCC        shift, and go to state 98
    MINUS       shift, and go to state 99
    NOT         shift, and go to state 100
    LP          shift, and go to state 101

    const_value  go to state 102
    identifier   go to state 103
    term         go to state 233
    factor       go to state 107
    lvalue       go to state 108


State 175

  131 expr: expr MINUS • term

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 93
    CHR         shift, and go to state 94
    ODD         shift, and go to state 95
    ORD         shift, and go to state 96
    PRED        shift, and go to state 97
    SUCC        shift, and go to state 98
    MINUS       shift, and go to state 99
    NOT         shift, and go to state 100
    LP          shift, and go to state 101

    const_value  go to state 102
    identifier   go to state 103
    term         go to state 234
    factor       go to state 107
    lvalue       go to state 108


State 176

  132 expr: expr OR • term

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 93
    CHR         shift, and go to state 94
    ODD         shift, and go to state 95
    ORD         shift, and go to state 96
    PRED        shift, and go to state 97
    SUCC        shift, and go to state 98
    MINUS       shift, and go to state 99
    NOT         shift, and go to state 100
    LP          shift, and go to state 101

    const_value  go to state 102
    identifier   go to state 103
    term         go to state 235
    factor       go to state 107
    lvalue       go to state 108


State 177

  134 term: term MUL • factor

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 93
    CHR         shift, and go to state 94
    ODD         shift, and go to state 95
    ORD         shift, and go to state 96
    PRED        shift, and go to state 97
    SUCC        shift, and go to state 98
    MINUS       shift, and go to state 99
    NOT         shift, and go to state 100
    LP          shift, and go to state 101

    const_value  go to state 102
    identifier   go to state 103
    factor       go to state 236
    lvalue       go to state 108


State 178

  135 term: term DIV • factor

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 93
    CHR         shift, and go to state 94
    ODD         shift, and go to state 95
    ORD         shift, and go to state 96
    PRED        shift, and go to state 97
    SUCC        shift, and go to state 98
    MINUS       shift, and go to state 99
    NOT         shift, and go to state 100
    LP          shift, and go to state 101

    const_value  go to state 102
    identifier   go to state 103
    factor       go to state 237
    lvalue       go to state 108


State 179

  137 term: term AND • factor

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 93
    CHR         shift, and go to state 94
    ODD         shift, and go to state 95
    ORD         shift, and go to state 96
    PRED        shift, and go to state 97
    SUCC        shift, and go to state 98
    MINUS       shift, and go to state 99
    NOT         shift, and go to state 100
    LP          shift, and go to state 101

    const_value  go to state 102
    identifier   go to state 103
    factor       go to state 238
    lvalue       go to state 108


State 180

  136 term: term MOD • factor

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 93
    CHR         shift, and go to state 94
    ODD         shift, and go to state 95
    ORD         shift, and go to state 96
    PRED        shift, and go to state 97
    SUCC        shift, and go to state 98
    MINUS       shift, and go to state 99
    NOT         shift, and go to state 100
    LP          shift, and go to state 101

    const_value  go to state 102
    identifier   go to state 103
    factor       go to state 239
    lvalue       go to state 108


State 181

   99 repeat_stmt: REPEAT stmt_list UNTIL • expression

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 93
    CHR         shift, and go to state 94
    ODD         shift, and go to state 95
    ORD         shift, and go to state 96
    PRED        shift, and go to state 97
    SUCC        shift, and go to state 98
    MINUS       shift, and go to state 99
    NOT         shift, and go to state 100
    LP          shift, and go to state 101

    const_value  go to state 102
    identifier   go to state 103
    expression   go to state 240
    expr         go to state 105
    term         go to state 106
    factor       go to state 107
    lvalue       go to state 108


State 182

  101 while_stmt: WHILE expression DO • stmt

    BBEGIN       shift, and go to state 16
    IDENT_NAME   shift, and go to state 10
    INTEGER      shift, and go to state 39
    READ         shift, and go to state 40
    READLN       shift, and go to state 41
    WRITE        shift, and go to state 42
    WRITELN      shift, and go to state 43
    MEMORYREAD   shift, and go to state 44
    MEMORYWRITE  shift, and go to state 45
    STACKREAD    shift, and go to state 46
    STACKWRITE   shift, and go to state 47
    IF           shift, and go to state 48
    REPEAT       shift, and go to state 49
    WHILE        shift, and go to state 50
    CASE         shift, and go to state 51
    FOR          shift, and go to state 52
    GOTO         shift, and go to state 53
    BREAK        shift, and go to state 54
    CONTINUE     shift, and go to state 55

    BBEGIN       [reduce using rule 100 (repeat_stmt)]
    IDENT_NAME   [reduce using rule 100 (repeat_stmt)]
    INTEGER      [reduce using rule 100 (repeat_stmt)]
    READ         [reduce using rule 100 (repeat_stmt)]
    READLN       [reduce using rule 100 (repeat_stmt)]
    WRITE        [reduce using rule 100 (repeat_stmt)]
    WRITELN      [reduce using rule 100 (repeat_stmt)]
    MEMORYREAD   [reduce using rule 100 (repeat_stmt)]
    MEMORYWRITE  [reduce using rule 100 (repeat_stmt)]
    STACKREAD    [reduce using rule 100 (repeat_stmt)]
    STACKWRITE   [reduce using rule 100 (repeat_stmt)]
    IF           [reduce using rule 100 (repeat_stmt)]
    REPEAT       [reduce using rule 100 (repeat_stmt)]
    WHILE        [reduce using rule 100 (repeat_stmt)]
    CASE         [reduce using rule 100 (repeat_stmt)]
    FOR          [reduce using rule 100 (repeat_stmt)]
    GOTO         [reduce using rule 100 (repeat_stmt)]
    BREAK        [reduce using rule 100 (repeat_stmt)]
    CONTINUE     [reduce using rule 100 (repeat_stmt)]
    $default     reduce using rule 100 (repeat_stmt)

    identifier     go to state 56
    compound_stmt  go to state 57
    stmt           go to state 241
    no_label_stmt  go to state 59
    assign_stmt    go to state 60
    goto_stmt      go to state 61
    if_stmt        go to state 62
    repeat_stmt    go to state 63
    while_stmt     go to state 64
    case_stmt      go to state 65
    for_stmt       go to state 66
    proc_stmt      go to state 67
    lvalue         go to state 68


State 183

  102 case_stmt: CASE expression OF • case_expr_list END

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    MINUS       shift, and go to state 36
    OTHERWISE   shift, and go to state 242

    const_value     go to state 243
    identifier      go to state 244
    case_expr_list  go to state 245
    case_expr       go to state 246


State 184

  108 for_stmt: FOR identifier ASSIGN • expression TO expression DO stmt
  109         | FOR identifier ASSIGN • expression DOWNTO expression DO stmt

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 93
    CHR         shift, and go to state 94
    ODD         shift, and go to state 95
    ORD         shift, and go to state 96
    PRED        shift, and go to state 97
    SUCC        shift, and go to state 98
    MINUS       shift, and go to state 99
    NOT         shift, and go to state 100
    LP          shift, and go to state 101

    const_value  go to state 102
    identifier   go to state 103
    expression   go to state 247
    expr         go to state 105
    term         go to state 106
    factor       go to state 107
    lvalue       go to state 108


State 185

  123 expression: expression • GE expr
  124           | expression • GT expr
  125           | expression • LE expr
  126           | expression • LT expr
  127           | expression • EQUAL expr
  128           | expression • UNEQUAL expr
  152 lvalue: identifier LB expression • RB

    EQUAL    shift, and go to state 167
    UNEQUAL  shift, and go to state 168
    GE       shift, and go to state 169
    GT       shift, and go to state 170
    LE       shift, and go to state 171
    LT       shift, and go to state 172
    RB       shift, and go to state 248


State 186

  111 proc_stmt: identifier LP args_list • RP
  121 args_list: args_list • COMMA expression

    RP     shift, and go to state 249
    COMMA  shift, and go to state 210


State 187

  154 lvalue: identifier DOT identifier •

    $default  reduce using rule 154 (lvalue)


State 188

   93 assign_stmt: lvalue ASSIGN expression •
  123 expression: expression • GE expr
  124           | expression • GT expr
  125           | expression • LE expr
  126           | expression • LT expr
  127           | expression • EQUAL expr
  128           | expression • UNEQUAL expr

    EQUAL    shift, and go to state 167
    UNEQUAL  shift, and go to state 168
    GE       shift, and go to state 169
    GT       shift, and go to state 170
    LE       shift, and go to state 171
    LT       shift, and go to state 172

    $default  reduce using rule 93 (assign_stmt)


State 189

  123 expression: expression • GE expr
  124           | expression • GT expr
  125           | expression • LE expr
  126           | expression • LT expr
  127           | expression • EQUAL expr
  128           | expression • UNEQUAL expr
  153 lvalue: lvalue LB expression • RB

    EQUAL    shift, and go to state 167
    UNEQUAL  shift, and go to state 168
    GE       shift, and go to state 169
    GT       shift, and go to state 170
    LE       shift, and go to state 171
    LT       shift, and go to state 172
    RB       shift, and go to state 250


State 190

  155 lvalue: lvalue DOT identifier •

    $default  reduce using rule 155 (lvalue)


State 191

   64 simple_type: LP name_list • RP
   71 name_list: name_list • COMMA identifier

    RP     shift, and go to state 251
    COMMA  shift, and go to state 135


State 192

   62 array_type_decl: ARRAY LB • simple_type RB OF type_decl

    IDENT_NAME     shift, and go to state 10
    INTEGER        shift, and go to state 30
    CHAR           shift, and go to state 31
    STRING         shift, and go to state 32
    TRUE           shift, and go to state 33
    FALSE          shift, and go to state 34
    MAXINT         shift, and go to state 35
    MINUS          shift, and go to state 36
    LP             shift, and go to state 121
    INT_TYPE       shift, and go to state 122
    UNSIGNED_TYPE  shift, and go to state 123
    BOOL_TYPE      shift, and go to state 124
    CHAR_TYPE      shift, and go to state 125

    const_value  go to state 128
    simple_type  go to state 252
    identifier   go to state 133


State 193

   57 record_type_decl: RECORD field_decl_list • END
   58 field_decl_list: field_decl_list • field_decl

    END         shift, and go to state 253
    IDENT_NAME  shift, and go to state 10

    field_decl  go to state 254
    name_list   go to state 195
    identifier  go to state 74


State 194

   59 field_decl_list: field_decl •

    $default  reduce using rule 59 (field_decl_list)


State 195

   60 field_decl: name_list • COLON type_decl SEMICOLON
   61           | name_list • COLON type_decl
   71 name_list: name_list • COMMA identifier

    COMMA  shift, and go to state 135
    COLON  shift, and go to state 255


State 196

   65 simple_type: const_value DOUBLEDOT • const_value

    INTEGER  shift, and go to state 30
    CHAR     shift, and go to state 31
    STRING   shift, and go to state 32
    TRUE     shift, and go to state 33
    FALSE    shift, and go to state 34
    MAXINT   shift, and go to state 35
    MINUS    shift, and go to state 36

    const_value  go to state 256


State 197

   52 type_def: identifier EQUAL type_decl SEMICOLON •

    $default  reduce using rule 52 (type_def)


State 198

   66 simple_type: identifier DOUBLEDOT • identifier

    IDENT_NAME  shift, and go to state 10

    identifier  go to state 257


State 199

   71 name_list: name_list COMMA identifier •

    $default  reduce using rule 71 (name_list)


State 200

   32 var_decl: name_list COLON type_decl • SEMICOLON
   33         | name_list COLON type_decl •

    SEMICOLON  shift, and go to state 258

    $default  reduce using rule 33 (var_decl)


State 201

   23 params: LP • params_decl RP

    VAR         shift, and go to state 259
    IDENT_NAME  shift, and go to state 10

    params_decl  go to state 260
    params_type  go to state 261
    name_list    go to state 262
    identifier   go to state 74


State 202

   16 fun_head: FUNCTION IDENT_NAME params • COLON simple_type

    COLON  shift, and go to state 263


State 203

   21 proc_head: PROCEDURE IDENT_NAME params •

    $default  reduce using rule 21 (proc_head)


State 204

   12 fun_decl: fun_head SEMICOLON routine • SEMICOLON
   13         | fun_head SEMICOLON routine •

    SEMICOLON  shift, and go to state 264

    $default  reduce using rule 13 (fun_decl)


State 205

   14 fun_decl: fun_head routine SEMICOLON •

    $default  reduce using rule 14 (fun_decl)


State 206

   17 proc_decl: proc_head SEMICOLON routine • SEMICOLON
   19          | proc_head SEMICOLON routine •

    SEMICOLON  shift, and go to state 265

    $default  reduce using rule 19 (proc_decl)


State 207

   18 proc_decl: proc_head routine SEMICOLON •

    $default  reduce using rule 18 (proc_decl)


State 208

  112 proc_stmt: READ LP factor RP •

    $default  reduce using rule 112 (proc_stmt)


State 209

  114 proc_stmt: WRITE LP args_list RP •

    $default  reduce using rule 114 (proc_stmt)


State 210

  121 args_list: args_list COMMA • expression

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 93
    CHR         shift, and go to state 94
    ODD         shift, and go to state 95
    ORD         shift, and go to state 96
    PRED        shift, and go to state 97
    SUCC        shift, and go to state 98
    MINUS       shift, and go to state 99
    NOT         shift, and go to state 100
    LP          shift, and go to state 101

    const_value  go to state 102
    identifier   go to state 103
    expression   go to state 266
    expr         go to state 105
    term         go to state 106
    factor       go to state 107
    lvalue       go to state 108


State 211

  116 proc_stmt: WRITELN LP args_list RP •

    $default  reduce using rule 116 (proc_stmt)


State 212

  117 proc_stmt: MEMORYREAD LP args_list RP •

    $default  reduce using rule 117 (proc_stmt)


State 213

  118 proc_stmt: MEMORYWRITE LP args_list RP •

    $default  reduce using rule 118 (proc_stmt)


State 214

  119 proc_stmt: STACKREAD LP args_list RP •

    $default  reduce using rule 119 (proc_stmt)


State 215

  120 proc_stmt: STACKWRITE LP args_list RP •

    $default  reduce using rule 120 (proc_stmt)


State 216

  121 args_list: args_list • COMMA expression
  145 factor: ABS LP args_list • RP

    RP     shift, and go to state 267
    COMMA  shift, and go to state 210


State 217

  121 args_list: args_list • COMMA expression
  146 factor: CHR LP args_list • RP

    RP     shift, and go to state 268
    COMMA  shift, and go to state 210


State 218

  121 args_list: args_list • COMMA expression
  147 factor: ODD LP args_list • RP

    RP     shift, and go to state 269
    COMMA  shift, and go to state 210


State 219

  121 args_list: args_list • COMMA expression
  148 factor: ORD LP args_list • RP

    RP     shift, and go to state 270
    COMMA  shift, and go to state 210


State 220

  121 args_list: args_list • COMMA expression
  149 factor: PRED LP args_list • RP

    RP     shift, and go to state 271
    COMMA  shift, and go to state 210


State 221

  121 args_list: args_list • COMMA expression
  150 factor: SUCC LP args_list • RP

    RP     shift, and go to state 272
    COMMA  shift, and go to state 210


State 222

  142 factor: LP expression RP •

    $default  reduce using rule 142 (factor)


State 223

  121 args_list: args_list • COMMA expression
  139 factor: identifier LP args_list • RP

    RP     shift, and go to state 273
    COMMA  shift, and go to state 210


State 224

   95 if_stmt: IF expression THEN stmt • else_clause

    ELSE  shift, and go to state 231

    ELSE      [reduce using rule 97 (else_clause)]
    $default  reduce using rule 97 (else_clause)

    else_clause  go to state 274


State 225

  127 expression: expression EQUAL expr •
  130 expr: expr • PLUS term
  131     | expr • MINUS term
  132     | expr • OR term

    PLUS   shift, and go to state 174
    MINUS  shift, and go to state 175
    OR     shift, and go to state 176

    $default  reduce using rule 127 (expression)


State 226

  128 expression: expression UNEQUAL expr •
  130 expr: expr • PLUS term
  131     | expr • MINUS term
  132     | expr • OR term

    PLUS   shift, and go to state 174
    MINUS  shift, and go to state 175
    OR     shift, and go to state 176

    $default  reduce using rule 128 (expression)


State 227

  123 expression: expression GE expr •
  130 expr: expr • PLUS term
  131     | expr • MINUS term
  132     | expr • OR term

    PLUS   shift, and go to state 174
    MINUS  shift, and go to state 175
    OR     shift, and go to state 176

    $default  reduce using rule 123 (expression)


State 228

  124 expression: expression GT expr •
  130 expr: expr • PLUS term
  131     | expr • MINUS term
  132     | expr • OR term

    PLUS   shift, and go to state 174
    MINUS  shift, and go to state 175
    OR     shift, and go to state 176

    $default  reduce using rule 124 (expression)


State 229

  125 expression: expression LE expr •
  130 expr: expr • PLUS term
  131     | expr • MINUS term
  132     | expr • OR term

    PLUS   shift, and go to state 174
    MINUS  shift, and go to state 175
    OR     shift, and go to state 176

    $default  reduce using rule 125 (expression)


State 230

  126 expression: expression LT expr •
  130 expr: expr • PLUS term
  131     | expr • MINUS term
  132     | expr • OR term

    PLUS   shift, and go to state 174
    MINUS  shift, and go to state 175
    OR     shift, and go to state 176

    $default  reduce using rule 126 (expression)


State 231

   98 else_clause: ELSE • stmt

    BBEGIN       shift, and go to state 16
    IDENT_NAME   shift, and go to state 10
    INTEGER      shift, and go to state 39
    READ         shift, and go to state 40
    READLN       shift, and go to state 41
    WRITE        shift, and go to state 42
    WRITELN      shift, and go to state 43
    MEMORYREAD   shift, and go to state 44
    MEMORYWRITE  shift, and go to state 45
    STACKREAD    shift, and go to state 46
    STACKWRITE   shift, and go to state 47
    IF           shift, and go to state 48
    REPEAT       shift, and go to state 49
    WHILE        shift, and go to state 50
    CASE         shift, and go to state 51
    FOR          shift, and go to state 52
    GOTO         shift, and go to state 53
    BREAK        shift, and go to state 54
    CONTINUE     shift, and go to state 55

    BBEGIN       [reduce using rule 100 (repeat_stmt)]
    IDENT_NAME   [reduce using rule 100 (repeat_stmt)]
    INTEGER      [reduce using rule 100 (repeat_stmt)]
    READ         [reduce using rule 100 (repeat_stmt)]
    READLN       [reduce using rule 100 (repeat_stmt)]
    WRITE        [reduce using rule 100 (repeat_stmt)]
    WRITELN      [reduce using rule 100 (repeat_stmt)]
    MEMORYREAD   [reduce using rule 100 (repeat_stmt)]
    MEMORYWRITE  [reduce using rule 100 (repeat_stmt)]
    STACKREAD    [reduce using rule 100 (repeat_stmt)]
    STACKWRITE   [reduce using rule 100 (repeat_stmt)]
    IF           [reduce using rule 100 (repeat_stmt)]
    REPEAT       [reduce using rule 100 (repeat_stmt)]
    WHILE        [reduce using rule 100 (repeat_stmt)]
    CASE         [reduce using rule 100 (repeat_stmt)]
    FOR          [reduce using rule 100 (repeat_stmt)]
    GOTO         [reduce using rule 100 (repeat_stmt)]
    BREAK        [reduce using rule 100 (repeat_stmt)]
    CONTINUE     [reduce using rule 100 (repeat_stmt)]
    $default     reduce using rule 100 (repeat_stmt)

    identifier     go to state 56
    compound_stmt  go to state 57
    stmt           go to state 275
    no_label_stmt  go to state 59
    assign_stmt    go to state 60
    goto_stmt      go to state 61
    if_stmt        go to state 62
    repeat_stmt    go to state 63
    while_stmt     go to state 64
    case_stmt      go to state 65
    for_stmt       go to state 66
    proc_stmt      go to state 67
    lvalue         go to state 68


State 232

   96 if_stmt: IF expression stmt else_clause •

    $default  reduce using rule 96 (if_stmt)


State 233

  130 expr: expr PLUS term •
  134 term: term • MUL factor
  135     | term • DIV factor
  136     | term • MOD factor
  137     | term • AND factor

    MUL  shift, and go to state 177
    DIV  shift, and go to state 178
    AND  shift, and go to state 179
    MOD  shift, and go to state 180

    $default  reduce using rule 130 (expr)


State 234

  131 expr: expr MINUS term •
  134 term: term • MUL factor
  135     | term • DIV factor
  136     | term • MOD factor
  137     | term • AND factor

    MUL  shift, and go to state 177
    DIV  shift, and go to state 178
    AND  shift, and go to state 179
    MOD  shift, and go to state 180

    $default  reduce using rule 131 (expr)


State 235

  132 expr: expr OR term •
  134 term: term • MUL factor
  135     | term • DIV factor
  136     | term • MOD factor
  137     | term • AND factor

    MUL  shift, and go to state 177
    DIV  shift, and go to state 178
    AND  shift, and go to state 179
    MOD  shift, and go to state 180

    $default  reduce using rule 132 (expr)


State 236

  134 term: term MUL factor •

    $default  reduce using rule 134 (term)


State 237

  135 term: term DIV factor •

    $default  reduce using rule 135 (term)


State 238

  137 term: term AND factor •

    $default  reduce using rule 137 (term)


State 239

  136 term: term MOD factor •

    $default  reduce using rule 136 (term)


State 240

   99 repeat_stmt: REPEAT stmt_list UNTIL expression •
  123 expression: expression • GE expr
  124           | expression • GT expr
  125           | expression • LE expr
  126           | expression • LT expr
  127           | expression • EQUAL expr
  128           | expression • UNEQUAL expr

    EQUAL    shift, and go to state 167
    UNEQUAL  shift, and go to state 168
    GE       shift, and go to state 169
    GT       shift, and go to state 170
    LE       shift, and go to state 171
    LT       shift, and go to state 172

    $default  reduce using rule 99 (repeat_stmt)


State 241

  101 while_stmt: WHILE expression DO stmt •

    $default  reduce using rule 101 (while_stmt)


State 242

  107 case_expr: OTHERWISE • stmt SEMICOLON

    BBEGIN       shift, and go to state 16
    IDENT_NAME   shift, and go to state 10
    INTEGER      shift, and go to state 39
    READ         shift, and go to state 40
    READLN       shift, and go to state 41
    WRITE        shift, and go to state 42
    WRITELN      shift, and go to state 43
    MEMORYREAD   shift, and go to state 44
    MEMORYWRITE  shift, and go to state 45
    STACKREAD    shift, and go to state 46
    STACKWRITE   shift, and go to state 47
    IF           shift, and go to state 48
    REPEAT       shift, and go to state 49
    WHILE        shift, and go to state 50
    CASE         shift, and go to state 51
    FOR          shift, and go to state 52
    GOTO         shift, and go to state 53
    BREAK        shift, and go to state 54
    CONTINUE     shift, and go to state 55

    $default  reduce using rule 100 (repeat_stmt)

    identifier     go to state 56
    compound_stmt  go to state 57
    stmt           go to state 276
    no_label_stmt  go to state 59
    assign_stmt    go to state 60
    goto_stmt      go to state 61
    if_stmt        go to state 62
    repeat_stmt    go to state 63
    while_stmt     go to state 64
    case_stmt      go to state 65
    for_stmt       go to state 66
    proc_stmt      go to state 67
    lvalue         go to state 68


State 243

  105 case_expr: const_value • COLON stmt SEMICOLON

    COLON  shift, and go to state 277


State 244

  106 case_expr: identifier • COLON stmt SEMICOLON

    COLON  shift, and go to state 278


State 245

  102 case_stmt: CASE expression OF case_expr_list • END
  103 case_expr_list: case_expr_list • case_expr

    END         shift, and go to state 279
    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    MINUS       shift, and go to state 36
    OTHERWISE   shift, and go to state 242

    const_value  go to state 243
    identifier   go to state 244
    case_expr    go to state 280


State 246

  104 case_expr_list: case_expr •

    $default  reduce using rule 104 (case_expr_list)


State 247

  108 for_stmt: FOR identifier ASSIGN expression • TO expression DO stmt
  109         | FOR identifier ASSIGN expression • DOWNTO expression DO stmt
  123 expression: expression • GE expr
  124           | expression • GT expr
  125           | expression • LE expr
  126           | expression • LT expr
  127           | expression • EQUAL expr
  128           | expression • UNEQUAL expr

    TO       shift, and go to state 281
    DOWNTO   shift, and go to state 282
    EQUAL    shift, and go to state 167
    UNEQUAL  shift, and go to state 168
    GE       shift, and go to state 169
    GT       shift, and go to state 170
    LE       shift, and go to state 171
    LT       shift, and go to state 172


State 248

  152 lvalue: identifier LB expression RB •

    $default  reduce using rule 152 (lvalue)


State 249

  111 proc_stmt: identifier LP args_list RP •

    $default  reduce using rule 111 (proc_stmt)


State 250

  153 lvalue: lvalue LB expression RB •

    $default  reduce using rule 153 (lvalue)


State 251

   64 simple_type: LP name_list RP •

    $default  reduce using rule 64 (simple_type)


State 252

   62 array_type_decl: ARRAY LB simple_type • RB OF type_decl

    RB  shift, and go to state 283


State 253

   57 record_type_decl: RECORD field_decl_list END •

    $default  reduce using rule 57 (record_type_decl)


State 254

   58 field_decl_list: field_decl_list field_decl •

    $default  reduce using rule 58 (field_decl_list)


State 255

   60 field_decl: name_list COLON • type_decl SEMICOLON
   61           | name_list COLON • type_decl

    IDENT_NAME     shift, and go to state 10
    INTEGER        shift, and go to state 30
    CHAR           shift, and go to state 31
    STRING         shift, and go to state 32
    TRUE           shift, and go to state 33
    FALSE          shift, and go to state 34
    MAXINT         shift, and go to state 35
    MINUS          shift, and go to state 36
    LP             shift, and go to state 121
    INT_TYPE       shift, and go to state 122
    UNSIGNED_TYPE  shift, and go to state 123
    BOOL_TYPE      shift, and go to state 124
    CHAR_TYPE      shift, and go to state 125
    ARRAY          shift, and go to state 126
    RECORD         shift, and go to state 127

    const_value       go to state 128
    type_decl         go to state 284
    record_type_decl  go to state 130
    array_type_decl   go to state 131
    simple_type       go to state 132
    identifier        go to state 133


State 256

   65 simple_type: const_value DOUBLEDOT const_value •

    $default  reduce using rule 65 (simple_type)


State 257

   66 simple_type: identifier DOUBLEDOT identifier •

    $default  reduce using rule 66 (simple_type)


State 258

   32 var_decl: name_list COLON type_decl SEMICOLON •

    $default  reduce using rule 32 (var_decl)


State 259

   26 params_type: VAR • name_list COLON simple_type

    IDENT_NAME  shift, and go to state 10

    name_list   go to state 285
    identifier  go to state 74


State 260

   23 params: LP params_decl • RP
   24 params_decl: params_decl • SEMICOLON params_type

    RP         shift, and go to state 286
    SEMICOLON  shift, and go to state 287


State 261

   25 params_decl: params_type •

    $default  reduce using rule 25 (params_decl)


State 262

   27 params_type: name_list • COLON simple_type
   71 name_list: name_list • COMMA identifier

    COMMA  shift, and go to state 135
    COLON  shift, and go to state 288


State 263

   16 fun_head: FUNCTION IDENT_NAME params COLON • simple_type

    IDENT_NAME     shift, and go to state 10
    INTEGER        shift, and go to state 30
    CHAR           shift, and go to state 31
    STRING         shift, and go to state 32
    TRUE           shift, and go to state 33
    FALSE          shift, and go to state 34
    MAXINT         shift, and go to state 35
    MINUS          shift, and go to state 36
    LP             shift, and go to state 121
    INT_TYPE       shift, and go to state 122
    UNSIGNED_TYPE  shift, and go to state 123
    BOOL_TYPE      shift, and go to state 124
    CHAR_TYPE      shift, and go to state 125

    const_value  go to state 128
    simple_type  go to state 289
    identifier   go to state 133


State 264

   12 fun_decl: fun_head SEMICOLON routine SEMICOLON •

    $default  reduce using rule 12 (fun_decl)


State 265

   17 proc_decl: proc_head SEMICOLON routine SEMICOLON •

    $default  reduce using rule 17 (proc_decl)


State 266

  121 args_list: args_list COMMA expression •
  123 expression: expression • GE expr
  124           | expression • GT expr
  125           | expression • LE expr
  126           | expression • LT expr
  127           | expression • EQUAL expr
  128           | expression • UNEQUAL expr

    EQUAL    shift, and go to state 167
    UNEQUAL  shift, and go to state 168
    GE       shift, and go to state 169
    GT       shift, and go to state 170
    LE       shift, and go to state 171
    LT       shift, and go to state 172

    $default  reduce using rule 121 (args_list)


State 267

  145 factor: ABS LP args_list RP •

    $default  reduce using rule 145 (factor)


State 268

  146 factor: CHR LP args_list RP •

    $default  reduce using rule 146 (factor)


State 269

  147 factor: ODD LP args_list RP •

    $default  reduce using rule 147 (factor)


State 270

  148 factor: ORD LP args_list RP •

    $default  reduce using rule 148 (factor)


State 271

  149 factor: PRED LP args_list RP •

    $default  reduce using rule 149 (factor)


State 272

  150 factor: SUCC LP args_list RP •

    $default  reduce using rule 150 (factor)


State 273

  139 factor: identifier LP args_list RP •

    $default  reduce using rule 139 (factor)


State 274

   95 if_stmt: IF expression THEN stmt else_clause •

    $default  reduce using rule 95 (if_stmt)


State 275

   98 else_clause: ELSE stmt •

    $default  reduce using rule 98 (else_clause)


State 276

  107 case_expr: OTHERWISE stmt • SEMICOLON

    SEMICOLON  shift, and go to state 290


State 277

  105 case_expr: const_value COLON • stmt SEMICOLON

    BBEGIN       shift, and go to state 16
    IDENT_NAME   shift, and go to state 10
    INTEGER      shift, and go to state 39
    READ         shift, and go to state 40
    READLN       shift, and go to state 41
    WRITE        shift, and go to state 42
    WRITELN      shift, and go to state 43
    MEMORYREAD   shift, and go to state 44
    MEMORYWRITE  shift, and go to state 45
    STACKREAD    shift, and go to state 46
    STACKWRITE   shift, and go to state 47
    IF           shift, and go to state 48
    REPEAT       shift, and go to state 49
    WHILE        shift, and go to state 50
    CASE         shift, and go to state 51
    FOR          shift, and go to state 52
    GOTO         shift, and go to state 53
    BREAK        shift, and go to state 54
    CONTINUE     shift, and go to state 55

    $default  reduce using rule 100 (repeat_stmt)

    identifier     go to state 56
    compound_stmt  go to state 57
    stmt           go to state 291
    no_label_stmt  go to state 59
    assign_stmt    go to state 60
    goto_stmt      go to state 61
    if_stmt        go to state 62
    repeat_stmt    go to state 63
    while_stmt     go to state 64
    case_stmt      go to state 65
    for_stmt       go to state 66
    proc_stmt      go to state 67
    lvalue         go to state 68


State 278

  106 case_expr: identifier COLON • stmt SEMICOLON

    BBEGIN       shift, and go to state 16
    IDENT_NAME   shift, and go to state 10
    INTEGER      shift, and go to state 39
    READ         shift, and go to state 40
    READLN       shift, and go to state 41
    WRITE        shift, and go to state 42
    WRITELN      shift, and go to state 43
    MEMORYREAD   shift, and go to state 44
    MEMORYWRITE  shift, and go to state 45
    STACKREAD    shift, and go to state 46
    STACKWRITE   shift, and go to state 47
    IF           shift, and go to state 48
    REPEAT       shift, and go to state 49
    WHILE        shift, and go to state 50
    CASE         shift, and go to state 51
    FOR          shift, and go to state 52
    GOTO         shift, and go to state 53
    BREAK        shift, and go to state 54
    CONTINUE     shift, and go to state 55

    $default  reduce using rule 100 (repeat_stmt)

    identifier     go to state 56
    compound_stmt  go to state 57
    stmt           go to state 292
    no_label_stmt  go to state 59
    assign_stmt    go to state 60
    goto_stmt      go to state 61
    if_stmt        go to state 62
    repeat_stmt    go to state 63
    while_stmt     go to state 64
    case_stmt      go to state 65
    for_stmt       go to state 66
    proc_stmt      go to state 67
    lvalue         go to state 68


State 279

  102 case_stmt: CASE expression OF case_expr_list END •

    $default  reduce using rule 102 (case_stmt)


State 280

  103 case_expr_list: case_expr_list case_expr •

    $default  reduce using rule 103 (case_expr_list)


State 281

  108 for_stmt: FOR identifier ASSIGN expression TO • expression DO stmt

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 93
    CHR         shift, and go to state 94
    ODD         shift, and go to state 95
    ORD         shift, and go to state 96
    PRED        shift, and go to state 97
    SUCC        shift, and go to state 98
    MINUS       shift, and go to state 99
    NOT         shift, and go to state 100
    LP          shift, and go to state 101

    const_value  go to state 102
    identifier   go to state 103
    expression   go to state 293
    expr         go to state 105
    term         go to state 106
    factor       go to state 107
    lvalue       go to state 108


State 282

  109 for_stmt: FOR identifier ASSIGN expression DOWNTO • expression DO stmt

    IDENT_NAME  shift, and go to state 10
    INTEGER     shift, and go to state 30
    CHAR        shift, and go to state 31
    STRING      shift, and go to state 32
    TRUE        shift, and go to state 33
    FALSE       shift, and go to state 34
    MAXINT      shift, and go to state 35
    ABS         shift, and go to state 93
    CHR         shift, and go to state 94
    ODD         shift, and go to state 95
    ORD         shift, and go to state 96
    PRED        shift, and go to state 97
    SUCC        shift, and go to state 98
    MINUS       shift, and go to state 99
    NOT         shift, and go to state 100
    LP          shift, and go to state 101

    const_value  go to state 102
    identifier   go to state 103
    expression   go to state 294
    expr         go to state 105
    term         go to state 106
    factor       go to state 107
    lvalue       go to state 108


State 283

   62 array_type_decl: ARRAY LB simple_type RB • OF type_decl

    OF  shift, and go to state 295


State 284

   60 field_decl: name_list COLON type_decl • SEMICOLON
   61           | name_list COLON type_decl •

    SEMICOLON  shift, and go to state 296

    $default  reduce using rule 61 (field_decl)


State 285

   26 params_type: VAR name_list • COLON simple_type
   71 name_list: name_list • COMMA identifier

    COMMA  shift, and go to state 135
    COLON  shift, and go to state 297


State 286

   23 params: LP params_decl RP •

    $default  reduce using rule 23 (params)


State 287

   24 params_decl: params_decl SEMICOLON • params_type

    VAR         shift, and go to state 259
    IDENT_NAME  shift, and go to state 10

    params_type  go to state 298
    name_list    go to state 262
    identifier   go to state 74


State 288

   27 params_type: name_list COLON • simple_type

    IDENT_NAME     shift, and go to state 10
    INTEGER        shift, and go to state 30
    CHAR           shift, and go to state 31
    STRING         shift, and go to state 32
    TRUE           shift, and go to state 33
    FALSE          shift, and go to state 34
    MAXINT         shift, and go to state 35
    MINUS          shift, and go to state 36
    LP             shift, and go to state 121
    INT_TYPE       shift, and go to state 122
    UNSIGNED_TYPE  shift, and go to state 123
    BOOL_TYPE      shift, and go to state 124
    CHAR_TYPE      shift, and go to state 125

    const_value  go to state 128
    simple_type  go to state 299
    identifier   go to state 133


State 289

   16 fun_head: FUNCTION IDENT_NAME params COLON simple_type •

    $default  reduce using rule 16 (fun_head)


State 290

  107 case_expr: OTHERWISE stmt SEMICOLON •

    $default  reduce using rule 107 (case_expr)


State 291

  105 case_expr: const_value COLON stmt • SEMICOLON

    SEMICOLON  shift, and go to state 300


State 292

  106 case_expr: identifier COLON stmt • SEMICOLON

    SEMICOLON  shift, and go to state 301


State 293

  108 for_stmt: FOR identifier ASSIGN expression TO expression • DO stmt
  123 expression: expression • GE expr
  124           | expression • GT expr
  125           | expression • LE expr
  126           | expression • LT expr
  127           | expression • EQUAL expr
  128           | expression • UNEQUAL expr

    DO       shift, and go to state 302
    EQUAL    shift, and go to state 167
    UNEQUAL  shift, and go to state 168
    GE       shift, and go to state 169
    GT       shift, and go to state 170
    LE       shift, and go to state 171
    LT       shift, and go to state 172


State 294

  109 for_stmt: FOR identifier ASSIGN expression DOWNTO expression • DO stmt
  123 expression: expression • GE expr
  124           | expression • GT expr
  125           | expression • LE expr
  126           | expression • LT expr
  127           | expression • EQUAL expr
  128           | expression • UNEQUAL expr

    DO       shift, and go to state 303
    EQUAL    shift, and go to state 167
    UNEQUAL  shift, and go to state 168
    GE       shift, and go to state 169
    GT       shift, and go to state 170
    LE       shift, and go to state 171
    LT       shift, and go to state 172


State 295

   62 array_type_decl: ARRAY LB simple_type RB OF • type_decl

    IDENT_NAME     shift, and go to state 10
    INTEGER        shift, and go to state 30
    CHAR           shift, and go to state 31
    STRING         shift, and go to state 32
    TRUE           shift, and go to state 33
    FALSE          shift, and go to state 34
    MAXINT         shift, and go to state 35
    MINUS          shift, and go to state 36
    LP             shift, and go to state 121
    INT_TYPE       shift, and go to state 122
    UNSIGNED_TYPE  shift, and go to state 123
    BOOL_TYPE      shift, and go to state 124
    CHAR_TYPE      shift, and go to state 125
    ARRAY          shift, and go to state 126
    RECORD         shift, and go to state 127

    const_value       go to state 128
    type_decl         go to state 304
    record_type_decl  go to state 130
    array_type_decl   go to state 131
    simple_type       go to state 132
    identifier        go to state 133


State 296

   60 field_decl: name_list COLON type_decl SEMICOLON •

    $default  reduce using rule 60 (field_decl)


State 297

   26 params_type: VAR name_list COLON • simple_type

    IDENT_NAME     shift, and go to state 10
    INTEGER        shift, and go to state 30
    CHAR           shift, and go to state 31
    STRING         shift, and go to state 32
    TRUE           shift, and go to state 33
    FALSE          shift, and go to state 34
    MAXINT         shift, and go to state 35
    MINUS          shift, and go to state 36
    LP             shift, and go to state 121
    INT_TYPE       shift, and go to state 122
    UNSIGNED_TYPE  shift, and go to state 123
    BOOL_TYPE      shift, and go to state 124
    CHAR_TYPE      shift, and go to state 125

    const_value  go to state 128
    simple_type  go to state 305
    identifier   go to state 133


State 298

   24 params_decl: params_decl SEMICOLON params_type •

    $default  reduce using rule 24 (params_decl)


State 299

   27 params_type: name_list COLON simple_type •

    $default  reduce using rule 27 (params_type)


State 300

  105 case_expr: const_value COLON stmt SEMICOLON •

    $default  reduce using rule 105 (case_expr)


State 301

  106 case_expr: identifier COLON stmt SEMICOLON •

    $default  reduce using rule 106 (case_expr)


State 302

  108 for_stmt: FOR identifier ASSIGN expression TO expression DO • stmt

    BBEGIN       shift, and go to state 16
    IDENT_NAME   shift, and go to state 10
    INTEGER      shift, and go to state 39
    READ         shift, and go to state 40
    READLN       shift, and go to state 41
    WRITE        shift, and go to state 42
    WRITELN      shift, and go to state 43
    MEMORYREAD   shift, and go to state 44
    MEMORYWRITE  shift, and go to state 45
    STACKREAD    shift, and go to state 46
    STACKWRITE   shift, and go to state 47
    IF           shift, and go to state 48
    REPEAT       shift, and go to state 49
    WHILE        shift, and go to state 50
    CASE         shift, and go to state 51
    FOR          shift, and go to state 52
    GOTO         shift, and go to state 53
    BREAK        shift, and go to state 54
    CONTINUE     shift, and go to state 55

    BBEGIN       [reduce using rule 100 (repeat_stmt)]
    IDENT_NAME   [reduce using rule 100 (repeat_stmt)]
    INTEGER      [reduce using rule 100 (repeat_stmt)]
    READ         [reduce using rule 100 (repeat_stmt)]
    READLN       [reduce using rule 100 (repeat_stmt)]
    WRITE        [reduce using rule 100 (repeat_stmt)]
    WRITELN      [reduce using rule 100 (repeat_stmt)]
    MEMORYREAD   [reduce using rule 100 (repeat_stmt)]
    MEMORYWRITE  [reduce using rule 100 (repeat_stmt)]
    STACKREAD    [reduce using rule 100 (repeat_stmt)]
    STACKWRITE   [reduce using rule 100 (repeat_stmt)]
    IF           [reduce using rule 100 (repeat_stmt)]
    REPEAT       [reduce using rule 100 (repeat_stmt)]
    WHILE        [reduce using rule 100 (repeat_stmt)]
    CASE         [reduce using rule 100 (repeat_stmt)]
    FOR          [reduce using rule 100 (repeat_stmt)]
    GOTO         [reduce using rule 100 (repeat_stmt)]
    BREAK        [reduce using rule 100 (repeat_stmt)]
    CONTINUE     [reduce using rule 100 (repeat_stmt)]
    $default     reduce using rule 100 (repeat_stmt)

    identifier     go to state 56
    compound_stmt  go to state 57
    stmt           go to state 306
    no_label_stmt  go to state 59
    assign_stmt    go to state 60
    goto_stmt      go to state 61
    if_stmt        go to state 62
    repeat_stmt    go to state 63
    while_stmt     go to state 64
    case_stmt      go to state 65
    for_stmt       go to state 66
    proc_stmt      go to state 67
    lvalue         go to state 68


State 303

  109 for_stmt: FOR identifier ASSIGN expression DOWNTO expression DO • stmt

    BBEGIN       shift, and go to state 16
    IDENT_NAME   shift, and go to state 10
    INTEGER      shift, and go to state 39
    READ         shift, and go to state 40
    READLN       shift, and go to state 41
    WRITE        shift, and go to state 42
    WRITELN      shift, and go to state 43
    MEMORYREAD   shift, and go to state 44
    MEMORYWRITE  shift, and go to state 45
    STACKREAD    shift, and go to state 46
    STACKWRITE   shift, and go to state 47
    IF           shift, and go to state 48
    REPEAT       shift, and go to state 49
    WHILE        shift, and go to state 50
    CASE         shift, and go to state 51
    FOR          shift, and go to state 52
    GOTO         shift, and go to state 53
    BREAK        shift, and go to state 54
    CONTINUE     shift, and go to state 55

    BBEGIN       [reduce using rule 100 (repeat_stmt)]
    IDENT_NAME   [reduce using rule 100 (repeat_stmt)]
    INTEGER      [reduce using rule 100 (repeat_stmt)]
    READ         [reduce using rule 100 (repeat_stmt)]
    READLN       [reduce using rule 100 (repeat_stmt)]
    WRITE        [reduce using rule 100 (repeat_stmt)]
    WRITELN      [reduce using rule 100 (repeat_stmt)]
    MEMORYREAD   [reduce using rule 100 (repeat_stmt)]
    MEMORYWRITE  [reduce using rule 100 (repeat_stmt)]
    STACKREAD    [reduce using rule 100 (repeat_stmt)]
    STACKWRITE   [reduce using rule 100 (repeat_stmt)]
    IF           [reduce using rule 100 (repeat_stmt)]
    REPEAT       [reduce using rule 100 (repeat_stmt)]
    WHILE        [reduce using rule 100 (repeat_stmt)]
    CASE         [reduce using rule 100 (repeat_stmt)]
    FOR          [reduce using rule 100 (repeat_stmt)]
    GOTO         [reduce using rule 100 (repeat_stmt)]
    BREAK        [reduce using rule 100 (repeat_stmt)]
    CONTINUE     [reduce using rule 100 (repeat_stmt)]
    $default     reduce using rule 100 (repeat_stmt)

    identifier     go to state 56
    compound_stmt  go to state 57
    stmt           go to state 307
    no_label_stmt  go to state 59
    assign_stmt    go to state 60
    goto_stmt      go to state 61
    if_stmt        go to state 62
    repeat_stmt    go to state 63
    while_stmt     go to state 64
    case_stmt      go to state 65
    for_stmt       go to state 66
    proc_stmt      go to state 67
    lvalue         go to state 68


State 304

   62 array_type_decl: ARRAY LB simple_type RB OF type_decl •

    $default  reduce using rule 62 (array_type_decl)


State 305

   26 params_type: VAR name_list COLON simple_type •

    $default  reduce using rule 26 (params_type)


State 306

  108 for_stmt: FOR identifier ASSIGN expression TO expression DO stmt •

    $default  reduce using rule 108 (for_stmt)


State 307

  109 for_stmt: FOR identifier ASSIGN expression DOWNTO expression DO stmt •

    $default  reduce using rule 109 (for_stmt)
